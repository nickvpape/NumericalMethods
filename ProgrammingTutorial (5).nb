(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    426749,       9386]
NotebookOptionsPosition[    381338,       8315]
NotebookOutlinePosition[    381695,       8331]
CellTagsIndexPosition[    381652,       8328]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Programming Tutorial
David Meretzky
385-685
8.27.17\
\>", "Title",
 CellChangeTimes->{{3.712779858237769*^9, 
  3.7127798905889482`*^9}},ExpressionUUID->"5d0f5b30-2099-4844-89a3-\
ec0cdbcd7e31"],

Cell[CellGroupData[{

Cell["\<\
Section 1. 
Variable Assignment and Built in Functions\
\>", "Section",
 CellChangeTimes->{{3.712779898516843*^9, 3.712779910636368*^9}, {
  3.7127822286673603`*^9, 
  3.712782233131263*^9}},ExpressionUUID->"0272b320-a4e0-4e50-97f6-\
bf5c0bef0817"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Inside", " ", "of", " ", "the", " ", "parentheses", " ", "and", " ", 
   "stars", " ", "are", " ", 
   RowBox[{"comments", ".", " ", "Read"}], " ", "these", " ", "before", " ", 
   "you", " ", "evaluate", " ", "the", " ", "actual", " ", "code", " ", 
   "which", " ", "is", " ", "in", " ", "black", " ", "and", " ", 
   RowBox[{"blue", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712779933875134*^9, 3.712779979035165*^9}, 
   3.7129285328760633`*^9},ExpressionUUID->"1319050f-711b-4b4e-9ff5-\
bd035f2df9c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Below", ",", " ", 
    RowBox[{
    "we", " ", "are", " ", "assigning", " ", "a", " ", "value", " ", "to", 
     " ", "a", " ", "variable", " ", 
     RowBox[{"x", ".", " ", "In"}], " ", "this", " ", "language", " ", 
     "variables", " ", "should", " ", "be", " ", "named", " ", "with", " ", 
     "lower", " ", "case", " ", 
     RowBox[{"names", ".", "  ", "If"}], " ", "we", " ", "have", " ", "a", 
     " ", "variable", " ", "name", " ", "with", " ", "more", " ", "than", " ",
      "one", " ", "word"}], ",", " ", 
    RowBox[{
    "you", " ", "are", " ", "encouraged", " ", "to", " ", "name", " ", "it", 
     " ", "by", " ", "concatenating", " ", "the", " ", "two", " ", "words", 
     " ", "and", " ", "capitalizing", " ", "the", " ", "second", " ", 
     RowBox[{"word", ":", " ", 
      RowBox[{"secondVariable", " ", "or", " ", 
       RowBox[{"firstVariable", "."}]}]}]}]}], "  ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Into", " ", "the", " ", "variable", " ", "x"}], ",", " ", 
    RowBox[{
     RowBox[{
     "we", " ", "are", " ", "placing", " ", "the", " ", "value", " ", "2.", "  ",
       "All", " ", "of", " ", "the", " ", "lines", " ", "in", " ", "your", 
      " ", "program", " ", "should", " ", "end", " ", "in", " ", "a", " ", 
      "semi"}], "-", 
     RowBox[{
     "colon", " ", "to", " ", "supress", " ", "the", " ", "output", " ", 
      "and", " ", "to", " ", "separate", " ", 
      RowBox[{"statements", ".", " ", "You"}], " ", "will", " ", "get", " ", 
      "a", " ", "better", " ", "feel", " ", "for", " ", "their", " ", "use", 
      " ", "but", " ", "for", " ", "now", " ", "try", " ", "to", " ", "put", 
      " ", "them", " ", "at", " ", "the", " ", "end", " ", "of", " ", "every",
       " ", 
      RowBox[{"statement", ".", " ", "Evaluate"}], " ", "the", " ", "cell", 
      " ", "by", " ", "clicking", " ", "inside", " ", "of", " ", "the", " ", 
      "cell", " ", "and", " ", "using", " ", "shift", " ", "and", " ", 
      "enter", " ", 
      RowBox[{"together", ".", " ", "Notice"}], " ", "that", " ", "before", 
      " ", "we", " ", "evaluate", " ", "the", " ", "cell"}]}], ",", " ", 
    RowBox[{"the", " ", "variable", " ", "x", " ", "is", " ", 
     RowBox[{"blue", "."}]}]}], " ", "\[IndentingNewLine]", "*)"}]}]], "Input",\

 CellChangeTimes->{{3.712779690630312*^9, 3.712779755790702*^9}, {
  3.71277982995865*^9, 3.712779848165928*^9}, {3.712779924068343*^9, 
  3.71277992642069*^9}, {3.712779982388506*^9, 3.712780092272608*^9}, {
  3.712780187432316*^9, 3.712780259205504*^9}, {3.712780446287259*^9, 
  3.712780503148386*^9}, {3.712928543427917*^9, 
  3.71292856314565*^9}},ExpressionUUID->"2c6fbe91-a25e-4429-9340-\
e8ceacf88174"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", "=", " ", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.712767459593504*^9, 3.71276747313765*^9}, {
  3.712767521366081*^9, 3.712767582713077*^9}, {3.712781033202977*^9, 
  3.7127810352973843`*^9}},ExpressionUUID->"6077afb1-ddb3-4737-8444-\
46a9b43969c1"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"If", " ", "you", " ", "evaluated", " ", "the", " ", "cell"}], ",",
    " ", 
   RowBox[{"x", " ", "should", " ", "turn", " ", 
    RowBox[{"black", ".", " ", "This"}], " ", "means", " ", "that", " ", 
    "the", " ", "variable", " ", "now", " ", "contains", " ", "a", " ", 
    RowBox[{"value", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7127798186715117`*^9, 3.712779825774645*^9}, 
   3.712779917620619*^9, {3.71278026591838*^9, 3.712780285220448*^9}, {
   3.712780566840439*^9, 
   3.7127805893733587`*^9}},ExpressionUUID->"15715a52-0407-471f-8a63-\
f8eb9fa9865d"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Functions", " ", "in", " ", "Mathematica", " ", "that", " ", "are", " ", 
   "a", " ", "part", " ", "of", " ", "the", " ", "standard", " ", "library", 
   " ", "of", " ", "functions", " ", "will", " ", "usually", " ", "be", " ", 
   RowBox[{"capitalized", ".", " ", "It"}], " ", "would", " ", "be", " ", "a",
    " ", "bad", " ", "idea", " ", "to", " ", "try", " ", "to", " ", "use", 
   " ", "any", " ", "of", " ", "these", " ", "functions", " ", "as", " ", 
   "variable", " ", 
   RowBox[{"names", ".", " ", "Evaluate"}], " ", "the", " ", "following", " ",
    "code", " ", "to", " ", "see", " ", "the", " ", "error", " ", 
   RowBox[{"message", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712780357089407*^9, 3.71278043310947*^9}, {
  3.7127806591878347`*^9, 
  3.712780664851425*^9}},ExpressionUUID->"db16ad43-e3f4-4bbe-b3b4-\
108721b770a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", " ", "=", " ", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.712780420518227*^9, 
  3.712780434910812*^9}},ExpressionUUID->"866814a7-8e29-4b66-86b7-\
33f639840d13"],

Cell[BoxData[
 TemplateBox[{
  "Set","wrsym",
   "\"Symbol \\!\\(\\*RowBox[{\\\"Print\\\"}]\\) is Protected.\"",2,90,4,
   29327214154402834272,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.712780422635356*^9, 3.7127807829618597`*^9, 
  3.712781037398694*^9, 
  3.713052730303418*^9},ExpressionUUID->"edbfd6c2-4b6a-4cb2-862b-\
4107981d3568"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "The", " ", "usual", " ", "syntax", " ", "for", " ", "using", " ", 
     "functions", " ", "in", " ", "Mathematica", " ", 
     RowBox[{"is", ":", "\[IndentingNewLine]", " ", 
      RowBox[{"Function", "[", "arg", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"arg", " ", "is", " ", "short", " ", "for", " ", "argument"}]}], 
   ",", " ", 
   RowBox[{
    RowBox[{
    "which", " ", "is", " ", "what", " ", "programmers", " ", "call", " ", 
     "the", " ", "input", " ", "of", " ", "a", " ", 
     RowBox[{"function", ".", " ", "Notice"}], " ", "that", " ", "the", " ", 
     "argument", " ", "of", " ", "the", " ", "function", " ", "is", " ", 
     "surrounded", " ", "by", " ", "square", " ", "brackets", " ", "which", 
     " ", "is", " ", "different", " ", "from", " ", "usual", " ", 
     "mathematical", " ", "notation", " ", "which", " ", "uses", " ", 
     RowBox[{"parenthesis", ".", " ", "\[IndentingNewLine]", " ", 
      RowBox[{"Print", "[", "x", "]"}]}]}], ";", " ", 
    RowBox[{
    "returns", " ", "the", " ", "value", " ", "of", " ", "x", " ", "to", " ", 
     "the", " ", "screen", " ", "in", " ", "an", " ", "output", " ", 
     RowBox[{"cell", ".", " ", "Notice"}], " ", "that", " ", "a", " ", "new", 
     " ", "cell", " ", "is", " ", "born", " ", "containing", " ", "2."}]}]}], 
  "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.712779760648069*^9, 3.712779813654912*^9}, {
  3.7127806069022093`*^9, 3.7127807541862*^9}, {3.712780789409216*^9, 
  3.7127808218260813`*^9}},ExpressionUUID->"898d5493-2f47-4ad0-85e5-\
4f1c8eb567e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", "x", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712767606462682*^9, 3.71276761086574*^9}, 
   3.712780775089746*^9},ExpressionUUID->"a9e2158a-1208-4c61-b21c-\
8423e599c70e"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.712767612799119*^9, {3.712780776027588*^9, 3.712780785138831*^9}, 
   3.712781039885418*^9, 
   3.713052730389935*^9},ExpressionUUID->"0f6a5b4a-291c-48c1-9850-\
8ceb752153a5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "The", " ", "Print", " ", "function", " ", "is", " ", "smart", " ", 
     "enough", " ", "to", " ", "know", " ", "not", " ", "to", " ", "supress", 
     " ", "the", " ", "output", " ", "even", " ", "if", " ", "there", " ", 
     "is", " ", "a", " ", "semi"}], "-", 
    RowBox[{
     RowBox[{"colon", ".", " ", "Notice"}], " ", "that", " ", "if", " ", "we",
      " ", "evaluate", " ", "the", " ", "following"}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "we", " ", "get", " ", "the", " ", "same", " ", "output", " ", "as", 
       " ", 
       RowBox[{"Print", "[", "x", "]"}]}], ";"}], ".", " ", "Unless"}], " ", 
    "the", " ", "statements", " ", "are", " ", "really", " ", "simple"}], ",",
    " ", 
   RowBox[{
   "it", " ", "is", " ", "a", " ", "good", " ", "habit", " ", "to", " ", 
    "just", " ", "use", " ", "the", " ", "print", " ", "function", " ", "to", 
    " ", "print", " ", "things", " ", "for", " ", "now", " ", "and", " ", 
    "always", " ", "use", " ", 
    RowBox[{"semicolons", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127808242828093`*^9, 3.7127808869670057`*^9}, {
  3.712781129512596*^9, 
  3.712781139117852*^9}},ExpressionUUID->"f443ecc6-fab5-4fc5-98dc-\
364c3fe40d06"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{
  3.712780840488225*^9},ExpressionUUID->"1b0ce429-0950-4495-a644-\
bd0b43c5efec"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.712781041485839*^9, 
  3.713052730471447*^9},ExpressionUUID->"bf0acc16-4d85-4a68-84bd-\
24ec0649f5c0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Just", " ", "like", " ", "in", " ", "math", " ", "we", " ", "can", " ", 
   "make", " ", "use", " ", "of", " ", 
   RowBox[{"Mathematica", "'"}], "s", " ", "functions", " ", "to", " ", "use",
    " ", "x", " ", "as", " ", "a", " ", "replacement", " ", "for", " ", 
   "what", " ", "it", " ", 
   RowBox[{"contains", ".", " ", "Evaluate"}], " ", "the", " ", "next", " ", 
   "few", " ", "cells", " ", "to", " ", "get", " ", "a", " ", "feel", " ", 
   "for", " ", 
   RowBox[{"this", ":"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712781043044141*^9, 
  3.712781110742313*^9}},ExpressionUUID->"05e23510-745e-458a-9c59-\
46d7207b35a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"x", " ", "+", " ", "3"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.71278108278487*^9, 3.712781091839521*^9}, {
  3.7127811522061977`*^9, 
  3.7127811527173643`*^9}},ExpressionUUID->"545d47b7-e0c6-4ded-bd25-\
d6a7a64c6781"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.712781148392625*^9, 3.7127811540326033`*^9}, 
   3.7130527305146*^9},ExpressionUUID->"9522c64f-e78f-49c3-a8b3-dc2d15c3d400"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "+", " ", "3"}]], "Input",
 CellChangeTimes->{{3.712781093967008*^9, 3.712781095153144*^9}, {
  3.7127811455977497`*^9, 
  3.712781151001617*^9}},ExpressionUUID->"911fba58-6c9f-40c7-8307-\
f68d263b01da"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.712781146950683*^9, 3.712781155512862*^9}, 
   3.713052730554563*^9},ExpressionUUID->"ed242efe-a314-4a8c-9d81-\
450274f6669c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"x", " ", "^", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7127811574832277`*^9, 
  3.712781163277306*^9}},ExpressionUUID->"12b1e2b9-9d62-4be2-80df-\
8c0cf8f5268b"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.712781163665224*^9, 
  3.713052730584366*^9},ExpressionUUID->"c6fee4ed-108c-4b15-867c-\
0c6fdf6d3769"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], " ", "+", " ", "x", " ", "+", " ", "6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.712781164976098*^9, 
  3.7127811852210484`*^9}},ExpressionUUID->"0add1bea-668b-4ec2-8480-\
e236f097f1b3"],

Cell[BoxData["12"], "Print",
 CellChangeTimes->{3.7127811870486403`*^9, 
  3.713052730608432*^9},ExpressionUUID->"eb18d7b9-3bf8-4ec5-9bc3-\
bd33533dd60a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"x", " ", "*", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.712781191738799*^9, 
  3.71278119660455*^9}},ExpressionUUID->"cee55851-f727-4aaa-a024-\
df8f9c479d56"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.712781197538096*^9, 
  3.713052730655098*^9},ExpressionUUID->"0c644b70-aab4-4a74-af8e-\
99081acaced3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "If", " ", "we", " ", "execute", " ", "the", " ", "following", " ", "code",
     " ", "we", " ", "clear", " ", "the", " ", "value", " ", "of", " ", "the",
     " ", "symbol", " ", "x", " ", "and", " ", "then", " ", "we", " ", 
    "print", " ", 
    RowBox[{"it", ".", " ", "If"}], " ", "you", " ", "look", " ", "on", " ", 
    "the", " ", "right", " ", "you", " ", "will", " ", "notice", " ", "that", 
    " ", "these", " ", "two", " ", "statements", " ", "are", " ", "both", " ",
     "in", " ", "the", " ", "same", " ", 
    RowBox[{"cell", ".", " ", "Clicking"}], " ", "inside", " ", "the", " ", 
    "cell", " ", "anywhere", " ", "and", " ", "pressing", " ", "shift", " ", 
    "enter", " ", "will", " ", "evaluate", " ", "all", " ", "statements", " ",
     "from", " ", "top", " ", "to", " ", 
    RowBox[{"bottom", ".", " ", "First"}], " ", "we", " ", "clear", " ", 
    "the", " ", "value", " ", "of", " ", "the", " ", "variable", " ", "x"}], 
   ",", " ", 
   RowBox[{
    RowBox[{"then", " ", "we", " ", "print", " ", 
     RowBox[{"it", ".", "  ", "This"}], " ", "is", " ", "our", " ", "first", 
     " ", "multi"}], "-", 
    RowBox[{"line", " ", 
     RowBox[{"cell", ".", " ", "In"}], " ", "fact", " ", "most", " ", "of", 
     " ", "the", " ", "time", " ", "you", " ", "will", " ", "have", " ", 
     "cells", " ", "that", " ", "have", " ", "many", " ", "things", " ", 
     "inside", " ", "of", " ", 
     RowBox[{"them", "."}]}]}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127802927350597`*^9, 3.712780343863165*^9}, {
  3.7127809004714317`*^9, 3.7127810120804787`*^9}, {3.7127812237317266`*^9, 
  3.712781251179289*^9}},ExpressionUUID->"d1cf3de0-2a94-4851-bfcc-\
a8cc148cefb3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "x", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712780345312952*^9, 3.7127803493847313`*^9}, {
  3.712780908245809*^9, 
  3.712780911934958*^9}},ExpressionUUID->"40f9beaf-2aee-4bb9-812b-\
d856bff435a2"],

Cell[BoxData["x"], "Print",
 CellChangeTimes->{3.712780913454461*^9, 3.712781365011486*^9, 
  3.7130527306956167`*^9},ExpressionUUID->"4b17bec3-d485-4585-9c65-\
d02b95cf2846"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Now", " ", "what", " ", "happens", " ", "if", " ", "we", " ", "evaluate", 
   " ", "the", " ", "previous", " ", "string", " ", "of", " ", "familiar", 
   " ", "computations", " ", "on", " ", 
   RowBox[{"x", "?"}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127812076177187`*^9, 3.712781219196068*^9}, {
  3.712781333460103*^9, 
  3.712781354763571*^9}},ExpressionUUID->"4a524d9e-a1c7-4185-802a-\
718727fb2a2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"x", " ", "+", " ", "3"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.71278108278487*^9, 3.712781091839521*^9}, {
  3.7127811522061977`*^9, 
  3.7127811527173643`*^9}},ExpressionUUID->"486e60cf-3e8b-4e82-9fa8-\
23c8cbc9d0d4"],

Cell[BoxData[
 RowBox[{"3", "+", "x"}]], "Print",
 CellChangeTimes->{{3.712781148392625*^9, 3.7127811540326033`*^9}, 
   3.7127813695382137`*^9, 
   3.713052730770851*^9},ExpressionUUID->"8f72b950-95d2-4197-bd9c-\
14b2895710d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "+", " ", "3"}]], "Input",
 CellChangeTimes->{{3.712781093967008*^9, 3.712781095153144*^9}, {
  3.7127811455977497`*^9, 
  3.712781151001617*^9}},ExpressionUUID->"814445a2-ce72-4ae1-aa60-\
dba47b505c80"],

Cell[BoxData[
 RowBox[{"3", "+", "x"}]], "Output",
 CellChangeTimes->{{3.712781146950683*^9, 3.712781155512862*^9}, 
   3.712781370690196*^9, 
   3.713052730802718*^9},ExpressionUUID->"669416ea-4b79-40de-9ac3-\
0dd3aab97458"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"x", " ", "^", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7127811574832277`*^9, 
  3.712781163277306*^9}},ExpressionUUID->"4bbd32e8-ad39-497b-82da-\
7965a9c60d30"],

Cell[BoxData[
 SuperscriptBox["x", "2"]], "Print",
 CellChangeTimes->{3.712781163665224*^9, 3.7127813729155397`*^9, 
  3.7130527308257103`*^9},ExpressionUUID->"a0957db4-ff49-4946-a7b4-\
ea22a1adb81d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], " ", "+", " ", "x", " ", "+", " ", "6"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.712781164976098*^9, 
  3.7127811852210484`*^9}},ExpressionUUID->"3a505a2e-41e6-4f6e-907a-\
9d7192f1abf1"],

Cell[BoxData[
 RowBox[{"6", "+", "x", "+", 
  SuperscriptBox["x", "2"]}]], "Print",
 CellChangeTimes->{3.7127811870486403`*^9, 3.7127813745097723`*^9, 
  3.713052730871352*^9},ExpressionUUID->"ff005bfa-8b25-43e5-a4f9-\
1a90397a1dc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "*", " ", "x"}]], "Input",
 CellChangeTimes->{{3.712781191738799*^9, 3.71278119660455*^9}, {
  3.712781381454502*^9, 
  3.712781383067122*^9}},ExpressionUUID->"e6d81b4a-203f-4a3c-9951-\
9ebf65cbb49b"],

Cell[BoxData[
 SuperscriptBox["x", "2"]], "Output",
 CellChangeTimes->{3.712781385433037*^9, 
  3.713052730902145*^9},ExpressionUUID->"7990abc9-d7b9-4922-9088-\
1292355fae94"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "We", " ", "also", " ", "have", " ", "examples", " ", "of", " ", "some", 
    " ", "more", " ", "exciting", " ", 
    RowBox[{"functions", ":", " ", "Log"}]}], ",", " ", "Cos", ",", " ", 
   RowBox[{
    RowBox[{"Sin", ".", " ", "We"}], " ", "are", " ", "also", " ", "given", 
    " ", "values", " ", "for", " ", "familiar", " ", "mathematical", " ", 
    "constants", " ", "like", " ", "Pi"}], ",", " ", "E", ",", " ", 
   RowBox[{"and", " ", 
    RowBox[{"I", ".", " ", "Notice"}], " ", "that", " ", "they", " ", "are", 
    " ", 
    RowBox[{"capitalized", ".", " ", "Dont"}], " ", "try", " ", "to", " ", 
    "use", " ", "them", " ", "as", " ", 
    RowBox[{"variables", ".", " ", "Use"}], " ", "them", " ", "for", " ", 
    "what", " ", "they", " ", "are"}], ",", " ", 
   RowBox[{"numbers", " ", "of", " ", "different", " ", 
    RowBox[{"sorts", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127813936810713`*^9, 3.712781471049416*^9}, {
  3.7127815047622957`*^9, 3.712781604438531*^9}, {3.7127818385562153`*^9, 
  3.712781845356842*^9}},ExpressionUUID->"dc1eb90a-9b7c-4ca5-bd23-\
acfe6e060ceb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{
   RowBox[{"1", "/", "4"}], "*", "Pi"}], "]"}]], "Input",
 CellChangeTimes->{{3.712781618904797*^9, 
  3.712781648781068*^9}},ExpressionUUID->"c5599b2f-8c07-4702-a6b0-\
54e7addb7990"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{{3.7127816209171333`*^9, 3.712781649105419*^9}, 
   3.713052730968769*^9},ExpressionUUID->"57b19ec4-506b-4bf5-b68a-\
403a2f1b96f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "E", "]"}]], "Input",
 CellChangeTimes->{{3.712781480973991*^9, 
  3.712781492632333*^9}},ExpressionUUID->"d739cee2-5d57-4de2-a257-\
04b509976977"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.712781622403433*^9, 
  3.7130527310037727`*^9},ExpressionUUID->"b3891d98-f25f-4c48-bb19-\
fece8861814a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I", "^", "2"}]], "Input",
 CellChangeTimes->{{3.7127815290651093`*^9, 
  3.712781532327512*^9}},ExpressionUUID->"5d26ff58-7475-4ab7-8183-\
2134ff852f21"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.712781624126976*^9, 
  3.7130527310355864`*^9},ExpressionUUID->"2cb2b2f6-21f9-4545-a672-\
0c2240df9337"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "N", " ", "is", " ", "a", " ", "function", " ", "that", " ", "returns", 
    " ", "the", " ", "numerical", " ", "values", " ", "of", " ", "the", " ", 
    "first", " ", "argument", " ", "to", " ", "the", " ", "degree", " ", "of",
     " ", "precision", " ", "as", " ", "specified", " ", "by", " ", 
    RowBox[{"it", "'"}], "s", " ", "second", " ", 
    RowBox[{"argument", ".", " ", "If"}], " ", "a", " ", "function", " ", 
    "has", " ", "more", " ", "than", " ", "one", " ", "argument"}], ",", " ", 
   
   RowBox[{"they", " ", "will", " ", "be", " ", "seperated", " ", "by", " ", 
    RowBox[{"commas", "."}]}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.712781661542541*^9, 3.712781746562909*^9}, {
  3.712782451465287*^9, 
  3.7127824680507383`*^9}},ExpressionUUID->"48d60430-00a2-499f-b49a-\
2236a9976b18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"E", ",", " ", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.712781700322528*^9, 
  3.712781707231329*^9}},ExpressionUUID->"8412e480-ecfe-4abf-b0e8-\
75857a5d48e5"],

Cell[BoxData["2.7182818284590452353`1."], "Output",
 CellChangeTimes->{{3.7127817034677362`*^9, 3.712781708112351*^9}, 
   3.713052731110351*^9},ExpressionUUID->"e4374a5f-1074-4814-a840-\
f670d3344039"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"E", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.712781778468649*^9, 
  3.712781778570036*^9}},ExpressionUUID->"b79c0263-b900-4694-8dec-\
f797a4ccfbbf"],

Cell[BoxData["2.7182818284590452353`2."], "Output",
 CellChangeTimes->{3.712781778830901*^9, 
  3.713052731134699*^9},ExpressionUUID->"bf2b45b5-9170-4494-ae5d-\
9fa5e74c0737"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"E", ",", " ", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.71278175266917*^9, 
  3.712781755474655*^9}},ExpressionUUID->"5c6ce930-50bd-4a1f-b6c4-\
b113a53ff50c"],

Cell[BoxData["2.7182818284590452353`5."], "Output",
 CellChangeTimes->{{3.7127817532088346`*^9, 3.712781773060239*^9}, 
   3.713052731169383*^9},ExpressionUUID->"5acb224a-e3f0-476b-92e8-\
ff4a5d790842"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"E", ",", " ", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7127817602130423`*^9, 
  3.7127817617306128`*^9}},ExpressionUUID->"f69ce314-1884-42e8-9719-\
ea782260bf3c"],

Cell[BoxData["2.71828182845904523531974789074538989553`10."], "Output",
 CellChangeTimes->{3.712781762847364*^9, 
  3.713052731202717*^9},ExpressionUUID->"b47ed793-32a3-4717-945c-\
872c6f0838b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"E", ",", " ", "100"}], "]"}]], "Input",
 CellChangeTimes->{
  3.712781769076818*^9},ExpressionUUID->"39755c6e-8060-4bf8-b809-\
8b053b53a105"],

Cell[BoxData["2.\
718281828459045235360287471352662497757247093699959574966967627724076630353547\
5945713821785251664274274661651602106`100."], "Output",
 CellChangeTimes->{3.712781769655649*^9, 
  3.713052731235196*^9},ExpressionUUID->"ff15b642-214a-492a-be5f-\
460eebdf357a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "You", " ", "should", " ", "be", " ", "able", " ", "to", " ", "guess", " ",
     "what", " ", "the", " ", "function", " ", "D", " ", "does", " ", "based",
     " ", "on", " ", "its", " ", "output", " ", "and", " ", 
    RowBox[{"arguments", ".", " ", "Here"}], " ", "I", " ", "am", " ", 
    "creating", " ", "a", " ", "second", " ", "degree", " ", "polynomial", 
    " ", "out", " ", "of", " ", "the", " ", "unassigned", " ", "variable", 
    " ", "x"}], ",", " ", 
   RowBox[{
   "and", " ", "putting", " ", "it", " ", "into", " ", "the", " ", "variable",
     " ", 
    RowBox[{"poly1", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127818009665422`*^9, 
  3.712781924855276*^9}},ExpressionUUID->"fc6ecd49-1b91-4347-811f-\
568feee389d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"poly1", " ", "=", " ", 
   RowBox[{
    RowBox[{"x", "^", "2"}], " ", "+", " ", "x", " ", "+", " ", "6"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"poly1", ",", " ", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.712781863719166*^9, 3.71278188097628*^9}, {
  3.712781926470908*^9, 
  3.712781933286763*^9}},ExpressionUUID->"739f4a7e-a90b-41fc-9643-\
43baddc9ae27"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.712781936738316*^9, 
  3.7130527312905893`*^9},ExpressionUUID->"684c596b-9d28-40fa-9392-\
e411501da06d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"There", "!"}], " ", "We", " ", "have", " ", "successfully", " ", 
   "differentiated", " ", "a", " ", "symbolic", " ", 
   RowBox[{"expression", "!"}], " ", "Symbolic", " ", "manipulation", " ", 
   "and", " ", "computation", " ", "is", " ", "one", " ", "of", " ", 
   RowBox[{"Mathematica", "'"}], "s", " ", "strong", " ", 
   RowBox[{"suits", ".", " ", 
    RowBox[{"(", 
     RowBox[{
     "If", " ", "you", " ", "play", " ", "around", " ", "in", " ", "the", " ",
       "Demonstrations", " ", "and", " ", "Documentation", " ", "that", " ", 
      "we", " ", "talked", " ", "about", " ", "in", " ", "class", " ", "see", 
      " ", "if", " ", "you", " ", "can", " ", "figure", " ", "out", " ", 
      "how", " ", "to", " ", "use", " ", "the", " ", "functions", " ", "that",
       " ", "will", " ", "compute", " ", "limits", " ", "for", " ", 
      RowBox[{"you", "."}]}], ")"}]}], " ", "You", " ", "may", " ", "have", 
   " ", "guessed", " ", "just", " ", "now", " ", "that", " ", "D", " ", "is", 
   " ", "the", " ", "differentiation", " ", "function", " ", 
   RowBox[{"who", "'"}], "s", " ", "second", " ", "argument", " ", "is", " ", 
   "the", " ", "variable", " ", "we", " ", "are", " ", "differentiating", " ",
    "with", " ", "respect", " ", 
   RowBox[{"to", ".", " ", "To"}], " ", "quote", " ", "Ron", " ", 
   RowBox[{"Swanson", ":", " ", 
    RowBox[{
     RowBox[{"You", "'"}], "d", " ", "be", " ", 
     RowBox[{
     "right", ".", "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "Now"}], " ", "what", " ", "happens", " ", "if", " ", "we", " ", 
     RowBox[{"say", ":"}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712781944701807*^9, 3.7127819651980343`*^9}, {
  3.712782489298834*^9, 3.712782611245681*^9}, {3.712782704377879*^9, 
  3.712782749765971*^9}},ExpressionUUID->"0430d948-65fb-4bb3-8abe-\
de2371ac32f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"poly1", " ", "=", " ", 
   RowBox[{
    RowBox[{"x", "^", "2"}], " ", "+", " ", "x", " ", "+", " ", "6"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"poly1", ",", " ", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7127819584568996`*^9, 
  3.71278196096653*^9}},ExpressionUUID->"69d891af-2e60-44b7-92a7-\
9479a7f263c3"],

Cell[BoxData[
 TemplateBox[{
  "General","ivar",
   "\"\\!\\(\\*RowBox[{\\\"2\\\"}]\\) is not a valid variable.\"",2,126,5,
   29327214154402834272,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7127820082167263`*^9, 
  3.71305273136961*^9},ExpressionUUID->"b8e2539c-d825-42e7-9886-bbd820a97647"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", "2"], "12"}]], "Output",
 CellChangeTimes->{3.7127820082241173`*^9, 
  3.7130527313888903`*^9},ExpressionUUID->"6e736927-d544-49c2-bbd6-\
65d4314fc6d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Forensics", "Subsection",
 CellChangeTimes->{{3.712786372332988*^9, 
  3.712786373769704*^9}},ExpressionUUID->"2ca35a84-5440-47ce-825a-\
49690588c63e"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"We", " ", "got", " ", "an", " ", "error", " ", 
   RowBox[{"message", ".", " ", "You"}], " ", "should", " ", "be", " ", 
   "asking", " ", "at", " ", "this", " ", 
   RowBox[{"point", ":", " ", 
    RowBox[{
     RowBox[{"Why", " ", "did", " ", "we", " ", "get", " ", "an", " ", 
      RowBox[{"error", "?", " ", "Should"}], " ", "we", " ", "not", " ", 
      "have", " ", "just", " ", "gotten", " ", "0", " ", "by", " ", 
      "differentiating", " ", "12", "  ", 
      RowBox[{"(", 
       RowBox[{
       "the", " ", "value", " ", "of", " ", "that", " ", "polynomial", " ", 
        "at", " ", "2"}], ")"}], " ", "with", " ", "respect", " ", "to", " ", 
      
      RowBox[{
      "x", "?", "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", "In"}], 
      " ", "this", " ", "case", " ", "the", " ", "first", " ", "thing", " ", 
      "we", " ", "have", " ", "done", " ", "is", " ", "to", " ", "assign", 
      " ", "x", " ", "the", " ", "value", " ", "2.", " ", "Our", " ", "poly", 
      " ", "variable", " ", "then", " ", "is", " ", "holding", " ", "the", 
      " ", "value", " ", "of", " ", "the", " ", "expression", " ", 
      RowBox[{"x", "^", "2"}]}], " ", "+", " ", "x", " ", "+", " ", 
     RowBox[{
     "6", " ", "which", " ", "is", " ", "equal", " ", "to", " ", "12.", " ", 
      "Then", " ", "on", " ", "the", " ", "3", "rd", " ", "line", " ", "we", 
      " ", "ask", " ", "mathematica", " ", "to", " ", "differentiate", " ", 
      "with", " ", "respect", " ", "to", " ", "x", " ", "which", " ", "again",
       " ", "is", " ", "just", " ", "2.", " ", "so", " ", "we", " ", "are", 
      " ", "equivaluently", " ", 
      RowBox[{"saying", ":"}]}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712782010014801*^9, 3.71278218135962*^9}, {
  3.71278262401385*^9, 
  3.7127826959718513`*^9}},ExpressionUUID->"a1a9a6c3-8b13-497d-9b07-\
1608ba277683"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"12", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7127821830763903`*^9, 
  3.712782185439084*^9}},ExpressionUUID->"8227a2b3-2288-46b8-9b40-\
e41cdb4deff0"],

Cell[BoxData[
 TemplateBox[{
  "General","ivar",
   "\"\\!\\(\\*RowBox[{\\\"2\\\"}]\\) is not a valid variable.\"",2,128,6,
   29327214154402834272,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.712782186133115*^9, 
  3.7130527314526463`*^9},ExpressionUUID->"bcb40f6a-c865-4482-ac5c-\
ecdeb38c089c"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", "2"], "12"}]], "Output",
 CellChangeTimes->{3.712782186140527*^9, 
  3.713052731472481*^9},ExpressionUUID->"dbb568fd-5aef-4e1a-89e9-\
9e36bf981d23"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A note on types:", "Subsection",
 CellChangeTimes->{{3.712786372332988*^9, 3.712786373769704*^9}, {
  3.712787930287718*^9, 
  3.712787936886322*^9}},ExpressionUUID->"6569bdcf-82ee-4edf-9807-\
b414c16530df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "If", " ", "something", " ", "is", " ", "going", " ", "wrong", " ", "for", 
    " ", 
    RowBox[{"you", ".", " ", "See"}], " ", "if", " ", "you", " ", "can", " ", 
    "follow", " ", "the", " ", "logic", " ", "and", " ", "values", " ", "of", 
    " ", "the", " ", "variables", " ", "at", " ", "each", " ", "step", " ", 
    "in", " ", "the", " ", 
    RowBox[{"program", ".", " ", "What"}], " ", "may", " ", "help", " ", 
    "you", " ", "the", " ", "most", " ", "is", " ", "to", " ", "break", " ", 
    "up", " ", "the", " ", "cell", " ", "into", " ", "multiple", " ", "cells",
     " ", "and", " ", "evaluate", " ", "each", " ", "one", " ", "at", " ", 
    "a", " ", "time", " ", "to", " ", "figure", " ", "out", " ", "where", " ",
     "you", " ", "have", " ", "gone", " ", "wrong", " ", 
    RowBox[{"exactly", ".", " ", "90"}], "%", " ", "of", " ", "the", " ", 
    "errors", " ", "will", " ", "come", " ", "from", " ", "putting", " ", 
    "something", " ", "of", " ", "the", " ", "wrong", " ", "data", " ", 
    "type", " ", "into", " ", "a", " ", "function", " ", "or", " ", 
    "scenario", " ", "which", " ", "calls", " ", "for", " ", "a", " ", 
    "different", " ", 
    RowBox[{"type", ".", " ", "The"}], " ", "Head", " ", "function", " ", 
    "will", " ", "tell", " ", "you", " ", "what", " ", "the", " ", "data", 
    " ", "type", " ", "of", " ", "its", " ", "argument", " ", 
    RowBox[{"is", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Head", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.712782773748947*^9, 
  3.712782904539834*^9}},ExpressionUUID->"5df38de1-a7e4-4ed5-83f2-\
2ba5965208fa"],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{3.712782880226816*^9, 
  3.71305273151943*^9},ExpressionUUID->"82c3dadd-9df1-4939-bd32-4818fe84b14f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"1", "/", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.712783184285596*^9, 
  3.712783189151745*^9}},ExpressionUUID->"2d4ff59d-572f-43c4-b242-\
44f5e12f7709"],

Cell[BoxData["Rational"], "Output",
 CellChangeTimes->{3.712783189497282*^9, 
  3.713052731562079*^9},ExpressionUUID->"d8b31909-81dc-403d-b551-\
5abb164c21c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "4.0", "]"}]], "Input",
 CellChangeTimes->{{3.712783083124063*^9, 
  3.71278308786764*^9}},ExpressionUUID->"b402aa6d-b131-4996-9620-\
cc0264f3d21d"],

Cell[BoxData["Real"], "Output",
 CellChangeTimes->{3.712783088580626*^9, 
  3.7130527316148376`*^9},ExpressionUUID->"2f8cd01f-60f4-46c9-b7b7-\
2329dbbc23ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"4", "+", 
   RowBox[{"4", "*", "I"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.712783133685103*^9, 
  3.712783140408868*^9}},ExpressionUUID->"c44bcdd7-1eba-499d-8f41-\
c6725e3db5f4"],

Cell[BoxData["Complex"], "Output",
 CellChangeTimes->{3.7127831411298523`*^9, 
  3.713052731664898*^9},ExpressionUUID->"6f2fbb1c-81a5-4934-a936-\
01932283ac6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"a", "^", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.712783164331554*^9, 
  3.712783171639844*^9}},ExpressionUUID->"b1dde261-e7c1-4235-bbeb-\
a83ea0d07dba"],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{{3.7127831680995703`*^9, 3.712783172381871*^9}, 
   3.713052731703158*^9},ExpressionUUID->"aa9d8930-4c99-41ec-b524-\
8aee0741aaa8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "You", " ", "wont", " ", "need", " ", "to", " ", "use", " ", "Head", " ", 
    "all", " ", "the", " ", "time", " ", "but", " ", "it", " ", "is", " ", 
    "good", " ", "to", " ", "be", " ", "aware", " ", "that", " ", "types", 
    " ", 
    RowBox[{"exist", ".", " ", "Mismatched"}], " ", "types", " ", "will", " ",
     "be", " ", "a", " ", "source", " ", "of", " ", "errors", " ", "in", " ", 
    "your", " ", "program", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "errors", " ", "in", " ", "your", " ", "program", " ", "are", " ", 
       "also", " ", "known", " ", "as", " ", "bugs"}], ")"}], ".", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "In"}], " ", "addition", " ", "to", " ", "creating", " ", "variables", 
    " ", "that", " ", "hold", " ", "integers", " ", "or", " ", "reals", " ", 
    "or", " ", "complex", " ", "numbers"}], ",", " ", 
   RowBox[{
   "there", " ", "are", " ", "other", " ", "things", " ", "a", " ", 
    "variable", " ", "can", " ", 
    RowBox[{"hold", ".", "  ", "To"}], " ", "name", " ", "a", " ", "few"}], 
   ",", " ", 
   RowBox[{"they", " ", "can", " ", "hold", " ", "booleans", " ", 
    RowBox[{"(", 
     RowBox[{
     "named", " ", "for", " ", "the", " ", "logician", " ", "George", " ", 
      "Boole"}], ")"}]}], ",", " ", 
   RowBox[{"strings", " ", 
    RowBox[{"(", 
     RowBox[{
     "short", " ", "for", " ", "strings", " ", "of", " ", "characters"}], 
     ")"}]}], ",", " ", 
   RowBox[{"lists", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"containers", ",", " ", 
       RowBox[{"essentially", " ", "tuples"}], ",", " ", 
       RowBox[{
       "that", " ", "may", " ", "hold", " ", "other", " ", "things", " ", 
        "inside", " ", "of", " ", "them"}]}], ")"}], ".", " ", "You"}], " ", 
    "could", " ", "even", " ", "have", " ", "lists", " ", "containing", " ", 
    RowBox[{"lists", ".", " ", "This"}], " ", "is", " ", "how", " ", 
    RowBox[{"(", 
     RowBox[{"in", " ", "this", " ", "language"}], ")"}], " ", "we", " ", 
    "will", " ", "describe", " ", 
    RowBox[{"matricies", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712783201193919*^9, 3.712783260227201*^9}, {
   3.712784122921238*^9, 3.712784133229981*^9}, {3.712784908887886*^9, 
   3.7127850320665407`*^9}, 
   3.713059544630596*^9},ExpressionUUID->"e7610343-0dce-41e5-9555-\
7d7bfeadab57"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Here", " ", "is", " ", "an", " ", "example", " ", "of", " ", "a", " ", 
    "string", " ", "of", " ", "characters", " ", "vs", " ", "a", " ", 
    "variable", " ", 
    RowBox[{"name", ".", " ", "They"}], " ", "are", " ", "enclosed", " ", 
    "in", " ", 
    RowBox[{"quotes", ".", " ", "My"}], " ", "dear", " ", "Eliza"}], ",", " ", 
   RowBox[{
   "We", " ", "can", " ", "type", " ", "plain", " ", "english", " ", "as", 
    " ", 
    RowBox[{"strings", "!"}], " ", 
    RowBox[{"(", 
     RowBox[{
     "This", " ", "is", " ", "an", " ", "example", " ", "from", " ", 
      "another", " ", "George", " ", 
      RowBox[{"B", ".", "'"}], "s", " ", "book", " ", "titled", " ", 
      "Pygmalion"}], ")"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712785070929991*^9, 3.712785105340324*^9}, {
  3.712785199579227*^9, 
  3.712785397494033*^9}},ExpressionUUID->"ef60db1f-30c3-4b38-afec-\
0c4ce02696b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", "=", " ", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.7127851324283657`*^9, 
  3.7127851337235193`*^9}},ExpressionUUID->"05a27c56-8cfc-4baf-9e4d-\
e269b3dee601"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", "x", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712785094527801*^9, 
  3.712785126916058*^9}},ExpressionUUID->"8741a064-949a-4f8a-9cbe-\
a0fbfc3b8c5a"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.712785125219316*^9, 3.712785127274767*^9}, 
   3.7130527318516283`*^9},ExpressionUUID->"5f0343fb-7500-490d-a1ea-\
e3ce8043f561"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.712785140900036*^9, 
  3.712785142492605*^9}},ExpressionUUID->"0b316738-91f0-48e4-a4f4-\
0b09c07ec34e"],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{3.712785143122676*^9, 
  3.713052731883378*^9},ExpressionUUID->"423cb3a1-2c48-44a0-a674-\
832213970ea0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", "\"\<x\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7127851087430067`*^9, 
  3.712785119531671*^9}},ExpressionUUID->"2fe50cb6-7fa7-410a-8e6e-\
30e3623c6ba5"],

Cell[BoxData["\<\"x\"\>"], "Print",
 CellChangeTimes->{3.7127851203398447`*^9, 
  3.713052731918043*^9},ExpressionUUID->"8eaecb7b-290c-47ae-9098-\
422f3ff004fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "\"\<x\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.712785148630209*^9, 
  3.71278515203481*^9}},ExpressionUUID->"74def726-c2c3-43e2-983b-\
ddba9b60aa5b"],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.712785152434886*^9, 
  3.7130527319505177`*^9},ExpressionUUID->"a4b2166d-f220-4e0f-8874-\
b154d0980eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "\"\<The rain in Spain falls mainly on the planes.\>\"",
   "]"}]], "Input",
 CellChangeTimes->{{3.7127851627392187`*^9, 
  3.7127851879140863`*^9}},ExpressionUUID->"23f0409e-ab0b-4bc3-bd50-\
28558e4e5d03"],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.712785193175476*^9, 
  3.713052731984007*^9},ExpressionUUID->"d0004758-200a-4dc1-8fbf-\
9f31213ff933"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.712783309348284*^9, 
  3.7127833099641123`*^9}},ExpressionUUID->"8ed1974a-1dfa-4b5c-bca5-\
6effc7b88fc4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Section 2. 
Booleans and If statements\
\>", "Section",
 CellChangeTimes->{{3.712779898516843*^9, 3.712779910636368*^9}, {
  3.7127822286673603`*^9, 3.712782233131263*^9}, {3.712782323961154*^9, 
  3.712782332633109*^9}, {3.712782911605081*^9, 3.7127829161866493`*^9}, {
  3.7127833265953693`*^9, 3.7127833300566473`*^9}, {3.7127840972382793`*^9, 
  3.712784105181843*^9}},ExpressionUUID->"f140666a-e7da-4291-8751-\
de3a531f6d36"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Booleans", " ", "are", " ", "truth", " ", 
    RowBox[{"values", ".", " ", "True"}], " ", "and", " ", "False", " ", 
    "are", " ", "built", " ", "in", " ", "values", " ", "much", " ", "the", 
    " ", "same", " ", "way", " ", "Pi", " ", "and", " ", "E"}], ",", " ", 
   RowBox[{"or", " ", "1"}], ",", " ", 
   RowBox[{"or", " ", "2"}], ",", 
   RowBox[{
    RowBox[{"or", " ", "3", " ", 
     RowBox[{"are", ".", "    ", "There"}], " ", "are", " ", "comparison", 
     " ", "operators"}], "  ", "<", " ", "and", " ", ">", " ", 
    RowBox[{"that", " ", "return", " ", "True", " ", "or", " ", 
     RowBox[{"False", ".", " ", "They"}], " ", "are"}]}], ",", " ", 
   RowBox[{"in", " ", "a", " ", "sense"}], ",", " ", 
   RowBox[{
    RowBox[{"questions", ".", " ", "What"}], " ", "are", " ", "some", " ", 
    "questions", " ", "we", " ", "can", " ", "ask", " ", "about", " ", 
    RowBox[{"numbers", "?"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712782335222973*^9, 3.712782436097958*^9}, {
   3.712782924477281*^9, 3.712782935138261*^9}, {3.712783335020274*^9, 
   3.7127835050002193`*^9}, {3.712783859368765*^9, 3.712783912982336*^9}, {
   3.712783975268654*^9, 3.712783977221282*^9}, 3.712784119913937*^9, {
   3.712784204257531*^9, 3.712784204945692*^9}, {3.712785047714508*^9, 
   3.7127850657536497`*^9}, {3.712785415775015*^9, 
   3.712785423924831*^9}},ExpressionUUID->"bea4afe8-e927-4058-932a-\
9679654517b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", " ", "<", " ", "2"}]], "Input",
 CellChangeTimes->{{3.712783453754911*^9, 3.7127834582412767`*^9}, {
  3.712783509087953*^9, 
  3.712783510608118*^9}},ExpressionUUID->"fac4382f-2c92-417a-b251-\
71323e048a55"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.712783511153417*^9, 
  3.7130527320619307`*^9},ExpressionUUID->"0a8fb271-5f88-4c67-b112-\
734c772da0f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", " ", "<", " ", "3"}]], "Input",
 CellChangeTimes->{{3.712783516755713*^9, 
  3.71278352023195*^9}},ExpressionUUID->"2cf8ee85-e560-46be-9568-\
cecfca91211b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7127835209039516`*^9, 
  3.713052732100774*^9},ExpressionUUID->"7e74cb57-5e64-43f3-a40c-\
8d9a88a9872a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Slightly", " ", "more", " ", "complex"}], ","}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.712783592428431*^9, 3.712783626893515*^9}, {
  3.712785438790422*^9, 
  3.7127854486608047`*^9}},ExpressionUUID->"378b73f0-7f33-4555-a205-\
9f7afabf9f85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"n", "+", "3"}], "]"}]}], " ", ">", " ", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"4", "*", "n"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7127835240436783`*^9, 3.7127835995262623`*^9}, {
  3.7127836313590097`*^9, 
  3.712783647517103*^9}},ExpressionUUID->"6d989d71-e5ac-4869-baa9-\
39fa1dfd7845"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.712783638242938*^9, 3.712783649665658*^9}, 
   3.7127837487334137`*^9, 
   3.7130527321436768`*^9},ExpressionUUID->"1bc7550e-0920-4ac6-b137-\
00fa100da0c8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Use", " ", "reduce", " ", "to", " ", "see", " ", "for", " ", "what", " ", 
   "n", " ", "the", " ", "expression", " ", "is", " ", 
   RowBox[{"true", ":", "  ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "In", " ", "fact", " ", "it", " ", "misses", " ", "one", " ", "value"}],
       ",", " ", 
      RowBox[{
      "the", " ", "computers", " ", "are", " ", "quite", " ", "up", " ", "to",
        " ", "us", " ", "yet", " ", "I", " ", 
       RowBox[{"guess", "."}]}]}], " ", ")"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712783659316861*^9, 
  3.7127837396796*^9}},ExpressionUUID->"8024345b-2958-4bce-9741-860dfc13ab22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"3", "+", "n"}]]], ">", 
   FractionBox["1", 
    RowBox[{"2", " ", 
     SqrtBox["n"]}]]}], "]"}]], "Input",
 NumberMarks->False,ExpressionUUID->"3e8ee19d-df6e-40b1-89a5-52cb087c12d0"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.712783642439843*^9, {3.712783744620125*^9, 3.712783751209675*^9}, 
   3.713052732362225*^9},ExpressionUUID->"26c8964e-844d-4657-8c5b-\
a4d8fd78ed8d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "We", " ", "are", " ", "putting", " ", "True", " ", "into", " ", "the", 
    " ", "variable", " ", "t"}], ",", " ", 
   RowBox[{"and", " ", "False", " ", "into", " ", "the", " ", "variable", " ", 
    RowBox[{"f", ":"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712785455733028*^9, 
  3.7127854779160357`*^9}},ExpressionUUID->"26f9a485-6bd9-42c4-b16a-\
3b27d82b4a61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"t", " ", "=", " ", 
   RowBox[{"1", " ", "<", " ", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.712783756828322*^9, 
  3.7127837677270308`*^9}},ExpressionUUID->"2a9b7523-5c8e-4f28-b2b4-\
c7029fa62a26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", " ", "=", " ", 
   RowBox[{"1", " ", ">", " ", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.71278392521517*^9, 
  3.7127839281418133`*^9}},ExpressionUUID->"7c1331ba-2cab-4ed1-b5ed-\
30b57d1f63a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.7127837618910217`*^9, 
  3.712783769727005*^9}},ExpressionUUID->"29f57b65-9512-4e41-b47b-\
032102548e5d"],

Cell[BoxData["True"], "Print",
 CellChangeTimes->{3.71278377260071*^9, 3.712783930874662*^9, 
  3.713052732477311*^9},ExpressionUUID->"377b4cd1-9e99-4164-8422-\
4b6bdfb0fc99"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "The", " ", "logical", " ", "\"\<OR\>\"", " ", "and", " ", "\"\<AND\>\"", 
     " ", "and", " ", "\"\<NOT\>\"", " ", "operators", " ", "are"}], " ", 
    "||"}], ",", " ", 
   RowBox[{"&&", 
    RowBox[{",", " ", 
     RowBox[{
      RowBox[{"and", " ", "!"}], " ", 
      RowBox[{"respectively", "."}]}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127837938276987`*^9, 
  3.712783841063892*^9}},ExpressionUUID->"63fbe010-06cf-40a7-87f4-\
a5f09b8b3919"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", " ", "||", " ", "f"}]], "Input",
 CellChangeTimes->{{3.712783780731876*^9, 3.71278379112226*^9}, 
   3.712783843472395*^9, {3.712783932599724*^9, 
   3.712783932845664*^9}},ExpressionUUID->"6ea52a36-1ec7-4617-8e41-\
ece99b7c8a7a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7127837841900063`*^9, 3.7127837915436363`*^9}, 
   3.712783843825098*^9, 3.7127839332012873`*^9, 
   3.713052732527214*^9},ExpressionUUID->"37845a28-a941-4cba-937c-\
225ca0224172"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", " ", "&&", " ", "f"}]], "Input",
 CellChangeTimes->{{3.7127839345423098`*^9, 
  3.712783936573716*^9}},ExpressionUUID->"6f2b2e23-0969-40a4-8941-\
dfcd944f3b72"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.712783937095017*^9, 
  3.713052732551117*^9},ExpressionUUID->"b6e3215d-2398-46e2-8e11-\
b04f3cd7487f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Not", " ", "True"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712785488573553*^9, 
  3.71278549728351*^9}},ExpressionUUID->"43435f38-b0ee-4d76-9f19-\
a4782a0c2b09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"!", "t"}]], "Input",
 CellChangeTimes->{{3.712783939435049*^9, 
  3.7127839404377613`*^9}},ExpressionUUID->"a032cd74-5c23-4032-afff-\
a78bc8f9e991"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.712783943847224*^9, 
  3.7130527325931168`*^9},ExpressionUUID->"b6a0c7fb-8cc1-4eb8-be94-\
bf336dc50a0f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Not", " ", "False"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.71278550445288*^9, 
  3.712785504915621*^9}},ExpressionUUID->"7c9d7c81-0d5d-41d5-9b70-\
b90a95246b81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"!", "f"}]], "Input",
 CellChangeTimes->{{3.7127839452460423`*^9, 
  3.7127839456293287`*^9}},ExpressionUUID->"edb202b1-7a90-458e-9bb9-\
f54aa3f4439f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.712783946152665*^9, 
  3.713052732666691*^9},ExpressionUUID->"560ef216-400b-4c15-b8ce-\
e7efa2ee4d59"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"equals", " ", "equals"}], " ", "\[Equal]", " ", 
   RowBox[{
   "is", " ", "another", " ", "comparison", " ", "operator", " ", "like"}], 
   " ", "<", " ", "or", " ", ">", 
   RowBox[{".", " ", "\[IndentingNewLine]", "a"}], " ", "\[Equal]", " ", 
   RowBox[{
   "b", " ", "means", " ", "\"\<is a equal to b? \>\"", " ", "and", " ", 
    "will", " ", "return", " ", "True", " ", "or", " ", "False"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.712783947282202*^9, 3.71278405434754*^9}, {
  3.712785517238009*^9, 
  3.7127855269882298`*^9}},ExpressionUUID->"235ae638-3904-4db8-b5d4-\
24b7eb069b30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", " ", "\[Equal]", " ", "5"}]], "Input",
 CellChangeTimes->{{3.712784017110396*^9, 3.7127840191003*^9}, {
  3.712784056499695*^9, 
  3.71278405763505*^9}},ExpressionUUID->"44878cb9-d91a-400b-aad7-\
166c20e92c55"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.712784019528241*^9, 3.712784057987938*^9, 
  3.713052732707018*^9},ExpressionUUID->"f9ede91f-4a61-4553-b65f-\
ecee0ac1fbd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", " ", "\[Equal]", " ", "4"}]], "Input",
 CellChangeTimes->{{3.712784059418923*^9, 
  3.712784060251136*^9}},ExpressionUUID->"ae95c7df-6358-449c-85db-\
32ef869d1eed"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7127840605404387`*^9, 
  3.713052732749452*^9},ExpressionUUID->"aed2f419-304c-4ab8-8462-\
3dd49caa3a50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", " ", "\[Equal]", " ", 
  RowBox[{"!", "f"}]}]], "Input",
 CellChangeTimes->{{3.7127840614514627`*^9, 
  3.7127840638911963`*^9}},ExpressionUUID->"2fb4bf8c-d5ea-491d-bff6-\
22cf1ac1f1af"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.712784064572145*^9, 
  3.7130527327825193`*^9},ExpressionUUID->"bea9b75c-e2a8-4843-b006-\
b1b5d84291df"]
}, Open  ]],

Cell[CellGroupData[{

Cell["If Statements", "Subsection",
 CellChangeTimes->{{3.712784208666404*^9, 
  3.712784226536557*^9}},ExpressionUUID->"8477cc39-6122-4890-ade2-\
de5874d43c09"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "We", " ", "are", " ", "now", " ", "ready", " ", "for", " ", "our", " ", 
    "first", " ", "control", " ", 
    RowBox[{"structure", ".", " ", "So"}], " ", "far", " ", "whenever", " ", 
    "we", " ", "have", " ", "evaluated", " ", "a", " ", "cell"}], ",", " ", 
   RowBox[{
   "the", " ", "whole", " ", "cell", " ", "was", " ", "evaluated", " ", "top",
     " ", "to", " ", "bottom", " ", "end", " ", "of", " ", 
    RowBox[{"story", ".", " ", "In"}], " ", "the", " ", "following", " ", 
    "cell"}], ",", " ", 
   RowBox[{
   "we", " ", "will", " ", "create", " ", "a", " ", "variable", " ", "i"}], 
   ",", " ", 
   RowBox[{
    RowBox[{
    "and", " ", "then", " ", "set", " ", "i", " ", "equal", " ", "to", " ", 
     "itself", " ", "plus", " ", 
     RowBox[{"3", " ", ".", " ", "This"}], " ", "looks", " ", 
     "mathematically", " ", "wrongity", " ", "wrong", " ", 
     RowBox[{"wrong", ".", " ", "But"}], " ", "it", " ", "is", " ", "in", " ",
      "fact", " ", "a", " ", "valid", " ", 
     RowBox[{"statement", ".", " ", "i"}]}], " ", "\[Equal]", " ", 
    RowBox[{"i", " ", "+", " ", 
     RowBox[{"3", " ", "is", " ", "evaluates", " ", "to", " ", 
      RowBox[{"False", "."}]}]}]}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127842300768003`*^9, 3.7127844011557426`*^9}, {
  3.712784579428698*^9, 3.7127846041145363`*^9}, {3.712785577168963*^9, 
  3.712785578056505*^9}},ExpressionUUID->"7f7d85ab-81a6-4311-b286-\
685b143bbc6b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"i", " ", "=", " ", "2"}], ";"}], "        ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"on", " ", "this", " ", "line", " ", "i"}], " ", "=", " ", "2"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"i", " ", "=", " ", 
    RowBox[{"i", " ", "+", " ", "3"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "on", " ", "this", " ", "line", " ", "we", " ", "are", " ", "adding", " ", 
    "one", " ", "to", " ", "i"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", "i", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Finally", " ", "we", " ", "print", " ", "out", " ", "the", " ", "desired",
     " ", "5"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.712784515592072*^9, 3.712784537051799*^9}, 
   3.712784582226983*^9, {3.7127855801364822`*^9, 
   3.712785588056383*^9}},ExpressionUUID->"b8e85070-68c5-4eaa-8e7c-\
a786021bde3c"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.712785583920166*^9, 
  3.7130527328292637`*^9},ExpressionUUID->"7077408a-9db1-4c4e-b0e5-\
3d15c8a41f52"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Suppose", " ", "now", " ", "that", " ", "we", " ", 
    RowBox[{"didn", "'"}], "t", " ", "always", " ", "want", " ", "to", " ", 
    "add", " ", "one", " ", "to", " ", "i", " ", "whenever", " ", "we", " ", 
    "arrive", " ", "at", " ", "the", " ", "second", " ", "line", " ", "of", 
    " ", "the", " ", 
    RowBox[{"program", ".", " ", "An"}], " ", "If", " ", "statement", " ", 
    "will", " ", "test", " ", "a", " ", "condition"}], ",", " ", 
   RowBox[{
   "and", " ", "based", " ", "on", " ", "the", " ", "truth", " ", "of", " ", 
    "the", " ", "condition", " ", "evaluate", " ", "some", " ", "further", 
    " ", 
    RowBox[{"expression", ".", " ", "The"}], " ", "first", " ", "argument", 
    " ", "of", " ", "If", " ", "is", " ", "the", " ", "test", " ", 
    RowBox[{"condition", ".", " ", "If"}], " ", "the", " ", "test", " ", 
    "condition", " ", "evaluates", " ", "to", " ", "False"}], ",", " ", 
   RowBox[{
   "the", " ", "code", " ", "in", " ", "the", " ", "second", " ", "argument", 
    " ", "is", " ", "executed", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "this", " ", "is", " ", "called", " ", "the", " ", "body", " ", "of", 
       " ", "the", " ", "If", " ", "statement"}], ")"}], ".", " ", "If"}], 
    " ", "the", " ", "test", " ", "condition", " ", "evaluates", " ", "to", 
    " ", "False"}], ",", " ", 
   RowBox[{"then", " ", "the", " ", "second", " ", "argument", " ", "is", " ", 
    RowBox[{"skipped", ".", " ", "This"}], " ", "is", " ", "called", " ", 
    "an", " ", "If", " ", "Else", " ", 
    RowBox[{"Statement", ".", " ", "In"}], " ", "fact", " ", "the", " ", 
    "third", " ", "argument", " ", "is", " ", 
    RowBox[{"optional", ".", " ", "If"}], " ", "you", " ", "only", " ", 
    "have", " ", "the", " ", "If", " ", "statement"}], ",", " ", 
   RowBox[{"and", " ", "no", " ", "else", " ", "statement"}], ",", " ", 
   RowBox[{
   "you", " ", "should", " ", "only", " ", "have", " ", "one", " ", "comma", 
    " ", "seperating", " ", "the", " ", "condition", " ", "and", " ", "the", 
    " ", 
    RowBox[{"body", "."}]}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.712784518151968*^9, 3.712784572723111*^9}, {
  3.712784610691822*^9, 3.7127846774650307`*^9}, {3.7127847187052383`*^9, 
  3.712784788303421*^9}, {3.712785616396641*^9, 3.712785617036496*^9}, {
  3.712785682450799*^9, 
  3.712785750377378*^9}},ExpressionUUID->"e61885c4-0102-4084-b201-\
475b10c2d829"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"1", " ", "<", "2"}], ",", " ", 
    RowBox[{"Print", "[", "\"\<Condition is True\>\"", "]"}], ",", " ", 
    RowBox[{"Print", "[", "\"\<Condition is False\>\"", "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7127846908491383`*^9, 3.71278470348178*^9}, {
  3.712784793078887*^9, 
  3.712784810943622*^9}},ExpressionUUID->"9f3b1d91-21c3-4c98-add1-\
f930010d37e3"],

Cell[BoxData["\<\"Condition is True\"\>"], "Print",
 CellChangeTimes->{3.712784812140913*^9, 
  3.713052732899358*^9},ExpressionUUID->"476ee6be-dd29-49fa-93dd-\
5d62221c7e29"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "I", " ", "know", " ", "that", " ", "that", " ", "one", " ", "was", " ", 
    "not"}], ",", " ", 
   RowBox[{
   "but", " ", "standard", " ", "practise", " ", "is", " ", "to", " ", "put", 
    " ", "the", " ", "condition"}], ",", " ", "body", ",", " ", 
   RowBox[{"and", " ", "else", " ", "all", " ", "on", " ", "seperate", " ", 
    RowBox[{"lines", ".", " ", "As"}], " ", "shown", " ", 
    RowBox[{"below", ":"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712784364512693*^9, 3.712784512153378*^9}, {
  3.712785633117084*^9, 3.71278567786727*^9}, {3.712785761041255*^9, 
  3.712785799216504*^9}},ExpressionUUID->"130980b6-a2ae-44bc-a3bd-\
54106498a2ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"1", " ", "<", "2"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"Print", "[", "\"\<Condition is True\>\"", "]"}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"Print", "[", "\"\<Condition is False\>\"", "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",ExpressionUUID->"088f87b0-\
e7a4-45fe-ae49-0f2f7ad18b96"],

Cell[BoxData["\<\"Condition is True\"\>"], "Print",
 CellChangeTimes->{3.7127858096048098`*^9, 
  3.713052732943532*^9},ExpressionUUID->"8b6e00b5-4a6d-4568-9701-\
6cf3d40ca6f9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Indeed", " ", "1", " ", "is", " ", "less", " ", "than", " ", "2", " ", 
   "so", " ", "the", " ", "body", " ", "is", " ", "evaluated", " ", "and", 
   " ", "the", " ", "else", " ", "is", " ", 
   RowBox[{"skipped", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712785811844161*^9, 
  3.7127858591892*^9}},ExpressionUUID->"515b7757-bdec-4722-8b6d-f19067e04cdc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Note", " ", "that", " ", "True", " ", "and", " ", "False", " ", 
     "evaluate", " ", "to", " ", "True", " ", "and", " ", "False"}], ",", " ", 
    RowBox[{
    "so", " ", "if", " ", "we", " ", "leave", " ", "these", " ", "as", " ", 
     "the", " ", "conditions", " ", 
     RowBox[{"(", 
      RowBox[{"or", " ", "variables", " ", "containing", " ", "them"}], 
      ")"}]}], ",", "    ", 
    RowBox[{"they", " ", "will", " ", "work", " ", 
     RowBox[{"accordingly", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "False"}]], "Input",
 CellChangeTimes->{{3.7127858660182867`*^9, 
  3.7127859124121027`*^9}},ExpressionUUID->"e8000dc8-bc00-4408-b33c-\
94826931baa2"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7127859128403473`*^9, 
  3.713052732997385*^9},ExpressionUUID->"6b800704-cadf-49e5-840f-\
84f65af55cf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["True"], "Input",
 CellChangeTimes->{{3.712785914432506*^9, 
  3.712785915211899*^9}},ExpressionUUID->"a93392a1-a1d1-49bc-9a30-\
53a9a4eb4e4b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7127859157366867`*^9, 
  3.713052733023369*^9},ExpressionUUID->"06eda23f-4364-4eff-807e-\
f77a28484b9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"True", ",", "\[IndentingNewLine]", " ", 
    RowBox[{"Print", "[", "\"\<Condition is True\>\"", "]"}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"Print", "[", "\"\<Condition is False\>\"", "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7127859182012453`*^9, 
  3.7127859244837303`*^9}},ExpressionUUID->"e7260c74-aaae-4797-832f-\
d7cad2599762"],

Cell[BoxData["\<\"Condition is True\"\>"], "Print",
 CellChangeTimes->{3.712785925101159*^9, 
  3.7130527330653477`*^9},ExpressionUUID->"4203c031-cc0b-4a39-bd5c-\
076750f8490a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"False", ",", "\[IndentingNewLine]", " ", 
    RowBox[{"Print", "[", "\"\<Condition is True\>\"", "]"}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"Print", "[", "\"\<Condition is False\>\"", "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712785928572989*^9, 
  3.712785929315778*^9}},ExpressionUUID->"da70f635-7392-492d-a97c-\
bc6086b1e93d"],

Cell[BoxData["\<\"Condition is False\"\>"], "Print",
 CellChangeTimes->{3.712785929722597*^9, 
  3.713052733098476*^9},ExpressionUUID->"c38b793b-035d-40c6-95c7-\
3f770398d98a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Here", " ", "I", " ", "am", " ", "putting", " ", "True", " ", "into", " ",
     "t"}], ",", " ", 
   RowBox[{
   "then", " ", "negating", " ", "t", " ", "as", " ", "the", " ", "condition",
     " ", "so", " ", "it", " ", "evaluates", " ", "to", " ", 
    RowBox[{"False", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712785950188375*^9, 
  3.712785982458151*^9}},ExpressionUUID->"9d570563-5aaa-4ef0-8d98-\
c51f98121825"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", " ", "=", " ", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", "t"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"Print", "[", "\"\<Condition is True\>\"", "]"}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"Print", "[", "\"\<Condition is False\>\"", "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712785935649639*^9, 
  3.712785945611594*^9}},ExpressionUUID->"17164330-14d7-453a-b72d-\
d24015ec6741"],

Cell[BoxData["\<\"Condition is False\"\>"], "Print",
 CellChangeTimes->{3.712785946717779*^9, 
  3.713052733148789*^9},ExpressionUUID->"3c95f89d-e064-4a80-ba25-\
750ec9b4c8bf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Lets", " ", "go", " ", "back", " ", "to", " ", "incrementing", " ", 
    RowBox[{"i", ".", " ", "Now"}], " ", "instead", " ", "of", " ", "just", 
    " ", "printing", " ", "a", " ", "string"}], ",", " ", 
   RowBox[{
   "we", " ", "will", " ", "do", " ", "something", " ", "to", " ", "a", " ", 
    "variable", " ", "depending", " ", "on", " ", "the", " ", "truth", " ", 
    "value", " ", "of", " ", "the", " ", 
    RowBox[{"condition", ".", " ", "Here"}], " ", "if", " ", "i", " ", "is", 
    " ", "less", " ", "than", " ", "5", " ", "we", " ", "will", " ", "add", 
    " ", "5", " ", "to", " ", "i", " ", "and", " ", "reset", " ", "i", " ", 
    "with", " ", "this", " ", "new", " ", "higher", " ", 
    RowBox[{"value", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712785992500085*^9, 
  3.712786068944377*^9}},ExpressionUUID->"f154a24b-c03d-4446-b5f4-\
ebf0fbecd2c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"i", " ", "=", " ", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.712786072009491*^9, 
  3.712786074216259*^9}},ExpressionUUID->"3face885-cb17-4df8-930e-\
b13944eef182"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"i", " ", "<", "5"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"i", " ", "=", " ", 
     RowBox[{"i", " ", "+", " ", "3"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7127860802962933`*^9, 
  3.712786093304413*^9}},ExpressionUUID->"cd9d8917-4ca2-4f34-a168-\
10001829723b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", "i", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.71278610359883*^9, 
  3.712786107159239*^9}},ExpressionUUID->"816ee41d-1433-47f0-92e5-\
8879445d6b33"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.712786107697002*^9, 
  3.7130527332236977`*^9},ExpressionUUID->"b1718481-c764-4502-93ad-\
4e2a0629484e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Now", " ", "I", " ", "has", " ", "the", " ", "value", " ", "5.", " ", 
   "Notice", " ", "that", " ", "we", " ", "have", " ", "no", " ", "else", " ", 
   RowBox[{
   "body", ".", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "Lets"}], 
   " ", "do", " ", "this", " ", 
   RowBox[{"again", ".", " ", "This"}], " ", "time", " ", "we", " ", "will", 
   " ", "have", " ", "more", " ", "than", " ", "one", " ", "statement", " ", 
   "in", " ", "the", " ", "body", " ", "of", " ", "the", " ", 
   RowBox[{"If", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712786112108981*^9, 3.7127861454067993`*^9}, {
  3.712786228430271*^9, 
  3.7127862494849873`*^9}},ExpressionUUID->"bb1271a0-7310-4e55-957f-\
971aec6e9b52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"i", " ", "=", " ", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.712786072009491*^9, 
  3.712786074216259*^9}},ExpressionUUID->"63dd2e50-cf15-4b2a-a612-\
e8cfda19f1a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"i", " ", "<", "5"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", 
      RowBox[{"i", " ", "+", " ", "3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "i", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7127860802962933`*^9, 3.712786093304413*^9}, {
  3.71278615572796*^9, 
  3.712786156215963*^9}},ExpressionUUID->"6faaf41f-57e9-43fd-b0b0-\
f98118fc0980"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.712786215892432*^9, 
  3.713052733331238*^9},ExpressionUUID->"39f8c814-af7c-40bb-baa8-\
61b6092a18f0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Notice", " ", "a", " ", "few", " ", "things", " ", "are", " ", 
    RowBox[{"different", ".", " ", "I"}], " ", "put", " ", "a", " ", "semi", 
    " ", "colon", " ", "at", " ", "the", " ", "end", " ", "of", " ", "the", 
    " ", "incrementing", " ", "line", " ", "where", " ", "we", " ", "change", 
    " ", 
    RowBox[{"i", ".", " ", "This"}], " ", "is", " ", "to", " ", "seperate", 
    " ", "the", " ", "increment", " ", "statement", " ", "from", " ", "the", 
    " ", "print", " ", 
    RowBox[{"statement", ".", " ", "Suppose"}], " ", "we", " ", "forgot", " ",
     "to", " ", "put", " ", "this", " ", "semi"}], "-", 
   RowBox[{"colon", ":"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712786166746192*^9, 3.71278620978164*^9}, {
  3.712786253164403*^9, 
  3.71278626035666*^9}},ExpressionUUID->"8cdc593c-97ba-4c67-8e7f-\
429cabd006a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"i", " ", "=", " ", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.712786072009491*^9, 
  3.712786074216259*^9}},ExpressionUUID->"82b94d46-93e5-4fbc-bc76-\
07b2b60c14cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"i", " ", "<", "5"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", 
      RowBox[{"i", " ", "+", " ", 
       RowBox[{"3", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "i", "]"}]}]}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7127860802962933`*^9, 3.712786093304413*^9}, {
  3.71278615572796*^9, 3.712786156215963*^9}, {3.7127862658220663`*^9, 
  3.712786288620728*^9}},ExpressionUUID->"69b80804-d0a5-4ecf-b1ff-\
9e333c30ac0d"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.712786295153283*^9, 
  3.713052733397668*^9},ExpressionUUID->"3ebdb7e0-5624-4e72-acd4-\
0f513ae8dc5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.7127862970862007`*^9, 
  3.712786303635202*^9}},ExpressionUUID->"23ffd564-bf42-40b5-a458-\
aba8f08637d7"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"3", " ", "Null"}]}]], "Print",
 CellChangeTimes->{3.7127863056914*^9, 
  3.71305273345752*^9},ExpressionUUID->"0a0c57ca-1f51-4c09-a035-e17a120c56ef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Forensics", "Subsection",
 CellChangeTimes->{{3.712786372332988*^9, 
  3.712786373769704*^9}},ExpressionUUID->"56427af0-606e-4a8c-b4f3-\
ad6455d41bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Where", " ", "there", " ", "is", " ", "empty", " ", "space", " ", 
       "Mathematica", " ", "is", " ", "filling", " ", "in", " ", "a", " ", 
       RowBox[{"multiplication", ".", " ", "Here"}], " ", "is", " ", "our", 
       " ", "first", " ", "example", " ", "of", " ", "type", " ", 
       RowBox[{"mismatch", ".", " ", "Lets"}], " ", "take", " ", "this", " ", 
       "piece", " ", "by", " ", 
       RowBox[{
       "piece", ".", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "Mathematica"}], " ", "correctly", " ", "evaluates", " ", "i"}], " ", 
      "<", " ", 
      RowBox[{"5", " ", "to", " ", 
       RowBox[{
       "True", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "then"}], 
       " ", "it", " ", 
       RowBox[{
       "sees", ":", "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
        "i"}]}]}], " ", "=", " ", 
     RowBox[{"i", " ", "+", " ", 
      RowBox[{"3", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "i", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "    ", 
    RowBox[{
     RowBox[{"this", " ", "is", " ", 
      RowBox[{
      "identically", ":", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "i"}]}], " ", "=", " ", 
     RowBox[{"i", " ", "+", " ", 
      RowBox[{"3", 
       RowBox[{"Print", "[", "i", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "and", " ", "it", " ", "tries", " ", "to", " ", "multiply", " ", "3", 
      " ", "times", " ", "the", " ", "print", " ", 
      RowBox[{"statment", ".", " ", "This"}], " ", "crashes", " ", "and", " ",
       "burns", " ", "and", " ", "returns", " ", "a", " ", "Null", " ", 
      RowBox[{"value", ".", " ", "Null"}], " ", "is", " ", "the", " ", 
      "empty", " ", "data", " ", 
      RowBox[{"type", ".", " ", "We"}], " ", "are", " ", "left", " ", "with", 
      " ", "2"}], " ", "+", " ", 
     RowBox[{"3", 
      RowBox[{"Null", "."}]}]}]}], "  ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "In", " ", "almost", " ", "every", " ", "program", " ", "you", " ", 
    "write", " ", "this", " ", "semester", " ", "you", " ", "will", " ", 
    "use", " ", "if", " ", 
    RowBox[{"statements", ".", " ", "If"}], " ", "statements", " ", "are", 
    " ", 
    RowBox[{"powerful", ".", " ", "Writing"}], " ", "programs", " ", "that", 
    " ", "have", " ", "more", " ", "than", " ", "one", " ", "line", " ", "is",
     " ", "also", " ", 
    RowBox[{"powerful", ".", " ", "But"}], " ", "with", " ", "great", " ", 
    "power", " ", "comes", " ", "great", " ", 
    RowBox[{"responsibility", ".", " ", "Do"}], " ", "not", " ", "forget", 
    " ", 
    RowBox[{
    "semicolons", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "In"}], 
    " ", "our", " ", "final", " ", "example", " ", "of", " ", "If", " ", 
    "statements", " ", "we", " ", "will", " ", "Nest", " ", 
    RowBox[{"them", ":", " ", 
     RowBox[{
     "Suppose", " ", "that", " ", "we", " ", "are", " ", "making", " ", "a", 
      " ", "peanut", " ", "butter", " ", "and", " ", "jelly", " ", 
      RowBox[{"sandwich", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7127862778241377`*^9, 3.71278627840421*^9}, {
  3.712786308722775*^9, 3.7127865759739637`*^9}, {3.712786657086182*^9, 
  3.712786761361986*^9}, {3.7127869530832243`*^9, 3.712787316551552*^9}, {
  3.712787357069146*^9, 3.712787594000206*^9}, {3.7127877582106657`*^9, 
  3.7127877766264353`*^9}},ExpressionUUID->"884149bc-45dd-4aea-bf79-\
236f393dbcad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"peanutButter", " ", "=", " ", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jelly", " ", "=", " ", "False"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712787683349676*^9, 3.71278773153098*^9}, {
  3.712788064273555*^9, 3.712788068560796*^9}, {3.7129252820014973`*^9, 
  3.712925304401636*^9}},ExpressionUUID->"f5eafab1-51de-4be2-8c0c-\
09442348c245"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"peanutButter", " ", "\[Equal]", " ", "True"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"jelly", " ", "\[Equal]", " ", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", 
         "\"\<Nice job, it looks like you have a good sandwich.\>\"", "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", 
         "\"\<Ok, you're a serious fellow I can tell because your sandwich \
has no jelly on it but it does have peanut butter.\>\"", "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "below", " ", "this", " ", "comma", " ", "is", " ", "evaluated", " ", 
       "in", " ", "the", " ", "case", " ", "peanut", " ", "butter", " ", "is",
        " ", "false"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"jelly", " ", "\[Equal]", " ", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", 
         "\"\<Ok, you're a serious fellow I can tell because your sandwich \
has no peanut butter on it but it does have jelly.\>\"", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<This is a bread sandwich.\>\"", "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.712787605098036*^9, 3.712787661709741*^9}, {
   3.712787693359322*^9, 3.712787694484926*^9}, {3.712787737845932*^9, 
   3.7127877382599373`*^9}, {3.7127878046441183`*^9, 3.712787887928453*^9}, 
   3.712788035974062*^9, {3.712928658514402*^9, 
   3.712928679292562*^9}},ExpressionUUID->"6bdde454-eaf4-4105-950f-\
018b3302ef89"],

Cell[BoxData["\<\"This is a bread sandwich.\"\>"], "Print",
 CellChangeTimes->{
  3.7127880416797123`*^9, 3.71278807237141*^9, {3.712925276427952*^9, 
   3.712925307071754*^9}, 
   3.713052733522099*^9},ExpressionUUID->"ba72ef83-949b-47bc-a67c-\
a7008647978d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"peanutButter", " ", "\[Equal]", " ", "True"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "We", " ", "are", " ", "now", " ", "in", " ", "the", " ", "body", " ", 
       "of", " ", "the", " ", "if", " ", "where", " ", "there", " ", "is", 
       " ", "peanutButter", " ", "on", " ", "the", " ", "sandwich", 
       "\[IndentingNewLine]", "is", " ", "there", " ", "also", " ", 
       RowBox[{"jelly", "?"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"jelly", " ", "\[Equal]", " ", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "We", " ", "are", " ", "now", " ", "in", " ", "the", " ", "body", 
           " ", "of", " ", "the", " ", "if", " ", "where", " ", "there", " ", 
           "is", " ", "peanutButter", " ", "on", " ", "the", " ", "sandwich", 
           "\[IndentingNewLine]", "and", " ", "there", " ", "is", " ", "also",
            " ", "jelly"}], ",", " ", 
          RowBox[{"in", " ", "this", " ", 
           RowBox[{"case", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", 
         "\"\<Nice job, it looks like you have a good sandwich.\>\"", "]"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "We", " ", "are", " ", "now", " ", "in", " ", "the", " ", "body", 
          " ", "of", " ", "the", " ", "if", " ", "where", " ", "there", " ", 
          "is", " ", "peanutButter", " ", "on", " ", "the", " ", "sandwich", 
          "\[IndentingNewLine]", "but", " ", "no", " ", "jelly", " ", "in", 
          " ", "this", " ", 
          RowBox[{"case", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", 
         "\"\<Ok, you're a serious fellow I can tell because your sandwich \
has no jelly on it but it does have peanut butter.\>\"", "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "We", " ", "are", " ", "now", " ", "past", " ", "the", " ", "second", 
        " ", "comma"}], ",", " ", 
       RowBox[{
       "cheese", " ", "is", " ", "false", " ", "and", " ", "we", " ", "have", 
        " ", "skipped", " ", "the", " ", "entire", " ", "body", " ", "where", 
        " ", "we", " ", "would", " ", "go", " ", "if", " ", "peanutButter", 
        " ", "we", " ", "true"}], ",", "\[IndentingNewLine]", 
       RowBox[{"is", " ", "there", " ", "also", " ", 
        RowBox[{"jelly", "?"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"jelly", " ", "\[Equal]", " ", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "We", " ", "are", " ", "now", " ", "in", " ", "the", " ", "body", 
          " ", "of", " ", "the", " ", "if", " ", "where", " ", "there", " ", 
          "is", " ", "no", " ", "peanutButter", " ", "on", " ", "the", " ", 
          "sandiwich", "\[IndentingNewLine]", "but", " ", "there", " ", "is", 
          "  ", "jelly"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "Print", "[", 
         "\"\<Ok, you're a serious fellow I can tell because your sandwich \
has no peanut butter on it but it does have jelly.\>\"", "]"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "We", " ", "are", " ", "now", " ", "in", " ", "the", " ", "place", 
          " ", "of", " ", "no", " ", "peanutButter", " ", "and", " ", "no", 
          " ", "jelly"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<This is a bread sandwich.\>\"", "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.712787605098036*^9, 3.712787661709741*^9}, {
  3.712787693359322*^9, 3.712787694484926*^9}, {3.712787737845932*^9, 
  3.7127877382599373`*^9}, {3.7129286833969088`*^9, 
  3.712928687391589*^9}},ExpressionUUID->"12780fd2-1bb4-479a-89b9-\
fcd475b1ed7f"],

Cell[BoxData["\<\"This is a bread sandwich.\"\>"], "Print",
 CellChangeTimes->{{3.712787673645875*^9, 3.712787745451476*^9}, 
   3.712787780665194*^9, 
   3.713052733549515*^9},ExpressionUUID->"eb4bbc53-bcdf-440c-afbe-\
4c1cac9245e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Section 3. 
Lists, and Lists of Lists, and Lists of Lists of Lists, and so on...\
\>", "Section",
 CellChangeTimes->{{3.712779898516843*^9, 3.712779910636368*^9}, {
  3.7127822286673603`*^9, 3.712782233131263*^9}, {3.712782323961154*^9, 
  3.712782332633109*^9}, {3.712782911605081*^9, 3.7127829161866493`*^9}, {
  3.7127833265953693`*^9, 3.7127833300566473`*^9}, {3.7127840972382793`*^9, 
  3.712784105181843*^9}, {3.7127841610588837`*^9, 
  3.712784198209217*^9}},ExpressionUUID->"8ab0c0e3-33bd-4a79-a211-\
91af762d2bcf"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Lists", " ", "in", " ", "this", " ", "language", " ", "are", " ", "tuples",
    " ", "seperated", " ", "by", " ", "commas", " ", "surrounded", " ", "by", 
   " ", "curly", " ", 
   RowBox[{"braces", ":"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7127840799986773`*^9},ExpressionUUID->"699bc770-997d-4e55-9dba-\
c2259e53605a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20", ",", "30", ",", "40"}], "}"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.712782196949148*^9, 3.712782220347587*^9}, {
  3.712782937322126*^9, 
  3.712782947074402*^9}},ExpressionUUID->"c6e5721c-c0b7-4cd7-b02b-\
69af7fe1f475"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "l1", " ", "is", " ", "a", " ", "variable", " ", "containing", " ", "a", 
   " ", "list", " ", "of", " ", "the", " ", "multiples", " ", "of", " ", "10",
    " ", "from", " ", "10", " ", "to", " ", "40.", " ", "Min", " ", "and", 
   " ", "Max", " ", "are", " ", "functions", " ", "that", " ", "can", " ", 
   "be", " ", "applied", " ", "to", " ", "lists"}], "*)"}]], "Input",
 CellChangeTimes->{{3.712782948949054*^9, 
  3.71278300801287*^9}},ExpressionUUID->"bc72a728-1815-4fad-9d82-\
e13ef90a609c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"{", 
   RowBox[{"10", ",", "20", ",", "30", ",", "40"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.712783013270501*^9, 
  3.712783021180986*^9}},ExpressionUUID->"a0c0f80b-13bc-41da-9e4e-\
1719c3d21cac"],

Cell[BoxData["40"], "Output",
 CellChangeTimes->{{3.712783024731112*^9, 3.712783037236171*^9}, 
   3.713052733627228*^9},ExpressionUUID->"abffb564-3db6-497e-9979-\
35efe802b657"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", "l1", "]"}]], "Input",
 CellChangeTimes->{{3.7127830263760347`*^9, 3.7127830415414467`*^9}, {
  3.7127832737879343`*^9, 
  3.712783274525156*^9}},ExpressionUUID->"4dbceeeb-03fa-470f-9202-\
44d1ba24c52c"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.712783041888904*^9, 3.71278327528533*^9, 
  3.713052733665193*^9},ExpressionUUID->"7d07ad80-dde5-46eb-8bb2-\
c2bdbc5c174e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Mean", " ", "and", " ", "Total", " ", "are", " ", "functions", " ", 
    "that", " ", "compute", " ", "the", " ", "Mean", " ", "value", " ", "of", 
    " ", "the", " ", "list"}], ",", " ", 
   RowBox[{
   "and", " ", "the", " ", "sum", " ", "total", " ", "of", " ", "the", " ", 
    "elements", " ", "of", " ", "the", " ", 
    RowBox[{"list", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712783047014215*^9, 
  3.712783079459528*^9}},ExpressionUUID->"8bc46b66-88c6-480c-86db-\
e7f77c09e01c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "l1", "]"}]], "Input",
 CellChangeTimes->{{3.712783279507801*^9, 
  3.712783283442477*^9}},ExpressionUUID->"38cf8555-668f-4945-a609-\
7ee17cb0f8b8"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.7127832841557503`*^9, 
  3.7130527337025013`*^9},ExpressionUUID->"852fff62-333f-44f5-ad0c-\
7fa72bc6009b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "l1", "]"}]], "Input",
 CellChangeTimes->{{3.712783286143776*^9, 
  3.7127832890264797`*^9}},ExpressionUUID->"be73c114-3bc2-4670-8836-\
6729ab60a9d6"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.7127832898360367`*^9, 
  3.7130527337481537`*^9},ExpressionUUID->"7923939d-29fe-47f6-88dc-\
0e50b7e30116"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "In", " ", "the", " ", "same", " ", "way", " ", "that", " ", "we", " ", 
   "could", " ", "increment", " ", "a", " ", "number", " ", "with", " ", 
   "the", " ", "following", " ", "syntax"}], "*)"}]], "Input",
 CellChangeTimes->{{3.712788101525358*^9, 
  3.7127881165262423`*^9}},ExpressionUUID->"92474977-2532-4ae3-b247-\
636d60d11f8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"i", " ", "=", " ", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.712788118477816*^9, 
  3.712788129189931*^9}},ExpressionUUID->"b2a8a125-406a-4116-af33-\
3251a71e79b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"i", " ", "=", " ", 
   RowBox[{"i", " ", "+", " ", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.712788120767633*^9, 
  3.7127881329149647`*^9}},ExpressionUUID->"a6f7c550-7857-4665-a929-\
71431c5dac47"],

Cell[CellGroupData[{

Cell[BoxData["i"], "Input",
 CellChangeTimes->{
  3.7127881250052013`*^9},ExpressionUUID->"07cc00cd-99b9-44ad-81ed-\
e9406d42972e"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.712788134869155*^9, 3.712788138901144*^9}, 
   3.7130527338091927`*^9},ExpressionUUID->"074701c4-00d7-4070-a6d9-\
54c5d6ad7817"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "we", " ", "can", " ", "add", " ", "things", " ", "to", " ", "lists"}], " ",
   "*)"}]], "Input",
 CellChangeTimes->{{3.712788141775629*^9, 
  3.71278817044868*^9}},ExpressionUUID->"77f33b2d-c6e8-4f51-8b21-\
4e5db091ffe2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"True", ",", " ", "10", ",", " ", "1.5", ",", " ", "I"}], "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.712788174201692*^9, 
  3.712788202136499*^9}},ExpressionUUID->"8123b280-968c-4a39-942b-\
c0e2e6abf191"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l2", " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{"l2", ",", " ", "\"\<Friday\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.712788210752346*^9, 
  3.712788250786133*^9}},ExpressionUUID->"b757053f-f242-4a4a-a889-\
0579403b73f4"],

Cell[CellGroupData[{

Cell[BoxData["l2"], "Input",ExpressionUUID->"284d9e7f-77ed-4fbc-8191-878bf0db4778"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "10", ",", "1.5`", ",", "\[ImaginaryI]", 
   ",", "\<\"Friday\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.712788258170101*^9, 
  3.713052733892358*^9},ExpressionUUID->"7ef9e7f1-3d52-4f7c-a070-\
2d9a3f0752bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Here", " ", "we", " ", "have", " ", "appended", " ", "to", " ", "the", 
     " ", "list", " ", "l2"}], ",", " ", 
    RowBox[{"the", " ", "string", " ", 
     RowBox[{"\"\<Friday\>\"", ".", " ", "This"}], " ", "example", " ", "is", 
     " ", "meant", " ", "to", " ", "show", " ", "that", " ", "lists", " ", 
     "in", " ", "general", " ", "may", " ", "hold", " ", "different", " ", 
     "data", " ", 
     RowBox[{"types", ".", " ", "If"}], " ", "we", " ", "try", " ", "to", " ",
      "check", " ", "what", " ", "these", " ", "data", " ", "types", " ", 
     "are", " ", "we", " ", "might", " ", "think", " ", "of", " ", "trying", 
     " ", "to", " ", "apply", " ", "Head", " ", "which", " ", "infuriatingly",
      " ", "gives", " ", "us", " ", "exactly", " ", "what", " ", "we", " ", 
     "asked", " ", 
     RowBox[{"for", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Head", "[", "l2", "]"}]}]], "Input",
 CellChangeTimes->{{3.712788265537067*^9, 3.7127882963657007`*^9}, {
  3.712788330719082*^9, 
  3.712788405838212*^9}},ExpressionUUID->"c203fb68-041b-4149-b093-\
8fd7b4b4d815"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.7127883528235703`*^9, 
  3.7130527339177027`*^9},ExpressionUUID->"70299c10-21f5-4a7d-9206-\
e0f378eaa3d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "However", " ", "we", " ", "may", " ", "use", " ", "the", " ", "map", " ", 
   "function", " ", "to", " ", "map", " ", "head", " ", "over", " ", "all", 
   " ", "of", " ", "the", " ", "elements", " ", "of", " ", "the", " ", 
   RowBox[{"list", ".", " ", "Map"}], " ", "takes", " ", "as", " ", "its", 
   " ", "first", " ", "argument", " ", "a", " ", "function", " ", "and", " ", 
   "as", " ", "its", " ", "second", " ", "a", " ", "list", " ", "to", " ", 
   "which", " ", "that", " ", "function", " ", "will", " ", "be", " ", 
   RowBox[{"mapped", ".", " ", "Dont"}], " ", "use", " ", 
   RowBox[{"this", ".", " ", "When"}], " ", "we", " ", "go", " ", "over", " ",
    "loops", " ", "you", " ", "will", " ", "see", " ", "a", " ", "better", 
   " ", "way", " ", "to", " ", "do", " ", "this", " ", "for", " ", 
   RowBox[{"now", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712788430243004*^9, 
  3.712788503444044*^9}},ExpressionUUID->"c53d571b-d2af-480b-9d68-\
b015bf733243"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Head", ",", " ", "l2"}], "]"}]], "Input",
 CellChangeTimes->{{3.712788354669785*^9, 3.7127883649926233`*^9}, {
  3.712788411909336*^9, 
  3.712788428870832*^9}},ExpressionUUID->"1427136d-adc6-4c5c-bbd4-\
47c8a7c06834"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Symbol", ",", "Integer", ",", "Real", ",", "Complex", ",", "String"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.712788357653129*^9, 3.712788426014625*^9, 
  3.7130527339680443`*^9},ExpressionUUID->"32e0f057-c13f-4747-a4f6-\
273e411fe762"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Wherever possible, i.e. within the limits of your own sanity, do not use \
Mathematica\[CloseCurlyQuote]s fancy built in functions for high level \
things. Map is an example, do not use Map. AppendTo is fine.  Mean can be \
easily constructed out of total using Length.  When we do loops we will see \
how to build our own Totals and Lengths. 

If I ask you to write a program to perform Lagrange Interpolation you will \
not get credit if you hand in a one line program that says 

LagrangeInterpolation[pointSet]

using Mathematica\[CloseCurlyQuote]s gigantic standard library.  This does \
not count as you doing the assignment. \
\>", "Subsection",
 CellChangeTimes->{{3.712788517652336*^9, 3.712788833887446*^9}, {
  3.712788870928453*^9, 3.712788884270391*^9}, {3.712788935029448*^9, 
  3.712789025020535*^9}},ExpressionUUID->"8c4f2f46-0780-4618-8102-\
be73de04abb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Total", "[", "l1", "]"}], "/", 
   RowBox[{"Length", "[", "l1", "]"}]}], " ", "\[Equal]", " ", 
  RowBox[{"Mean", "[", "l1", "]"}]}]], "Input",
 CellChangeTimes->{{3.712788618688287*^9, 3.712788650225103*^9}, {
  3.71278884655611*^9, 
  3.7127888510832863`*^9}},ExpressionUUID->"b1600b8d-b797-4459-b0fe-\
5810a55575bb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7127886296794*^9, 3.712788650909829*^9}, 
   3.713052734041293*^9},ExpressionUUID->"279b6844-06c4-4bbf-a7f5-\
aa8c66bd6097"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Ok", ",", " ", 
    RowBox[{"time", " ", "for", " ", "lists", " ", "of", " ", 
     RowBox[{"lists", "."}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lofl", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"lofl", ",", " ", 
      RowBox[{"{", 
       RowBox[{"20", ",", "30", ",", "40"}], "}"}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.712788855293497*^9, 3.712788928204124*^9}, {
  3.71278903194067*^9, 
  3.7127890588828573`*^9}},ExpressionUUID->"a4f2960e-d760-41fc-9b7d-\
4399d44a0474"],

Cell[CellGroupData[{

Cell[BoxData["lofl"], "Input",
 CellChangeTimes->{{3.712789044376899*^9, 
  3.712789044971436*^9}},ExpressionUUID->"95d46b7a-10a7-4dee-9345-\
0d7cd0e72cc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"20", ",", "30", ",", "40"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.712789045459333*^9, 3.712789062653767*^9}, 
   3.713052734096673*^9},ExpressionUUID->"a3d94245-e229-47c9-92d0-\
66a4f6d89064"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"lofl", ",", " ", 
    RowBox[{"{", 
     RowBox[{"20", ",", "30", ",", "40"}], "}"}]}], "]"}], ";"}]], "Input",Exp\
ressionUUID->"bd73e5c3-194f-45f5-896d-a8de1fdbde91"],

Cell[CellGroupData[{

Cell[BoxData["lofl"], "Input",
 CellChangeTimes->{{3.712789072245626*^9, 
  3.7127890730169973`*^9}},ExpressionUUID->"7ec62b65-c764-46b8-9ea7-\
0c51979bd4f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.712789073509914*^9, 
  3.7130527341510878`*^9},ExpressionUUID->"0fa69dfe-f20b-4b56-96bd-\
bf0733b5105a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"lofl", ",", " ", 
    RowBox[{"{", 
     RowBox[{"20", ",", "30", ",", "40"}], "}"}]}], "]"}], ";"}]], "Input",Exp\
ressionUUID->"0644b870-e901-49d7-94e7-ddafeb58076f"],

Cell[CellGroupData[{

Cell[BoxData["lofl"], "Input",
 CellChangeTimes->{{3.712789083280917*^9, 
  3.7127890841616077`*^9}},ExpressionUUID->"36d08b8b-c09d-4b52-949b-\
eb26f501d944"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.712789085129912*^9, 
  3.713052734200479*^9},ExpressionUUID->"87af9d9b-e582-473e-ac3e-\
0fc8e3cb9d48"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Good practice note: Notice that I had to type the same identical thing 3 \
times. If you find yourself typing the same thing over and over and over and \
over, your program may run, it may give you good output but stop, take a \
break, come back to it. There is always a simpler way which will let you \
avoid typing repetitive things, you will think of it.  Right now we do not \
have the machinery to do that in this case but we will shortly. \
\>", "Subsection",
 CellChangeTimes->{{3.712788517652336*^9, 3.712788833887446*^9}, {
  3.712788870928453*^9, 3.712788884270391*^9}, {3.712788935029448*^9, 
  3.712789025020535*^9}, {3.712789497690818*^9, 3.712789594111972*^9}, {
  3.7127896634071302`*^9, 
  3.712789738068079*^9}},ExpressionUUID->"bc1564ba-4f67-4240-9c86-\
73f82ab1e7e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Ok", " ", "now", " ", "i", " ", "have", " ", "a", " ", "list", " ", "of", 
    " ", 
    RowBox[{"lists", ".", " ", "Lets"}], " ", "see", " ", "it", " ", "as", 
    " ", "a", " ", 
    RowBox[{"Matrix", ":", " ", "Note", ":", " ", 
     RowBox[{
     "MatrixForm", " ", "is", " ", "just", " ", "for", " ", "displaying", " ",
       "the", " ", 
      RowBox[{"data", ".", " ", "If"}], " ", "I", " ", "ask", " ", "you", " ",
       "to", " ", "hand", " ", "in", " ", "a", " ", "matrix", " ", "as", " ", 
      "homework", " ", "it", " ", "should", " ", "be", " ", "in", " ", 
      "matrix", " ", 
      RowBox[{"form", ".", " ", "All"}], " ", "matricies", " ", "again", " ", 
      "are", " ", "just", " ", "lists", " ", "of", " ", "lists", " ", "in", 
      " ", "this", " ", 
      RowBox[{"language", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"MatrixForm", "[", "lofl", "]"}]}]], "Input",
 CellChangeTimes->{{3.7127890914394283`*^9, 
  3.712789183552113*^9}},ExpressionUUID->"a957dc8b-a741-4c04-a088-\
e700fae0f42a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"20", "30", "40"},
     {"20", "30", "40"},
     {"20", "30", "40"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.712789127333453*^9, 
  3.713052734250506*^9},ExpressionUUID->"892d6792-419c-461a-98aa-\
2a0f6d059494"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Looking", " ", "back", " ", "at", " ", "the", " ", "variable", " ", 
   "lofl"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7127891301186047`*^9, 3.712789130721736*^9}, {
  3.712789186215809*^9, 
  3.712789207143468*^9}},ExpressionUUID->"3739741d-39e1-4e17-9088-\
ae827e871163"],

Cell[CellGroupData[{

Cell[BoxData["lofl"], "Input",
 CellChangeTimes->{{3.712789208951445*^9, 
  3.7127892093198147`*^9}},ExpressionUUID->"539a878e-74bd-4618-9e88-\
2b0a1fd622e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.712789209797249*^9, 
  3.713052734298917*^9},ExpressionUUID->"a8bec8c7-77cb-4123-8571-\
931329a82b2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "It", " ", "is", " ", "still", " ", "thankfully", " ", "just", " ", "a", 
     " ", "list", " ", "of", " ", 
     RowBox[{"lists", ".", " ", "How"}], " ", "do", " ", "we", " ", "access", 
     " ", "parts", " ", "of", " ", "the", " ", 
     RowBox[{"list", "?", " ", "Suppose"}], " ", "I", " ", "wanted", " ", 
     "to", " ", "turn", " ", "the", " ", "diagonals", " ", "into", " ", "10", 
     "*", " ", "their", " ", "current", " ", 
     RowBox[{
      RowBox[{"selves", "?", " ", "Part"}], "[", 
      RowBox[{"A", ",", " ", "i"}], "]"}], " ", "gives", " ", "me", " ", 
     "the", " ", "ith", " ", "entry", " ", "of", " ", "the", " ", "list", " ", 
     RowBox[{"A", ".", " ", "in"}], " ", "this", " ", "case", " ", "it", " ", 
     "gives", " ", "me", " ", "the", " ", "first", " ", "list", " ", "for", 
     " ", "i"}], " ", "=", " ", "1."}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Part", "[", 
    RowBox[{"lofl", ",", " ", "i"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.712789213006115*^9, 
  3.712789354802394*^9}},ExpressionUUID->"3fa050d0-0d26-47a2-9833-\
22fcb0f0be39"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "30", ",", "40"}], "}"}]], "Output",
 CellChangeTimes->{3.7127893566228533`*^9, 
  3.713052734346058*^9},ExpressionUUID->"7c4106cb-fe6f-4b5f-bc21-\
b49417e7c9ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Suppose", " ", "I", " ", "just", " ", "wanted", " ", "the", " ", "first", 
    " ", "entry", " ", "of", " ", "the", " ", "first", " ", "list", " ", "I", 
    " ", "could", " ", 
    RowBox[{"say", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"j", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Part", "[", 
    RowBox[{
     RowBox[{"Part", "[", 
      RowBox[{"lofl", ",", " ", "i"}], "]"}], ",", " ", "j"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7127893621864567`*^9, 3.7127893768873167`*^9}, {
  3.712789438938587*^9, 3.712789459117153*^9}, {3.712789627824213*^9, 
  3.712789632574152*^9}},ExpressionUUID->"529ad12e-ebfd-4863-891d-\
555340c5c69f"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.712789460990355*^9, 3.7127896339226437`*^9, 
  3.713052734443426*^9},ExpressionUUID->"2fe62984-327d-4263-b438-\
762485c6315c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Again, If you find yourself typing the same thing over and over and over and \
over, your program may run, it may give you good output but stop take a break \
come back to it. There is always a simpler way which will let you avoid \
typing repetitive things (recall our sandwich shop if statement):\
\>", "Subsection",
 CellChangeTimes->{{3.712788517652336*^9, 3.712788833887446*^9}, {
  3.712788870928453*^9, 3.712788884270391*^9}, {3.712788935029448*^9, 
  3.712789025020535*^9}, {3.712789497690818*^9, 3.712789594111972*^9}, {
  3.71278974560389*^9, 
  3.712789766027954*^9}},ExpressionUUID->"1db51564-ca45-4136-81ea-\
0caeda2708d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "In", " ", "this", " ", "case", " ", "we", " ", "can", " ", "replace", " ",
     "the", " ", "above", " ", "syntax", " ", 
    RowBox[{"with", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"j", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Part", "[", 
    RowBox[{"lofl", ",", " ", "i", ",", " ", "j"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7127893621864567`*^9, 3.7127893768873167`*^9}, {
  3.712789438938587*^9, 3.712789459117153*^9}, {3.712789554921768*^9, 
  3.712789558576453*^9}, {3.712789605527157*^9, 
  3.7127896456952057`*^9}},ExpressionUUID->"927649a2-db41-4319-8445-\
23a2d4f70e79"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.712789644001216*^9, 3.712789647907336*^9}, {
  3.713052723144868*^9, 
  3.713052734844612*^9}},ExpressionUUID->"04f1ae73-9309-4423-b232-\
9f6e8d78c235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "In", " ", "fact", " ", "there", " ", "is", " ", "a", " ", "better", " ", 
    "short", " ", "hand", " ", "for", " ", 
    RowBox[{"lists", ":", " ", 
     RowBox[{
     "double", " ", "brackets", " ", "after", " ", "the", " ", "list", " ", 
      "will", " ", "give", " ", "you", " ", "the", " ", "\[IndentingNewLine]",
       "ith", " ", "element", " ", "and", " ", "then", " ", "the", " ", "jth",
       " ", "element", " ", "of", " ", "the", " ", "ith", " ", 
      RowBox[{"element", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"lofl", "[", 
   RowBox[{"[", "i", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7127897778925753`*^9, 
  3.712789851818763*^9}},ExpressionUUID->"e3a36c89-8b2b-4fd2-9ae1-\
9590c7bd4f0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "30", ",", "40"}], "}"}]], "Output",
 CellChangeTimes->{3.712789801027412*^9, 3.71278985232239*^9, 
  3.713052734906856*^9},ExpressionUUID->"51366f2a-b947-49f2-8bb8-\
a3dadd8e59ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lofl", "[", 
   RowBox[{"[", "i", "]"}], "]"}], "[", 
  RowBox[{"[", "j", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.712789854037191*^9, 
  3.712789860673626*^9}},ExpressionUUID->"36e31858-aaa3-4023-9e8a-\
4867e03a3c47"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.712789861343781*^9, 
  3.713052734993765*^9},ExpressionUUID->"aa751883-8e53-49d4-bcdc-\
8c97d5c8fef8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Further", " ", 
   RowBox[{"tools", ":", "  ", 
    RowBox[{
     RowBox[{"the", " ", "double", " ", "semi"}], "-", 
     RowBox[{
     "colon", " ", "will", " ", "give", " ", "you", " ", "start", " ", "and", 
      " ", "stop", " ", "indicies", " ", "to", " ", "take", " ", 
      "from"}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127898636831093`*^9, 3.712789875144815*^9}, {
  3.712789910768923*^9, 
  3.712789927200375*^9}},ExpressionUUID->"5aee5d26-3db6-4116-8fd2-\
5fa2f8daff26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lofl", "[", 
   RowBox[{"[", "i", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"j", ";;", 
    RowBox[{"j", "+", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.712789469751671*^9, 3.712789485689741*^9}, {
  3.712789889264715*^9, 
  3.7127899060000563`*^9}},ExpressionUUID->"b08a1843-b9be-4726-a468-\
b6dd1a4c4acc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{{3.7127899044293327`*^9, 3.7127899062997093`*^9}, 
   3.7130527351267138`*^9},ExpressionUUID->"023f5948-5ac9-45c5-a5be-\
342cb861735d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "The", " ", "following", " ", "doesnt", " ", "give", " ", "us", " ", "what",
    " ", "we", " ", "would", " ", 
   RowBox[{"expect", ":"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127899504715567`*^9, 
  3.712790024008309*^9}},ExpressionUUID->"9aade44e-b114-4279-a817-\
0a3cde0c8182"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lofl", "[", 
   RowBox[{"[", 
    RowBox[{"i", ";;", 
     RowBox[{"i", " ", "+", "1"}]}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"j", ";;", 
    RowBox[{"j", "+", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.712789935305192*^9, 3.712789944648836*^9}, {
  3.712789984819199*^9, 
  3.71278999272657*^9}},ExpressionUUID->"2db22195-c4f3-4c70-b97d-\
7268a018f652"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "30", ",", "40"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.712789937171*^9, 3.7127899451108217`*^9}, {
   3.712789987547347*^9, 3.712789997707548*^9}, 
   3.713052735166175*^9},ExpressionUUID->"64c3443c-c9d1-40ae-a8b5-\
73209996069d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"we", " ", "instead", " ", 
   RowBox[{"say", ":"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712790034952424*^9, 
  3.712790039712015*^9}},ExpressionUUID->"cfeb9ea2-e456-49c8-88ad-\
555669fda487"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lofl", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"i", ";;", 
     RowBox[{"i", " ", "+", "1"}]}], ",", 
    RowBox[{"j", ";;", 
     RowBox[{"j", "+", "1"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7127900435210657`*^9, 
  3.7127900562872562`*^9}},ExpressionUUID->"6d6867b7-fa99-4487-b2d2-\
7bf6debbb4e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "30"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7127900453217907`*^9, 3.7127900588622847`*^9}, 
   3.713052735243301*^9},ExpressionUUID->"ef5318c2-26ee-4207-a052-\
ff3ba1db6a15"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "Recall", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712790227012763*^9, 
  3.712790255233575*^9}},ExpressionUUID->"3facc0a9-47c5-43af-9c9d-\
52b71a83c7f1"],

Cell[CellGroupData[{

Cell[BoxData["l2"], "Input",
 CellChangeTimes->{{3.712790248947104*^9, 
  3.7127902490499687`*^9}},ExpressionUUID->"40e9c67e-e7d2-497a-b9b0-\
30f489a63329"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "10", ",", "1.5`", ",", "\[ImaginaryI]", 
   ",", "\<\"Friday\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.712790249345952*^9, 
  3.7130527353099546`*^9},ExpressionUUID->"2c3fa0da-b59e-4d18-937a-\
ad00f749ece9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Begining", " ", "through", " ", "entry", " ", "2"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.71279025688992*^9, 
  3.712790266049221*^9}},ExpressionUUID->"654af71c-8f7d-4821-b31b-\
c141a0c066dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l2", "[", 
  RowBox[{"[", 
   RowBox[{";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.712790061549574*^9, 3.7127900738145313`*^9}, {
  3.712790229674899*^9, 
  3.712790229810444*^9}},ExpressionUUID->"570ab83d-c1fd-4e54-897e-\
f8361406e6ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{{3.712790063784069*^9, 3.712790074261436*^9}, 
   3.712790230355886*^9, 
   3.71305273539434*^9},ExpressionUUID->"01714943-1f54-4bb4-a454-\
09d412322a17"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"every", " ", "second", " ", "entry"}], "*)"}]], "Input",
 CellChangeTimes->{{3.712790271362612*^9, 
  3.712790274937381*^9}},ExpressionUUID->"2b8119d5-9a11-40aa-b192-\
b04e281bf22c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l2", "[", 
  RowBox[{"[", 
   RowBox[{";;", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.712790281337941*^9, 
  3.712790281465255*^9}},ExpressionUUID->"1a8f0476-6dc3-4fb4-9afa-\
ee3e2a194cca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "1.5`", ",", "\<\"Friday\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.712790282212833*^9, 
  3.71305273547668*^9},ExpressionUUID->"16be0c6a-61c3-42b7-b5a6-fc1edc8cecf7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"every", " ", "third", " ", "entry"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7127902962688713`*^9, 
  3.712790296728881*^9}},ExpressionUUID->"a3098ca3-0f70-47ec-a16e-\
0681b55d33bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l2", "[", 
  RowBox[{"[", 
   RowBox[{";;", ";;", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7127902903378*^9, 
  3.712790290408526*^9}},ExpressionUUID->"d244e0db-36ad-4513-bf9a-\
9571f864a84e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "\[ImaginaryI]"}], "}"}]], "Output",
 CellChangeTimes->{3.712790290717786*^9, 
  3.713052735569994*^9},ExpressionUUID->"a321c222-cb29-487e-9fd4-\
bbe13c4eef4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Section 4. 
For and While \
\>", "Section",
 CellChangeTimes->{{3.712779898516843*^9, 3.712779910636368*^9}, {
  3.7127822286673603`*^9, 3.712782233131263*^9}, {3.712782323961154*^9, 
  3.712782332633109*^9}, {3.712782911605081*^9, 3.7127829161866493`*^9}, {
  3.7127833265953693`*^9, 3.7127833300566473`*^9}, {3.7127840972382793`*^9, 
  3.712784105181843*^9}, {3.7127841610588837`*^9, 3.712784198209217*^9}, {
  3.712790321007533*^9, 
  3.712790339263585*^9}},ExpressionUUID->"ac98b2f6-b29d-4d07-956c-\
c73c83922e7e"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "So", " ", "far", " ", "I", " ", "have", " ", "made", " ", "such", " ", "a",
    " ", "big", " ", "fuss", " ", "about", " ", "there", " ", "being", " ", 
   "no", " ", "need", " ", "to", " ", "write", " ", "the", " ", "same", " ", 
   "thing", " ", "over", " ", "and", " ", 
   RowBox[{"over", ".", " ", "Wow"}], " ", "I", " ", "keep", " ", "saying", 
   " ", 
   RowBox[{"this", ".", " ", "I"}], " ", "should", " ", "take", " ", "my", 
   " ", "own", " ", "advice", " ", "but", " ", "I", " ", 
   RowBox[{"can", "'"}], "t", " ", "stress", " ", "this", " ", "strongly", 
   " ", 
   RowBox[{"enough", ".", " ", "So"}], " ", "here", " ", "is", " ", "the", 
   " ", "real", " ", 
   RowBox[{"machinery", ":"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7127903449954443`*^9, 
  3.7127904070011044`*^9}},ExpressionUUID->"88574636-ec94-46ab-a06f-\
38f458138295"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
    RowBox[{"i", " ", "\[LessEqual]", " ", "10"}], ",", " ", 
    RowBox[{"i", " ", "=", " ", 
     RowBox[{"i", " ", "+", " ", "1"}]}], ",", " ", 
    RowBox[{"Print", "[", "i", "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712790409209478*^9, 3.712790438856594*^9}, {
  3.71279077627147*^9, 
  3.712790778852055*^9}},ExpressionUUID->"84cd1210-867a-4906-8437-\
9e4fce80e855"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.713052735647934*^9},ExpressionUUID->"bd82d9c4-cbb6-47e2-9f9d-\
179d6f4cf2cc"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.713052735651382*^9},ExpressionUUID->"c4c808c8-9e9d-4ae2-9686-\
1cf996b03794"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.71305273565663*^9},ExpressionUUID->"eb51100f-1526-42ec-990d-\
f8aa818f58b9"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.713052735661791*^9},ExpressionUUID->"2897a4a7-3ce4-4ff6-a801-\
89e8c60c9e39"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.713052735667107*^9},ExpressionUUID->"5647d9de-e555-4739-bcca-\
8bd9a2243d6d"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.7130527356724253`*^9},ExpressionUUID->"84e88151-2d80-4895-b497-\
6f33359934f6"],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.7130527356775618`*^9},ExpressionUUID->"3f4127ee-ec72-445f-a856-\
d55afdd623e1"],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.713052735682959*^9},ExpressionUUID->"19feab6f-7ae3-43dd-95d6-\
b1ec16533742"],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.713052735688087*^9},ExpressionUUID->"7f667e93-85cb-4042-be22-\
06b7f597a8f6"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{{3.712790433141732*^9, 3.712790440104336*^9}, 
   3.712790788252522*^9, 
   3.713052735693482*^9},ExpressionUUID->"98cb09c5-d6db-4623-988f-\
f3f54b4a5f0f"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{
   RowBox[{"For", " ", "is", " ", "a", " ", "looping", " ", 
    RowBox[{"mechanism", ".", " ", "It"}], " ", "is", " ", "a", " ", 
    "function", " ", "with", " ", "four", " ", 
    RowBox[{"arguments", ".", " ", "Its"}], " ", "first", " ", "3", " ", 
    "arguments", " ", "specify", " ", "when", " ", "and", " ", "if", " ", 
    "the", " ", "fourth", " ", "argument", " ", "should", " ", "be", " ", 
    "executed", " ", "and", " ", "how", " ", "many", " ", 
    RowBox[{"times", ".", "    ", "Lets"}], " ", "take", " ", "a", " ", 
    "look", " ", "at", " ", "the", " ", "last", " ", "argument", " ", 
    RowBox[{"first", ":", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Print", "[", "i", "]"}], ".", " ", "This"}], " ", "is", " ", 
      "the", " ", "body", " ", "of", " ", "the", " ", "For", " ", 
      "loop"}]}]}], ",", " ", 
   RowBox[{
   "this", " ", "is", " ", "where", " ", "the", " ", "major", " ", 
    "statement", " ", "or", " ", "collection", " ", "of", " ", "statements", 
    " ", 
    RowBox[{"goes", ".", " ", "\[IndentingNewLine]", "Usually"}], " ", "when",
     " ", "we", " ", "write", " ", "a", " ", "for", " ", "loop"}], ",", " ", 
   RowBox[{
   "the", " ", "first", " ", "3", " ", "lines", " ", "go", " ", "on", " ", 
    "the", " ", "same", " ", "line", " ", "seperated", " ", "by", " ", 
    "commas", " ", "and", " ", "the", " ", "body", " ", "which", " ", 
    "usually", " ", "has", " ", "many", " ", "statements", " ", "gets", " ", 
    "multiple", " ", "lines", " ", "like", " ", "an", " ", "If", " ", 
    RowBox[{
    "statement", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "The"}], 
    " ", "first", " ", "argument", " ", "of", " ", "the", " ", "For", " ", 
    "loop", " ", "is", " ", "always", " ", 
    RowBox[{"executed", ".", " ", "It"}], " ", "is", " ", "only", " ", 
    "executed", " ", "once", " ", "at", " ", "the", " ", "very", " ", 
    RowBox[{"begining", ".", " ", "Then"}], " ", "the", " ", "following", " ",
     "things", " ", 
    RowBox[{"occur", ".", " ", "The"}], " ", "second"}], ",", " ", 
   RowBox[{
   "fourth", " ", "and", " ", "then", " ", "3", "rd", " ", "arguments", " ", 
    "are", " ", "executed", " ", "in", " ", "that", " ", 
    RowBox[{"order", ".", " ", "They"}], " ", "are", " ", "called", " ", 
    "the", " ", "test"}], ",", " ", "body", ",", " ", 
   RowBox[{"and", " ", 
    RowBox[{
    "incrementation", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "In"}], " ", "this", " ", "case", " ", "the", " ", "test", " ", "is", 
    " ", "the", " ", 
    RowBox[{"statement", ":", " ", 
     RowBox[{
      RowBox[{
      "is", " ", "i", " ", "less", " ", "than", " ", "or", " ", "equal", " ", 
       "to", " ", 
       RowBox[{"10", "?", "  ", "i"}]}], " ", "\[LessEqual]", " ", 
      RowBox[{"10", "  ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"this", " ", "symbol"}], " ", "\[LessEqual]", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"analogously", " ", "\[GreaterEqual]"}], ")"}], "  ", 
            "is", " ", "generated", " ", "by", " ", "typing", " ", "a"}], " ",
            "<", " ", 
           RowBox[{"and", " ", "then", " ", "a"}]}], " ", "=", " ", 
          RowBox[{"next", " ", "to", " ", "each", " ", "other"}]}], ")"}], 
        ".", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "If"}], " ", 
       "the", " ", "test", " ", "evaluates", " ", "to", " ", "true"}]}]}]}], 
   ",", " ", 
   RowBox[{"the", " ", "fourth", " ", "argument"}], ",", " ", 
   RowBox[{"the", " ", "body"}], ",", " ", 
   RowBox[{"is", " ", "executed"}], ",", " ", 
   RowBox[{
   "in", " ", "this", " ", "case", " ", "just", " ", "the", " ", "simple", 
    " ", "print", " ", "statement"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Finally", " ", "the", " ", "3", "rd", " ", "statement", " ", "i"}], " ", 
    "=", " ", 
    RowBox[{
     RowBox[{"i", " ", "+", " ", 
      RowBox[{
      "1", " ", "is", " ", "executed", " ", "to", " ", "increment", " ", 
       RowBox[{
       "i", ".", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "Initially"}], " ", "we", " ", "have", " ", "1.", " ", "Then", " ", 
       "we", " ", "check", " ", "1"}]}], " ", "\[LessEqual]", " ", "10"}]}], 
   ",", " ", 
   RowBox[{"this", " ", "is", " ", "true"}], ",", " ", 
   RowBox[{
   "we", " ", "execute", " ", "the", " ", "body", " ", "and", " ", "print", 
    " ", "i"}], ",", " ", 
   RowBox[{
   "which", " ", "is", " ", "1.", " ", "then", " ", "we", " ", "add", " ", 
    "one", " ", "to", " ", "i", " ", "and", " ", "update", " ", "i"}], ",", 
   " ", 
   RowBox[{
   "at", " ", "this", " ", "point", " ", "we", " ", "execute", " ", "another",
     " ", "check"}], ",", " ", 
   RowBox[{"2", " ", "\[LessEqual]", " ", 
    RowBox[{
     RowBox[{"10", "?", " ", "this"}], " ", "is", " ", "true", " ", "we", " ",
      "execute", " ", "the", " ", "body", " ", "and", " ", "print", " ", 
     "i"}]}], ",", " ", 
   RowBox[{
   "which", " ", "is", " ", "2.", " ", "then", " ", "we", " ", "increment", 
    " ", "i"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{
   "at", " ", "this", " ", "point", " ", "we", " ", "go", " ", "around", " ", 
    "and", " ", "around", " ", "the", " ", 
    RowBox[{"(", 
     RowBox[{
     "maybe", " ", "its", " ", "now", " ", "clear", " ", "why", " ", "we", 
      " ", "call", " ", "it", " ", "a", " ", "loop"}], ")"}], " ", "loop"}], 
   ",", " ", 
   RowBox[{
   "until", " ", "finally", " ", "we", " ", "have", " ", "printed", " ", 
    "10"}], ",", " ", 
   RowBox[{"we", " ", "then", " ", "increment", " ", "to", " ", "11"}], ",", 
   " ", 
   RowBox[{
    RowBox[{
    "and", " ", "11", " ", "is", " ", "not", " ", "less", " ", "than", " ", 
     "or", " ", "equal", " ", "to", " ", "10.", "  ", "11"}], " ", 
    "\[LessEqual]", " ", 
    RowBox[{"10", " ", "evaluates", " ", "to", " ", "False"}]}], ",", " ", 
   RowBox[{
   "at", " ", "which", " ", "point", " ", "we", " ", "exit", " ", "the", " ", 
    
    RowBox[{"loop", ".", " ", "For"}], " ", "drops", " ", "us", " ", "out", 
    " ", "at", " ", "the", " ", "bottom", " ", "of", " ", "the", " ", 
    RowBox[{"loop", ".", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Note", ":", " ", 
      RowBox[{"++", "i"}]}]}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"and", " ", "i"}], " ", "+=", " ", 
     RowBox[{
     "1", " ", "are", " ", "both", " ", "shorthand", " ", "for", " ", "i"}]}],
     " ", "=", " ", 
    RowBox[{"i", " ", "+", " ", "1."}]}]}], " ", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "                 ", "*)"}]], "Input",
 CellChangeTimes->{{3.712790751246991*^9, 3.712790795062471*^9}, {
   3.712790934618194*^9, 3.712791111793909*^9}, {3.7127911460296793`*^9, 
   3.712791275766333*^9}, {3.7127913673290777`*^9, 3.7127915267897377`*^9}, {
   3.7127915703497133`*^9, 3.712791766920714*^9}, {3.7127917980074987`*^9, 
   3.71279182191989*^9}, 
   3.713052685599229*^9},ExpressionUUID->"03b26e24-e9ba-4079-a08f-\
ee233b01bfe2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"++", "i"}]], "Input",
 CellChangeTimes->{{3.7127918744434566`*^9, 
  3.712791875187871*^9}},ExpressionUUID->"fba2e8c8-f433-4ec0-a5f6-\
43f3505b009f"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{{3.7130527150083647`*^9, 
  3.713052735775687*^9}},ExpressionUUID->"9b1e5a4a-287d-4136-bf64-\
2f35e54acd35"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "What", " ", "could", " ", "we", " ", "do", " ", "over", " ", "and", " ", 
   RowBox[{"over", "?"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.71279197233745*^9, 
  3.712791997145575*^9}},ExpressionUUID->"b6abecfe-77b1-487e-a0c0-\
3d6c2de5763b"],

Cell[CellGroupData[{

Cell[BoxData["l2"], "Input",
 CellChangeTimes->{{3.712791999643592*^9, 
  3.7127919998810997`*^9}},ExpressionUUID->"71625b50-7836-4af4-b605-\
4ddac4c1404f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "10", ",", "1.5`", ",", "\[ImaginaryI]", 
   ",", "\<\"Friday\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.712792000182012*^9, {3.71305271738375*^9, 
   3.7130527453317327`*^9}},ExpressionUUID->"90c4d778-c92c-470a-90c9-\
a0c2ab0a2ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "l2", "]"}]], "Input",
 CellChangeTimes->{{3.712792002566349*^9, 
  3.712792012887706*^9}},ExpressionUUID->"08233248-f94c-4167-a85c-\
c95ee200f350"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.7127920132078857`*^9, {3.713052735942132*^9, 
   3.7130527481149273`*^9}},ExpressionUUID->"57b5f767-c5f5-4ddf-bc1b-\
ddac02144db2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "We", " ", "are", " ", "going", " ", "to", " ", "iterate", " ", "over", " ",
    "a", " ", "list", " ", "using", " ", "a", " ", "for", " ", 
   RowBox[{"loop", ".", " ", "In"}], " ", "the", " ", "body", " ", "of", " ", 
   "the", " ", "for", " ", "loop", " ", "the", " ", "value", " ", "of", " ", 
   "the", " ", "iterator", " ", "is", " ", "used", " ", "to", " ", "take", 
   " ", "the", " ", "part", " ", "of", " ", 
   RowBox[{"l2", ".", " ", "We"}], " ", "then", " ", "print", " ", "it", " ", 
   
   RowBox[{"out", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712792020093141*^9, 3.7127920317354193`*^9}, {
  3.71279225139594*^9, 3.712792279563389*^9}, {3.712792422046938*^9, 
  3.7127924245108337`*^9}},ExpressionUUID->"afbd5253-f345-4c79-916f-\
49e8a99d0a65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
    RowBox[{"i", " ", "\[LessEqual]", " ", 
     RowBox[{"Length", "[", "l2", "]"}]}], ",", " ", 
    RowBox[{"++", "i"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", "\[IndentingNewLine]", 
      RowBox[{"l2", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.712791529990313*^9, 3.712791530174774*^9}, {
  3.7127917795784073`*^9, 3.712791795504141*^9}, {3.712791969120472*^9, 
  3.712791969300303*^9}, {3.712792163697928*^9, 3.712792187042273*^9}, {
  3.712792239387628*^9, 
  3.712792248805172*^9}},ExpressionUUID->"ad0795ca-9536-450c-bc6c-\
b96c710de1b9"],

Cell[CellGroupData[{

Cell[BoxData["True"], "Print",
 CellChangeTimes->{{3.712792176393318*^9, 3.712792189043899*^9}, 
   3.712792270849538*^9, {3.713052736025894*^9, 
   3.713052753726993*^9}},ExpressionUUID->"52ce8354-3c86-4443-bfb4-\
9195f0d06bee"],

Cell[BoxData["10"], "Print",
 CellChangeTimes->{{3.712792176393318*^9, 3.712792189043899*^9}, 
   3.712792270849538*^9, {3.713052736025894*^9, 
   3.713052753731282*^9}},ExpressionUUID->"6a067b4c-5400-47d9-8593-\
c923ccbb1f3b"],

Cell[BoxData["1.5`"], "Print",
 CellChangeTimes->{{3.712792176393318*^9, 3.712792189043899*^9}, 
   3.712792270849538*^9, {3.713052736025894*^9, 
   3.7130527537366257`*^9}},ExpressionUUID->"e7bce28e-ef37-4823-8058-\
00f183ab2900"],

Cell[BoxData["\[ImaginaryI]"], "Print",
 CellChangeTimes->{{3.712792176393318*^9, 3.712792189043899*^9}, 
   3.712792270849538*^9, {3.713052736025894*^9, 
   3.713052753741824*^9}},ExpressionUUID->"561922ee-102e-4f9c-9af3-\
b771e5a8e6bc"],

Cell[BoxData["\<\"Friday\"\>"], "Print",
 CellChangeTimes->{{3.712792176393318*^9, 3.712792189043899*^9}, 
   3.712792270849538*^9, {3.713052736025894*^9, 
   3.713052753747077*^9}},ExpressionUUID->"fcd5a0e9-fe97-428a-af67-\
31340c198d33"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Let", "'"}], "s", " ", "alter", " ", "a", " ", 
   RowBox[{"list", ":"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712792440154498*^9, 
  3.712792462142605*^9}},ExpressionUUID->"a99db6e0-fd2f-48e9-bb72-\
30a778148f82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712792465122216*^9, 3.712792483917886*^9}, 
   3.712792560285281*^9},ExpressionUUID->"6004730c-0ac8-41d2-b807-\
87e16708cf27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", "1"}], ",", " ", 
    RowBox[{"i", " ", "\[LessEqual]", " ", 
     RowBox[{"Length", "[", "a", "]"}]}], ",", " ", 
    RowBox[{"++", "i"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"++", 
     RowBox[{"a", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.712792653959433*^9, 
  3.7127926904527473`*^9}},ExpressionUUID->"39bb392c-7839-4137-b665-\
9eebb124cac2"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.712792696012836*^9, {3.712792786893407*^9, 
   3.7127927877259912`*^9}},ExpressionUUID->"49d6a22a-0e47-44b5-926a-\
6cb7da73b1f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7127926962882767`*^9, 3.712792708124865*^9}, 
   3.712792791776531*^9, {3.713052736304635*^9, 
   3.7130527602413597`*^9}},ExpressionUUID->"47a01464-5052-495d-8337-\
ea0e64fc38d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Lets", " ", "make", " ", "a", " ", "10", " ", "by", " ", "10", " ", 
   "identity", " ", 
   RowBox[{"matrix", ":"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712792866088409*^9, 
  3.712792880381996*^9}},ExpressionUUID->"11928eab-31c9-4119-9e2f-\
1f35a91281b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"id", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.71279288527943*^9, 
  3.712792892054617*^9}},ExpressionUUID->"7504b77b-f4c2-45c8-a338-\
7f05a9e4f417"],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
    RowBox[{"i", " ", "\[LessEqual]", " ", "10"}], ",", " ", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", "\[IndentingNewLine]", 
     RowBox[{
     "We", " ", "are", " ", "going", " ", "to", " ", "add", " ", "10", " ", 
      "new", " ", "rows", " ", "to", " ", 
      RowBox[{"id", ".", " ", "One"}], " ", "row", " ", "will", " ", "be", 
      " ", "added", " ", "each", " ", "time", " ", "around", " ", "the", " ", 
      "outter", " ", 
      RowBox[{"loop", ".", "\[IndentingNewLine]", "Inside"}], " ", "the", " ",
       "inner", " ", "loop", " ", "we", " ", "will", " ", "populate", " ", 
      "each", " ", "row", " ", "with", " ", "the", " ", "correct", " ", 
      RowBox[{"elements", ".", " ", "This"}], " ", "will", " ", "involve", 
      " ", "adding", " ", "nine", " ", 
      RowBox[{"zero", "'"}], "s", " ", "and", " ", "one", " ", 
      RowBox[{"one", "."}]}], " ", "\[IndentingNewLine]", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newrow", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"j", " ", "\[LessEqual]", " ", "10"}], ",", " ", 
       RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", " ", "\[Equal]", " ", "i"}], ",", " ", 
          RowBox[{"(*", "  ", 
           RowBox[{
            RowBox[{"if", " ", "i"}], " ", "\[Equal]", " ", 
            RowBox[{
            "j", " ", "we", " ", "should", " ", "append", " ", "to", " ", 
             "the", " ", "newrow", " ", "a", " ", "1", " ", "otherwise", " ", 
             "it", " ", "gets", " ", "a", " ", "0."}]}], " ", "*)"}], 
          "\[IndentingNewLine]", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"newrow", ",", " ", "1"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"newrow", ",", " ", "0"}], "]"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"end", " ", "If"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
     ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"end", " ", "j", " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "finally", " ", "we", " ", "append", " ", "the", " ", "row", " ", "to", 
       " ", "the", " ", "list", " ", "id"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"id", ",", " ", "newrow"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"end", " ", "i", " ", "loop"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.712792836700369*^9, 3.712792862902574*^9}, {
  3.7127928962379847`*^9, 3.7127932152860537`*^9}, {3.713052779528184*^9, 
  3.713052787132833*^9}},ExpressionUUID->"b390dd17-1f0d-4b6c-84b3-\
28b34ebe115b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "id", "]"}]], "Input",
 CellChangeTimes->{{3.712793224259877*^9, 
  3.712793231269161*^9}},ExpressionUUID->"06097b73-a296-4f78-91d3-\
a6d0aa65ef37"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.712793231678955*^9, 3.713052736434495*^9, 
  3.713052792477304*^9},ExpressionUUID->"52de4512-9e98-4c30-a524-\
f0d7ed5990df"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Lets", " ", "make", " ", "a", " ", "while", " ", 
    RowBox[{"loop", ".", " ", "This"}], " ", "is", " ", "simpler", " ", "but",
     " ", "more", " ", "dangerous", " ", "than", " ", "a", " ", "For", " ", 
    RowBox[{"loop", ".", " ", "There"}], " ", "are", " ", "no", " ", 
    RowBox[{"Iterators", ".", " ", "While"}], " ", "takes", " ", "two", " ", 
    "arguments"}], ",", " ", 
   RowBox[{"a", " ", "test", " ", "condition", " ", "and", " ", "a", " ", 
    RowBox[{"body", ".", " ", "It"}], " ", "evaluates", " ", "this", " ", 
    "pair", " ", "infinitely", " ", "as", " ", "long", " ", "as", " ", "the", 
    " ", "test", " ", "condition", " ", "is", " ", 
    RowBox[{"true", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7128474355788507`*^9, 
  3.7128475636688128`*^9}},ExpressionUUID->"1b26bd11-dc05-424d-9838-\
aae2a2687923"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", " ", "\[LessEqual]", " ", "5"}], ",", " ", 
    "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Print", "[", "i", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"++", "i"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.712847570237007*^9, 
  3.712847631488529*^9}},ExpressionUUID->"f0e66192-90cf-4ead-ba79-\
ea5edd125de1"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.7128476328438883`*^9}, 
   3.713052736556744*^9, 
   3.713052797355112*^9},ExpressionUUID->"5634c74c-0b1c-4a75-9662-\
19b96e68892f"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.7128476328438883`*^9}, 
   3.713052736556744*^9, 
   3.713052797359453*^9},ExpressionUUID->"70641f01-94ab-463c-b21e-\
8607c82f4e47"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.7128476328438883`*^9}, 
   3.713052736556744*^9, 
   3.713052797364119*^9},ExpressionUUID->"e8754dd0-4a70-478d-a730-\
7a94ffd81d1d"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.7128476328438883`*^9}, 
   3.713052736556744*^9, 
   3.7130527973687162`*^9},ExpressionUUID->"9012749c-3a6b-4f87-bbf7-\
aab3b5c9d5fa"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.7128476328438883`*^9}, 
   3.713052736556744*^9, 
   3.7130527973733997`*^9},ExpressionUUID->"e5629313-475d-46f1-86ea-\
cdf3fef0299b"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Note", " ", "the", " ", "difference", " ", "in", " ", "output", " ", "if", 
   " ", "we", " ", "switch", " ", "the", " ", "increment", " ", "and", " ", 
   "the", " ", 
   RowBox[{"print", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712847620235159*^9, 3.712847626374351*^9}, {
  3.712847698583377*^9, 
  3.71284771172003*^9}},ExpressionUUID->"3291bc2e-4794-40a6-b583-\
7556b0777129"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", " ", "\[LessEqual]", " ", "5"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"++", "i"}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"Print", "[", "i", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.712847570237007*^9, 3.712847606517383*^9}, {
  3.712847637470842*^9, 
  3.712847646518517*^9}},ExpressionUUID->"40c1fbfc-6d37-458b-a51c-\
8b5a1cf98177"],

Cell[CellGroupData[{

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.712847609398735*^9}, 
   3.7128476474432497`*^9, 3.713052736657446*^9, 
   3.7130528036241913`*^9},ExpressionUUID->"8f61a14c-8057-4499-8a7a-\
0594435b8d44"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.712847609398735*^9}, 
   3.7128476474432497`*^9, 3.713052736657446*^9, 
   3.71305280362844*^9},ExpressionUUID->"30466e33-88bb-4ed3-9903-\
d82b01d569b4"],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.712847609398735*^9}, 
   3.7128476474432497`*^9, 3.713052736657446*^9, 
   3.713052803633225*^9},ExpressionUUID->"be28c458-8e9b-49f7-a3f5-\
ee9cba4903b8"],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.712847609398735*^9}, 
   3.7128476474432497`*^9, 3.713052736657446*^9, 
   3.713052803638019*^9},ExpressionUUID->"6c588a5e-7acc-45b6-9d3c-\
d9cd222a0d7d"],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{{3.712847598520946*^9, 3.712847609398735*^9}, 
   3.7128476474432497`*^9, 3.713052736657446*^9, 
   3.7130528036428337`*^9},ExpressionUUID->"61482f05-97e1-435c-9460-\
f7c02bdfc25f"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "When", " ", "would", " ", "you", " ", "use", " ", "a", " ", "while", " ", 
   RowBox[{
   "loop", "?", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "How"}], 
   " ", "about", " ", "when", " ", "you", " ", "dont", " ", "know", " ", 
   "exactly", " ", "how", " ", "many", " ", "iterations", " ", "your", " ", 
   "loop", " ", "will", " ", "take", " ", "to", " ", "get", " ", "its", " ", 
   RowBox[{"answer", ".", " ", "In"}], " ", "this", " ", "case", " ", "you", 
   " ", "would", " ", "want", " ", "to", " ", "use", " ", "a", " ", "while", 
   " ", "loop", " ", "so", " ", "that", " ", "you", " ", "dont", " ", "run", 
   " ", "for", " ", "too", " ", "long", " ", "or", " ", "too", " ", 
   RowBox[{"short", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712848049157982*^9, 
  3.712848108555448*^9}},ExpressionUUID->"8923461e-03cd-4068-9bb0-\
c04f3192d835"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Suppose", " ", "we", " ", "had", " ", "a", " ", "loop", " ", "that", " ", 
   "kept", " ", "going", " ", "based", " ", "on", " ", "two", " ", 
   RowBox[{"conditions", ".", " ", "Then"}], " ", "the", " ", "test", " ", 
   "expression", " ", "could", " ", "be", " ", "a", " ", "little", " ", 
   "more", " ", 
   RowBox[{"complicated", ".", " ", "Here"}], " ", "our", " ", "test", " ", 
   "condition", " ", "says", " ", "keep", " ", "going", " ", 
   RowBox[{"when", ":", " ", 
    RowBox[{"a", "\[LessEqual]", " ", 
     RowBox[{"5", " ", "or", " ", "b"}], " ", "\[LessEqual]", " ", 
     "10."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712848143823062*^9, 3.712848175996933*^9}, {
  3.712848462713277*^9, 
  3.712848494799655*^9}},ExpressionUUID->"e4726b48-b97e-4ac1-b044-\
424d8249da6c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", "<=", " ", "5"}], " ", "||", " ", 
     RowBox[{"b", " ", "<=", " ", "10"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<New step\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<a == \>\"", ",", "a"}], "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Print", "[", 
      RowBox[{"\"\<b == \>\"", ",", " ", "b"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<a * b == \>\"", ",", 
       RowBox[{"a", " ", "*", " ", "b"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", " ", "=", " ", 
      RowBox[{"a", "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"2", "*", "b"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7128481796630993`*^9, 3.7128483976707373`*^9}, {
  3.712848498097674*^9, 
  3.7128485074494953`*^9}},ExpressionUUID->"bc947b4c-8b82-4608-941e-\
a29f77af6afb"],

Cell[CellGroupData[{

Cell[BoxData["\<\"New step\"\>"], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736789423*^9},ExpressionUUID->"49800451-373c-4e35-96af-\
190057833b98"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a == \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["a == ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736793289*^9},ExpressionUUID->"270ca25e-37fc-46da-bfe1-\
cb061b968148"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"b == \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["b == ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736799305*^9},ExpressionUUID->"4c1b13e4-0e28-4455-ae72-\
df07dbd89e9d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["a * b == ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.7130527368043737`*^9},ExpressionUUID->"0cf98856-ca51-4fb7-9ed9-\
e0e4582fcb8c"],

Cell[BoxData["\<\"New step\"\>"], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736809381*^9},ExpressionUUID->"41904db1-83c7-4382-bd24-\
ed18f15cb3cb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a == \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["a == ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736814391*^9},ExpressionUUID->"dec7addb-b6ab-4413-ae86-\
7a88d0f71792"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"b == \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["b == ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.7130527368193607`*^9},ExpressionUUID->"9d3906ec-a77d-47b1-97bc-\
351e4b4bc112"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["a * b == ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.7130527368243723`*^9},ExpressionUUID->"0a11f8b0-3e37-4d3d-8a9c-\
15cf64c7cb32"],

Cell[BoxData["\<\"New step\"\>"], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.7130527368294373`*^9},ExpressionUUID->"f989463a-fe5d-4b4c-8436-\
1c47faa3889a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a == \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["a == ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736834607*^9},ExpressionUUID->"dc9f8c0c-68f1-42dd-9f8e-\
6f97e778cf20"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"b == \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["b == ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.7130527368398123`*^9},ExpressionUUID->"b7040048-7640-41cf-85e5-\
f674c900bcfe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "12"}],
  SequenceForm["a * b == ", 12],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736845066*^9},ExpressionUUID->"77325f40-fd70-4b99-9251-\
fda3bda5ccb6"],

Cell[BoxData["\<\"New step\"\>"], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.7130527368501*^9},ExpressionUUID->"d7b40c35-4e17-40bb-8fe8-ceff9d01e1ab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a == \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["a == ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736855301*^9},ExpressionUUID->"9bd63b93-ef14-4d46-8340-\
dd55ebb53032"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"b == \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["b == ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736860434*^9},ExpressionUUID->"2ec497e0-c684-4612-bd34-\
0496489a539e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "32"}],
  SequenceForm["a * b == ", 32],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.71305273686555*^9},ExpressionUUID->"847e3a23-8d2d-4f61-8c16-\
38c09a532828"],

Cell[BoxData["\<\"New step\"\>"], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.7130527368706713`*^9},ExpressionUUID->"48b8adea-47e6-41f6-9a16-\
22c9df74e0c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a == \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["a == ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736875739*^9},ExpressionUUID->"7d681c9a-c41b-4172-950d-\
b9788ab3bf73"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"b == \"\>", "\[InvisibleSpace]", "16"}],
  SequenceForm["b == ", 16],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736880795*^9},ExpressionUUID->"f6f0ef67-0bf1-464a-87c5-\
ae00d865ae2b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "80"}],
  SequenceForm["a * b == ", 80],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.712848356506282*^9, 3.7128483921385098`*^9, {3.712848432140792*^9, 
   3.712848433067243*^9}, 3.712848500798732*^9, 
   3.713052736885993*^9},ExpressionUUID->"51426f2d-49ee-4024-b677-\
c0157aa2f721"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Suppose", " ", "we", " ", "wanted", " ", "to", " ", "know", " ", "how", 
     " ", "many", " ", "times", " ", "we", " ", "went", " ", "around", " ", 
     "the", " ", "while", " ", 
     RowBox[{"loop", "?", " ", "We"}], " ", "could", " ", "initialize", " ", 
     "a", " ", "variable", " ", "with", " ", "1"}], ",", " ", 
    RowBox[{
    "then", " ", "add", " ", "one", " ", "to", " ", "the", " ", "variable", 
     " ", "every", " ", "time", " ", "we", " ", "go", " ", "around", " ", 
     "the", " ", "while", " ", 
     RowBox[{"loop", ".", " ", "In"}], " ", "this", " ", "way", " ", "after", 
     " ", "the", " ", "loop", " ", "ends", " ", "we", " ", "could", " ", 
     "ask"}], ",", " ", 
    RowBox[{
    "how", " ", "many", " ", "times", " ", "we", " ", "went", " ", "around", 
     " ", "by", " ", "just", " ", "looking", " ", "inside", " ", "this", " ", 
     
     RowBox[{"variable", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"counter", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", " ", "<=", " ", "5"}], " ", "||", " ", 
       RowBox[{"b", " ", "<=", " ", "10"}]}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"counter", " ", "=", " ", 
        RowBox[{"counter", " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<a * b == \>\"", ",", 
         RowBox[{"a", " ", "*", " ", "b"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"a", " ", "=", " ", 
        RowBox[{"a", "+", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", " ", "=", " ", 
        RowBox[{"2", "*", "b"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<We went around the while loop exactly \>\"", ",", " ", "counter", 
     ",", "\"\< times\>\""}], "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.712848538955557*^9, 3.712848574119578*^9}, {
   3.7128486196043177`*^9, 3.712848656361816*^9}, {3.712849410791539*^9, 
   3.712849468365573*^9}, 
   3.712849498530568*^9},ExpressionUUID->"ee2734aa-b9b6-476f-b630-\
84a5b9c60417"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["a * b == ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.712849464244782*^9, 3.712849468626272*^9}, 
   3.7130527369395857`*^9},ExpressionUUID->"d9e62d71-1c57-40e1-9d64-\
a8e308f4b580"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["a * b == ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.712849464244782*^9, 3.712849468626272*^9}, 
   3.713052736944221*^9},ExpressionUUID->"583ff62b-2afd-4272-9a21-\
e8833b4a6d64"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "12"}],
  SequenceForm["a * b == ", 12],
  Editable->False]], "Print",
 CellChangeTimes->{{3.712849464244782*^9, 3.712849468626272*^9}, 
   3.713052736949696*^9},ExpressionUUID->"d19515d0-eae0-44c7-8d41-\
febc6cfec4ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "32"}],
  SequenceForm["a * b == ", 32],
  Editable->False]], "Print",
 CellChangeTimes->{{3.712849464244782*^9, 3.712849468626272*^9}, 
   3.713052736954795*^9},ExpressionUUID->"aaf67e3f-575e-4395-ae27-\
8922db5f8c2b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"a * b == \"\>", "\[InvisibleSpace]", "80"}],
  SequenceForm["a * b == ", 80],
  Editable->False]], "Print",
 CellChangeTimes->{{3.712849464244782*^9, 3.712849468626272*^9}, 
   3.7130527369600487`*^9},ExpressionUUID->"136728aa-1bec-425c-9840-\
c7e5edc5d868"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"We went around the while loop exactly \"\>", 
   "\[InvisibleSpace]", "5", "\[InvisibleSpace]", "\<\" times\"\>"}],
  SequenceForm["We went around the while loop exactly ", 5, " times"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.712849464244782*^9, 3.712849468626272*^9}, 
   3.713052736965013*^9},ExpressionUUID->"b1feefdf-ba85-4542-ac66-\
7c82883735a5"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"A", " ", "while", " ", "loop", " ", "can", " ", "run", " ", 
   RowBox[{"forever", ":", " ", 
    RowBox[{
    "This", " ", "can", " ", "happen", " ", "when", " ", "the", " ", "test", 
     " ", "condition", " ", "always", " ", "evaluates", " ", "to", " ", 
     RowBox[{"true", "."}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712847722201624*^9, 3.7128478224921513`*^9}, {
  3.7128480429892473`*^9, 
  3.712848043124864*^9}},ExpressionUUID->"e6435cab-c64c-49ef-a262-\
ba46b893468c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7128485357564297`*^9, 
  3.712848537056657*^9}},ExpressionUUID->"21febd75-e3a6-4461-9e92-\
751563216d34"],

Cell["\<\
WARNING: While loops can be dangerous

IF YOU ARE STUCK IN AN INFINITE LOOP:

Go to the menu tab and select 

Evaluation -> Quit Kernel -> Local

This will stop the program in it\[CloseCurlyQuote]s tracks and clear all \
variables of their values. From black to blue all the symbols go. 

After you have finished coding and before you hand something in to me:

Follow the above instructions to quit the kernel. Then reevaluate your whole \
program to make sure that your program runs smoothly. \
\>", "Subsection",
 CellChangeTimes->{{3.7128478274833717`*^9, 3.7128479848579903`*^9}, {
  3.712849331816886*^9, 3.71284936433705*^9}, {3.712849811814694*^9, 
  3.712849813014195*^9}},ExpressionUUID->"71ea04a1-acbe-42fa-bf67-\
0e07d75afc9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 5. User defined functions", "Section",
 CellChangeTimes->{{3.712848023076098*^9, 3.712848030027891*^9}, {
  3.7128497881032257`*^9, 
  3.712849804253828*^9}},ExpressionUUID->"5f5d5191-740e-4ef5-a728-\
e63e23da6a8d"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "So", " ", "far", " ", "we", " ", "have", " ", "seen", " ", "many", " ", 
    "functions", " ", "that", " ", "were", " ", "created", " ", "as", " ", 
    "part", " ", "of", " ", "the", " ", "language"}], ",", " ", 
   RowBox[{
    RowBox[{"built", "-", 
     RowBox[{"ins", " ", "so", " ", "they", " ", "call", " ", 
      RowBox[{"them", ".", " ", "How"}], " ", "could", " ", "we", " ", "make",
       " ", "our", " ", 
      RowBox[{"own", "?", " ", "In"}], " ", "this", " ", "language", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "f", 
      RowBox[{"(", "x", ")"}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "is", " ", "written", " ", 
     RowBox[{"as", ":"}]}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.712849830483892*^9, 
  3.712849908124058*^9}},ExpressionUUID->"919aabc6-9a20-43dc-9e28-\
2155a7191e51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7130592816308947`*^9, 
  3.7130592893402*^9}},ExpressionUUID->"b76e1163-1bcf-49ec-b1e7-0aa4c6f06236"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", "^", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7128499109782963`*^9, 
  3.712849917267716*^9}},ExpressionUUID->"6d69b8f0-5697-4733-b4ea-\
f238a7ca058f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.7128499853843412`*^9, 
  3.712849986267316*^9}},ExpressionUUID->"f996a31b-2d60-48d6-bc94-\
69be1bf7a408"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.712849986803288*^9, 3.712849989450671*^9}, 
   3.7130527372050877`*^9, 
   3.713059292296245*^9},ExpressionUUID->"39f8a2b7-25c9-4f99-bcab-\
4f5fa80b258a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Don", "'"}], "t", " ", "forget", " ", "the", " ", "underscore", 
   " ", "when", " ", "declaring", " ", "what", " ", "arguments", " ", "the", 
   " ", "function", " ", "will", " ", 
   RowBox[{
   "take", ".", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "Halfway"}], " ", "through", " ", "the", " ", "program", " ", "if", " ", 
   "you", " ", "are", " ", "going", " ", "to", " ", "change", " ", "the", " ",
    "function", " ", "then", " ", "define", " ", "the", " ", "function", " ", 
   "without", " ", "the", " ", "semi", " ", "colon"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7128499449219923`*^9, 3.7128499672504883`*^9}, {
  3.7128500041783*^9, 3.7128500082254467`*^9}, {3.71285018461213*^9, 
  3.712850189701709*^9}, {3.7128502667184877`*^9, 
  3.712850307076188*^9}},ExpressionUUID->"80157199-0863-4ed0-8c80-\
f4a79dba0289"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"x", "^", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.712849972378941*^9},ExpressionUUID->"868bbeae-1ead-47b4-851f-\
68f401e6ef43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.712849979115725*^9, 
  3.712849981883731*^9}},ExpressionUUID->"34d9330e-cc21-49f0-a4e2-\
f69c1cd65775"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.712849982466873*^9, 3.712849992945725*^9}, 
   3.7130527373055973`*^9, 
   3.7130592952266817`*^9},ExpressionUUID->"f9a28077-c7d6-4d33-8e2d-\
007b71260acb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Please", " ", "also", " ", "try", " ", "to", " ", "use", " ", "the", " ", 
    "colon", " ", "when", " ", "we", " ", "define", " ", "functions", " ", 
    "based", " ", "on", " ", "other", " ", "functions", " ", "we", " ", 
    "will", " ", "not", " ", "use", " ", "the"}], " ", ":=", " ", "."}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7128500104689503`*^9, 3.712850016625506*^9}, {
  3.7128501057485247`*^9, 3.7128501738106613`*^9}, {3.712852643238904*^9, 
  3.7128526659748898`*^9}},ExpressionUUID->"2fdb8205-2dd2-45ee-9b7d-\
08b9e3298a90"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Here", " ", "we", " ", "define", " ", "a", " ", "function", " ", "g", " ",
     "of", " ", "several", " ", "variables"}], ",", " ", 
   RowBox[{
   "and", " ", "then", " ", "we", " ", "define", " ", "a", " ", "function", 
    " ", "h", " ", "in", " ", "terms", " ", "of", " ", 
    RowBox[{"g", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712850357077641*^9, 
  3.7128503862660093`*^9}},ExpressionUUID->"74dfcb32-d0fe-434c-a348-\
f6564120a762"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"x", "^", "2"}], " ", "+", " ", 
    RowBox[{"2", "*", "x", "*", "y"}], " ", "+", " ", 
    RowBox[{"y", "^", "2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.712850242524729*^9, 3.712850260404912*^9}, {
  3.712850314332862*^9, 
  3.712850333539462*^9}},ExpressionUUID->"86e2ad3a-3498-4e54-b5d5-\
3b8765cbf1a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.712850336615674*^9, 
  3.712850347642922*^9}},ExpressionUUID->"35a3f7a0-2cfd-4955-b6ee-\
7edec9e319e2"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Use", " ", "Plot", " ", "and", " ", "Plot3D", " ", "respectively", " ", 
   "for", " ", "functions", " ", "of", " ", "one", " ", "or", " ", "two", " ", 
   RowBox[{"variables", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.712850483446515*^9, 3.712850514042231*^9}, 
   3.712850557873583*^9},ExpressionUUID->"0cdd7df2-100f-4c8d-8412-\
bb6a8672bc7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.712850390998519*^9, 
  3.712850439280439*^9}},ExpressionUUID->"2d2162f6-eb88-4624-8866-\
e8441af4bbc6"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx13Xu8nlVxL/DADhAgGwIECBGSAAEDhRBDRAib7IcAJoFwEaziBUREvJyC
tloRL5hSq7TVFigHb4jR0lRRES9NUbbsLaJSPAcRU65KQSQCggIRipTIse87
33m7Rg//vJ/9y7DWrN9aa2bWbZ7dT3/Lia/fdNKkSddvNWnS0O9+X3jltFue
e26HCb/Tr9zngueeO7mbWL7NnIvnbpf4cV+d9Y+n/N0fd5fevPO9yy+emvjc
uQ/M3OrUE7svbL3DqrPu3jzxA37zm3u2vOe47vpeOZskfsK5/+fwy85f0X2p
J//UOPzKGw8/9fufO7L7Wg9fn/iSn79i0UdO6rpJvf/WjcF37ul5cLe6Lz8K
37unz8Lun/rlJ35ir959um/29engXa/8Od1n+/onPq9Xzvbdxf32FvlJ3XV9
fgp+r/oSnxT/+Ruvxwaf/vaLTzzDFwSfeIbjE89wfOIZjk88w2cEn3iGPz/4
xDP8pOATz3B84hm+b/CJ51Z+UvLc4veO4hle+Pw9eTzjD5/k4Pj0t1984hn+
+eATz3B84hmOTzzD5wWfeIa/NPjEM3xp8Iln+H7BJ57hy4NPPGe7gh88w/t6
3DuCZ/icMp6Ttygfz3jCJ57h+PT/w/Hpb7+jwSee4TODTzzD8Yln+MuCTzzD
jwg+8QyfH3ziGY5PPMNPC37wDDc+8QyfU8YzfL+Wz8T3CH3wjA984hluvuMZ
jk/lwncJPv3td5/gE89wfOIZjk88w/GJZ/gx0V48w08OfvAM75d7ywie4fPK
eM56i33O9rZ8Jn5w6I9n7cYnnuHmO57h5jue4can+uAvDz797RefeIbjE8/w
o6O9eIbjE89w4xPP8LllPMMPKPYZPjP0wTN8Uctn4kdHe/GsffjEM5x/xzOc
P8Iz3PjEMxyf9IDvH/r72y8+8QzHJ57hfbnVY3iG71HGM3x+sc/wmSXeyDgo
9Mcz/MiWz8R3D37a+GPdGD5bP7puDJ+tP1g3xh+1dm3dGD7b+bluzPhsx9m6
MXy2fK0bw6e/2987D8EzfHYZz1lvsc/wXUq8AccnnuFHRXvxDN+t5TPx7YJP
PNNX/IlnuHgJz/DDQx88w/GJZzj7iWf4K4IfPLf8rU5+4bPLePa7f7HP8F1K
vJFxd4mf4fjEMxyfeIZPbflM/NCwD3iml3gez3DxJ57h4iU8w1dEe/EMf3Xw
g+d23E2ahGf4HmU8w+cX+wyfUeKNXK+U+BmOTzzDZwefeIYPB594hh/c8pn4
mvB3eFb/aOiDZ7h4Hs9w8RKe4eIlPLfz9ZYRPMPnlPEMn1/sM3yXEm/A+SPt
hB9V1oN+ZwWfeIZvE3ziGY5PPMOvaPlMfGXEb3hWDz7xDD8y2otnuHgez62d
+936PniGzyvjGb6g2Gf4zBJv5Pq4xM/wF5f1IByf2g/Hp7/9HhJ84hmOTzzD
l7d8Jv5HsR7Bs/LwiWc4PvHc+od7R/AMn1PGM3y/Yp/hM0u8ATc+8Qw/qqwH
4fjEM9x8xzPc+MQLHJ/+9rsi+MQzfF7LZ+J7xPoaz/4/63E8t3510iQ8w+eU
8QxfUOwzfEaJN+D4xDP8yLIehPNHeIbjE89wfOIZ/o/BJ57h+MQXHJ/+Th5a
PhNfGftFZb8u+Sz7dcl/2a9LPst+XdS7fd2v66yPyn5dd3RZD8LFnxlvBb7d
H96v6xYHn2W/ruOPyn5d2s+yX5fzvezX5fgs+3WVz/y1/7mw9/dQ965zt316
+cXb537gbmftuODutVsmzt9tsWDmhWvP2jZx/i7+Tlx/XdjT89nRrfv/X+6P
qRfOXqkXzl6pF85eqbfKf6PHw+Oju/fLy30k+sDVSx+4cUUfuHbRBz6n8AA/
mF/r9eNtoy/q1zNhXUZPuHUEPeHLo3x6wulDT/i8wht8YZRPT/ju1rl9Pcc/
3q8/1+P0h9OT/nDxJP3h9KQ/fG7hGX5AGW9w9vCGfr3jfvcv+sNXFP7hLy/j
BF7HLXyPwj98fhm3cHEavel1QNEfjk9/+7V+pD+8r+WqMfrDdyv8w+eXcQ6n
p3Ggnv2L/nB60h+OT+XC6elvv7ML//D9yviH09O88v/tV/SH05P+8FdGvfSH
63f6w3cr/Ge9Zfz73Tn0YY+0Y9+iP/yoKIf+8JVRL/3h9KQ/fG7hHz6/jH84
Ptlr42Kfoj/8xVEO/eHsUtqXwOlJf/i8wj98fhn/8BlFT/OMP6InnP2nJ5w+
9ITPKTzDF5RxDq+8sU/8IH3g/BR94HMKb/AFZdzCKw/st3apF35a4QF+cBlv
8Dl/uPw8vxOPwb+5yVY3TR59ec5TuHW0eAbeP9eYkfLiOLg4h/zJvfhny7RX
5OHiH/ILevo/kX4kzxMDx2OeYwYuXlLOqp7+Eymf+4iB40s55MVVtRzyyoGz
F/rN/pj4EL5r8JN2MuLcWYHjmTx+0n6GPBzP5PGD5zz/ChzP5OmPZ/JwfJKf
WN/ymfuvhTfyM6JevFV92DHj2rmheBuOH/J5PhU4nsm/OvjBc55/BY5n8vTB
M/mDA8dzG09OJM95vh04nsnjDc/ku8Iz+WllnJOvfMJXRrvYW/YAn9Y18NnB
G3nrJ3zin/ypUT7+yeMT/+QXhZ74Jz8SOP7JnxY84D/LDxz/5OcU/nNfv/BP
fmqxJ+SnF7tBfnG0C//k4fhn1603+Rd4PReD45m8dSpcf5E/rfQvebj+Sn3K
/CJ/SOD6i3y1Y+TfGbj+Ij+t9Feen5T+Ir9NsUvktyl2ifyh0S79RR6uv8hv
HrzpL7za9yMHr+drcPOCfJ5PBe5v8uaFv/07XD/6d/2iH8nD9SN5/OtH8m8P
XD+Sn1L6Mc+vSj+S367YPfLbFrtHfknx4+RHih9PfYI3/ajd+sV8g7NXuW8W
OP7bdfK6Mf2V+2khb16069V1Y/DcZwt586JdN64b0y+5/xbyf85uN+u3dWPw
3Jfz76UfyW9a+pH8tsV+kp9a7Cf5kRInkB8pcQL5LYO3jBNCL/uQ/BC8nvfl
ui/KIa/d/HXeOwp5/OtH8uZL3kcKef2iH8nrl7ynFPJvCz71I3nzBS/kNy39
mOePpR/Jb1Psqn/fpthV/z5S4hDyi0scQn6LElf7//SLuAquX8RVcPyTp5f4
Uz+S1y/6kfwpgetH8odGe/Uj+YMC14/k2TH9SJ7f0Y853ks/kp9S+pH81GJX
yW9b7Cr5xSWeIT9S4hnym5e4Xf/oF+sEeD1/hFsf5bor+h+uH8m/IvTRj+TF
//qR/OJor34kL77Vj+TfGnzqx/bccyL7Me1K6cc8Dy39SH6bYlfJTyt2lfxI
iXPIj5Q4h/yUsi5gzxYV/uGvbOO3PGd8qfEQ/Gc5oSf+8/wxcPyTXx084J+8
OB//ua9S+K/y+Cc/tdhD8tOKPSQ/UuIT8ktKfEJ+i7Iu4LdfWPjMfZV2PZLn
iRl/Bp/kzXd8kofjk3xX+Mz7tutbPslPK3aJ/JRil8iPlDiB/EiJE8hvUeJ2
8WYdb7lf1O4b5Dlg2WdI+a7wVsvBW55LFt7a/aWBHSA/rdgB8gcXv5znhsUv
k59S4uR2P2rAA7zsn+Q5XeWhyuMBvqDMx/YccDAfyS8v/gs+tbXD+Wt/rOwL
dfbHiv4TBc96hst6BH81Hja+tijxmHlZ4wH2b0rxR/zV5sUesp91XrMDU8p4
zvlS+td4UH7ZH0t+7vjkTlMunrt1t9t923zorLsH+3WvvXr4a2vPmpb4pAf7
/XvHdtPOmLtih8T1+6N3bffZtWdt1p3w3IxrnntuOMtRPpy88iuufLhxslmv
X54bPXNk+slzV0zJfR71wtkf9VZcvXDzbkGPnw2j7+nxs2nuh6gXflppL3xS
qRduv2Jtrz/uG53bG0e/GX9RqRfOv6sXPq3UC98+yrm1Nz6+O355r/8fyfWp
euHKVy98SqkXLh7zt3oOLvX6tZ5SL3xyqReufO3x/72o1Av/syjH/w+fXOr1
q3z9of5FpV44ftQLn1LqhSvfeMLfwaVeuPGjXvi0Um/iUY75oP8XlXrhylcv
fFKpF258ms/G74JSL9w8VS+8K/XCp5XyzT/2RPnwWj58RtUz7AT51DNwdmNl
H+8Cz3OHXfvlJF7tD9z5Dvm0h/Hf6X09u9f19Uy7p154tXtw5ZDXjlpvykc5
7+zz3P24z3PaQ/rAqz2EOxcjj284fWo59IHrl5n9cTX6RH9cpT70hFd/Ae/X
e8sI+bSrfXyMnuTFk/SEixv/pj+PRrftz6PxxUVP+Kpi9+D9eidGyJs3+oWe
5B8LfegJ3zzqPb9vN0YX9+1G6kNP+AXFTsL7tV49Qp6d6OOrU0/yT69vxwnc
/uFNffs47ndx0RN+TrGr8H69F46QZxfxQ8+Uj3LoCbc+ol/yVPSEn1PsMFy9
5Olb9fQ7FOXQEz4c9eq/7J+iJ/z9xW7D9Qt5/akf6ZnyUQ494PQxvvF3UNET
vqrYeTh+yBvvxjk9yRvP9ITrL/Pf+Dq46AlfVfwC3Lwmn34q7AA9Uz7KoSec
f2Efzb8FRU94V/wLnN0jz17C6Ume/aEnnP3hP9inrugJr/4Lrr/Ip9+M/+iZ
5Uc59IRXfdjvPEcOfwZXPnn+sOqT8lEOfeD6Je+/8ps93lanH8n7ig/2ceuv
9HcP93F65HujkLeeSX8d8tY76u3zf2uWk/U+3OqT9w3Wt+W366DVef6V/vqh
Po73vCf58z5u/Zj+N3D9mvIPtOXkef36lp+sN/SxPkw/Hrhxmfcnoxzr1tYv
r844ocorJ99plXZlvYFbx5r3yjdv7VvArZdbv7w644Q8RyrlWL+T1652XbY6
19vsInl2rT1XXT3Ydw57MxE4u0l+Yn1bTnuuOmhX1hvy9gX4jQtDnt3P85DA
7Q+wx1cHzq+Qv3d9W479ilvWt+1SL/37s3vdGL96VZTPH9mHUK+//fuXAud3
/bt6Wz+9buym9W271PtvgdNbeZ+N8rU/z1cD137tpqdyyd+4vi0n8w2sb9ul
XvrrV3wbD8YHXuHGR+uXVyfvKb++LSfzHKxv26Ve/WvcG4/KN3+MO7j50/rl
1TkuU359W057XjBol3rpyS6Yr6vC/rAv5qV62Zf0v1GOedvutw/KyfdHpV3t
Ond17kOmHw992N+8lxjy7G/638DZtSqvnHy/82Dbrqw32sWvpB8PnJ/LfeOH
G78z8LNRPruf8g+25eQ+8/q2XbVe/izvMT7Y+NnBu4/Wzw7igdbPpp7Fzw7K
b/24ciaui31I+sHdn9SeXKdH+eSrv6ZHe8/w1owHMk5o25vxhnuh+g9OH/0N
z/aGfPrrKJ/+Gc+sb/2+cbQgyjeO4e7TGve5Ho96yadffqiNTzLe0N7Q03xS
r/kM117zP/Gol3z1v/TMdX3x4+yK+9K5jxa49wt5Hhz4CVEv+cw3U+IN8uwS
PdlX7wjYd7h76XneH/jKqJd8vl8scQV59pme/MzuUT5/BPeeOv1i4MdHve26
et0Yv0xP8tpLT/7WeOZ34N4LaA/8uKiXfJ7f/ryNE3KfYH3rZ/lf7wv4F7h6
9R9cveTb+waDeIA8v0xPfnbXKJ8fgb80cOMVfnLUS944Um/mobCOLn6TP8Uz
fwGv72fh5hH59GsPtv69+mt68pvq5Rfade7gXV7iUS/59F8PtX48/XLxg/wj
u8GPwNkNdjn9adRLvvopeqb8+tbfseu1/PSPxa/l+8TW/g/8V7H/fvmjIj/x
haMPXHvObienn8p75lE+vdVPT3j6qZDnv+v6lL9Mf1H8C38+J3D9hCf9Dser
8vOdBvnA8QinP7zWS3/+ZU7xR3nvOnDj2DgyL+B53zvkxX/kTys8wxcUnnPd
WtrLH927Z+u/xI/8i3lunnn/Bc/8SCEvbs7zpdIv8BmlX9T72J5te/mvKcXf
ibuXB84OskP0hLNb9LTeIL+89At8bukX9T69Z9te/u7ZPVv/aL3Cb/IT7DT7
D2fX2X/rNPIrS7/AZ5V+US99tJd/fGLP1p9a56mXnH/nl9v97nVj/LL/n/zx
pV/gs0u/+P/wqb34gGunf8cD3vEtboHz19qFF/LHlH6Bzyn9ol760Fs74MYN
vulpHBu/4jo4/258Gmfkl5d+gc8p/aJe/au9xgU9zUPj9+Aon11oz2fvTTzv
14W8eUv+hNIv8DmlX9RLH+3N/e0SD7AHymdn2VfzHZ730EKeHcx7GaVf4PNK
v6h3WmlvxgMlfsh7X4HzW/wVPuHiDXzyK+TnlH7J8+jSL+plz7X3/xdvtPe1
ButT/pyeuS5176v1y4Nz6tIv8DmlX/K9YWlvXS8nb86vC2+5jv7D69lOfFLW
7xMF/704hN65bi3xRr7bKv493++U9SC/Y5ybt+x89Rfs6jPFPrNj1R6yG88W
+5P7VCWeb+9bDuZXxr1lPGdcWs4LMm9i8Eku9+FDXrm5Hx44PehFH3prh/Zq
p3ZrL17wRB6PeMUn3vWDcvSTflOOfs39tNDTOKjz1LjJ/aXAjbOMtwP/5SXb
3Pbc+wZ5aKe87JG/nX7Did3xwaNx+8sPbnh21r4nJZ73Ezd/+eLv7ntCd/26
6Tc899yUlP9fW9/wH2suGODkl/71N1/9wPuPif4bSvklh7xu2kkLViZO/r/m
bHHLgTsti37dmPmBp53zzkeO/fIAJz9n3d/cfM6WR3QHhZ3PPMa3fO+kJZcM
cPKnHXXR1ad/c0nEf/en/KN//ZkPLf/KaOL53naXv7hr4o/ky7068xLvGHlO
DuzL5/rmp1/78I3LFx6Y8srZq8f/wpSHzz9wZff9h/btFsX4UM7UR7+/5JkT
9kuc/Lf+du05J39qj+64Pg8pP/meM3Y55Dt7Jk7+4xfcsd/5L985yhnKdVU/
v+guiZM/Me5/fqvfjym/fs/ujx+YPhzlDyfev1f/G+Mq8f77yjtzvBmn2w+t
2+f7Hzs+xxV82Z07f+6cO4/O8QP/+U3/+6u7vPvFOU7gG24/dsWXz1ua4wG+
btKqde+58bDsd3ifhxdl/8IPWvZPn/izK1+Q/QV/SeS90V/wvzhkym3nnLt7
9kvm0X3DB384+Us7Jv/wm9e95bd3HbRF8gzfJ85n8WN+H7PPnz255fyjkx/4
j94+9yPP/cdRyQ/8u3dPu+HhDYcnP/AVY2c/femPRpIf+E/+84D3HfGXByU/
8GVvfv2udz+1IPmBb/f8WauvffW85AG+5qiD3vHBzacnD/BjF+xw7S6/mJw8
pP9acPaTv/70r7K9+V5t1lff9cCRR2V74R/7jx8tmfumw7O98LFzTtn1y/cc
mu2Fz+7x/8Jsb+ab/fBenzziiAXZXni/X56f7YLf1Jtfm2a74HfsvP2//PsH
H0792e8333/p10+5p0v9M59qb14vTv3z/elt9+z53bsWpf7wW077/qEnzz4g
9Yd/6PxvvfqZaXunnvm+5Ll/efvasx4YpSf8c7FfZLxl3tp2vCX+rhjP2sVf
feaXi8944NeHZLvgn+71+6JsF/yxNcccts81+2e74Ct642Fu6g9/c0/PC1N/
OL9s/MA/f/PJ80967MlsV5sfdcu0S/Brw05qL3xe2Fvt5bd/FnZbe+HTwg5r
L3zzsLfaC/cuSXvhC8Ieai98NOyn9sIn9eqdmnYD7h4++wzf+JP/af+HE98s
9McD/J5oLx7ENQuCHzzAvx184iHPz8O/4AHuvRUeMm7q+ZGNyQN8vDf+t027
Ad+rp8/M5AE+GuMKD/D7YxziId95x7jFA/yyGOd4yH3vmBd4gLPzeIDfGnYe
D/ADYt7hAb6kZ2+npZ1JvGe3d00e4OeHHcBDvmMOu4EH+CvDzuABPi/sEh7g
bwg7hofMbxl2Hg/wY8LO4wE+Pey89sL/uBd3zcr25rvqsMPaCz8x7Lb2wmeE
ndfezLscfkF74ZeEH9Fe+LXhd7TX+uA7Yf+1F/5/w/6LE+De72gvfIvwm9oL
Pzz8rPbCbwu/rL3wpeHHtTfzo4ff1174zREnaG/m7Yy4Qnutky4KP6K98Ccf
/J/ny4N3Yd47iBPg58Z8wU+bZ3IQR8EXRNyFH/glEafhB35zxHX4gf8q4kD8
wO+PuBE/8KURZ+IHvk3Epfixvnz4gb6fwg98q/BTxj/8i+Gn8JZ5MsMeikPg
/BQ+4XuHHcYnfHZZR8BfEusUfMJfGesdfMJ3jXUTPuH/GesvfMKXxDoOn/B3
xnoQn/AtYl2JT+v3N4cfLOvNeHf2m9GyruzujXVHWT92x8b6pawTu03DL5f1
YGc9VdZ93X1lvdbmh/y99V33cKwTy3qtOzbWm2Vd1m0b69ay/uoOi/VvWWd1
1tFlndU9GutxfPp9tKzTY19r4sienRmsx4/Zf9uldx+0/cTDPf94bPJpX+2h
ez95+cPfXpF8fvY721619tHtJz7Q8zsvTj5vj/2tid64XZp8bnbqtJkXX7HD
xP69/JxLks9FsR7cofBJ/zUv/eQnll88WOfS/z09u7RX8kn//njYLfk8N/SX
v1G5T5w5Y+XcFcMTZx34+GaPLTwh+fG7dW88rByspz6yy9y7124zcdddH7j5
9PcuT362lJ+z5++OTH4OPGP4t8u3nzax8tG3Tp798cOTn9Njv/CnPT0PS34u
fHb4zXP/bdrEmSOHv2qfd74o+RmPdfeeZV4/Hvq/esMH1625d4/k5zj3lGP8
5zor9J/c87/bJg9TrtjhkeUXbzGxX8+eDNaVr4/9sZt6/nfZYJ0Vv/15dETy
MDv2d+887o8ueuCSLnl4z2Y7Xbb2rK0mPnLcB74/ccyhycNdsf/69Z49fGHy
8KKDdn77WXdvPTF91s1Hn7/zC7K9W4Seffkds71nhJ4TPf+7VbZrVm+cbDJx
TU9+sH58d+zvfSvGp/b098GGJr7fi5dGiz0Zmjiux+ch2a6Ll243cvfayRNT
X/vWTd77xkXZrsdi/3vzHs8HpP67hT6reuN2s9T/XaHP3mW9/4Zeu54eP6/n
Nw9P/feIfcj7Y/zQ/+4en/81PvmK7a855+svKvshz46f2hsnC1N/vw/0ytk/
9Twz6v1uxDP0nBP1viLuk9Ozvy/60Ph/rf/a2X+21aGp58diX/Sa6F96Tu3N
l1+NX/1Xn/rnW05+Qdnfe3z8+l69+6Y+u0f5/e+DXD3a7qs8Mn5s6NPuUz0+
PtLDJ6Xf6ffLk8FDrvsmbunFP2vHz/7N5VfMf/6i1H8s9m8nRz/S/zu98n84
vnrrn03/7jPPT/2vivO3w0q8940of9PeOFmX+n8lyt8z+t08/W6U/55mnAx1
yt8z7Bj7f0Ocs7GH2ntQzKfPhf3U3gWhF1x7r4196fdFOdr7dz2efzz6s7Cr
2rsmzh/3Dn201y9/3cYb942OxzzVXuWvbeb1UKf8xcEnP/gvfX5GPxH84+Hj
cS46KfoLD5/u8z+qf9Mv9sfD6CkxHvCwMPS1/4mH/jngE6NTwn6mn4pyfntA
H9dev9UOK+e6iOva9cvjo9fF+Nfeyf35MvrFmC/ae2Gc866N+aW9s/rzZfSZ
mI/a29//n9R9I3jW3ilxvvDt6BftOj3k72n86YbRrUL+yFhfa5ffe8OetHH4
s6OvCvujXbf37dXopLBX2rVbnAvfG/ZNu/p2/ulR9lC7Vr5t++kXz928Y1e1
65dxPrJ/WV+TvzHWldoVdrvbNMZPri/6dr7bKuy8dvldGX5Bu27r+5Hue+FH
tOvcOEe+LvyOdoVf6L4efkq7Dur7we6msMPadWec73jHLU64MtZxI8X+hD/t
tgt/qr3hf7t/jfGjveGvu0vDX2vnrDjPvSP8u/b63STiAe0Nvxw8L8v2hh/v
xBvaG/FP93DYee11bvWZaG+Ju7olYefFDxEXdeIi/FwS67jjynpTvWdE3IWf
iNO6+2Ic4ifiuu6YiOvwMyX0OSLiQLx8vh93dXdE3Igfv1tFnIkf+otL8bNF
P37uXhB+BD/O7/aNcc5eXdmPz7sPxLzA27vjnFq+ZXFLnMN354X9x2fuE4S/
KHFp5NUfxKX0nB9xPj7pKe7C5+dCzwtiHYFP5+kPx7oDnxHnd9YpeHReb12j
nHeXvP25TxLrl78IfuArYx0hn7PyrWsWNv56uJtV7hPm+i7ifzzTZ7jk81ev
9cL1Md/hX4q4fXlT/nBnHfGmmBfwE2Nc7Lxyp8vOPHP9Ifi/J+Lt/Zr4YePo
qojP5dmm554lzz993hvyu8U8hX8nxt3Yc//93w9G6CPO/6ui5xvL/UDjbOuI
8+W3L/YtvrM5sG8v6dvzifa7eFdHfsjB9wfx8OuIz1c0/btx9NKI591DxsMh
MW/6fN52iPb+Q8g/cVp/PsLvjnXEnNJf1gW7lvFznnuJJV49NtrFr8F3j3XE
86Jd5mn/HsqkOIfdLfGzI56v/EwEP88v8dsbopxjCv9fjfOgowtvJ8c64vl9
uRG8XR7rjrll/Lwk5A+P+BD+01i/HFDm3dS49/SNJm4c7ubFemSXYsf8it/8
/U+xXti/8GZdsFXEdfAXxLqjtvf8fvyW7xS098ZYd8wv8/o9If9MxIfwGbEO
or/12Ef68fC4OC3XabEuOKC09/qI/78T/MB/FeuLqv/aKH9+me83x/qi/T7m
0MQHIg7fv+j5zYjDz4vxCX9LxPPqpc9nIj7fL8Y//KpyT9I8PTXk9y/6Xx71
0pO/e/qAfpy8f9F/bcTV9KHnlIirvxf2Fv6nEZ+/KvSh58URb58Vdgy+X+j7
o57d+9KIeTQccfj+ZR59Os5TWv43jP5FlC+PPf8+I+LhPyrtvTXiZ35Kez8U
8bbvI2jXnSF/bNht+IuD18tCf+2aFfW+sLR3k3J/0nw5NdYL80t7PxfttR7H
z6sjnp9R7NK1cf6yS9mv2yXi5H0LP++IuHpZlI+fH0Ucjgf8LIjxHvb863i4
PeS3ifgK/uGI/+eV8fAu97LLeP5FrCPYMfzsGvpb18NXxHqktndyxMlHlXZd
F/Zjjx5ft4xo1/PK9xrynkPIHx32Fv7OiPMPKPNU3H5dsSe3xXqhzrvPRnw7
r/C8WfleQ94zCfnnwh7CXxBx9YxS/tER7x1Uxvm55bsMJU7O79SzGxEP5/cX
4Pmdpub8cfC9p7klboTfGOeA/BH830v8lt89i3Mffpz8qb3x9rWMB8i7L537
nN4zhv5w91VXlHNh+LLmHHnwPanR4qfgfxvnfXD3kR7uteumQZwW8pcFTn/y
R8V7H/Lw86L8si6bqOuyQ2MfuM23f/XYVREHyjfe7hNuObEw7gOQb78LMOCN
/A/LvQL4Q3EPAQ/5/fHor4zHQv4r0b94IP/V9l7QIE9wjB92QLz3/diXgIv3
jig8uPc9s8njfX/eX3pDjOfcBwj5HePeiHLI71viZPKvaO6fDOe7mK7Eb8p5
/IDmHlfKT456lUP+kLgnQF4ca58fLo6VN5Vd2jriw2WxHwUXH+INP+71fyru
pZB33+m4mEf4If/KJp/n/Sl/TMwvPGde/BgPyiF/VPH75BfP/Z/zffD9r4Ul
fobfEuMz9z8DH4vxnOvHqHcs7p/gk/zeMV+Ug4+jm33L4e6KiJ/xz26/K+Jb
907hu0Z8e0Tpr/xeWNyTIe/+1aLQB8/kfxT6K4f8v0d723Xf4+MvKPcQyG8I
3vQX+UfCjukX+F5xX459gJ/d3K8bfO9sUbGr8MNinLT79r/DY7yR/1TE5z+O
dRz8JxH/458fFLcvLbj3QKOlv+DuZ+Z9g8CPj/lI3n2wnWL+5j2EkJ8V93mU
Q/6UsA95PyHkz4h4Mu8nBH7baX27mucFgV8V9jPvJwT+r809zMH32mYVfw3/
4+LfrWvkGRZvWF8sLbj3Vq+PcvJ8LfB9yvoo85mEnnnfOPA7yrojv1MRdiPv
IYf8kvA7yiHvfQqe2+/HDXiGPxL2mXz7ve/B+ov8oeW+LvxjMX7g1l/4FJ+/
P9Y1hxc836PF+Mdzfp8u5gue4UeVeBLunhLcvbXHYl7jk/zfBZ77AyG/Wcx3
/JDfqdgT8m+JevO8L+S/GfZKOeQXFftPfnrYQ/hOzfprTsa3p8a6qSu492sL
wn7iGX5L2Ek8wx8Ne9iu6zfp1sd8zPsJIe+eLd7If7HcfyN/ZPGb5K+JeZH7
8CF/Ufjldp95k27Psk81I9ZTi0pctCbOQSpv3s1NDzvWnvcNdd4paBf8sLJu
yvwZMY+0K/PhRPnKIX9YzCN6Zv75Er85H7km4h/4gXGOs6i0yzu7b0e/aBf8
kOY92uC7fvPLOhF+e4yHPBfwnZkYP3n/Ic5TxmOc05O8e7nK4feOLvtyp8U5
S22Xd3lfiXmqXfA95GGI8Qx/a8xH7YUfVOwG3D1b+sD5ZfJxLtA9EH653IPK
e570d35xUdht+sN/EfOF/pnvPOZFuX/V7VX8C/yU8Efiuvxt74N1cf8qv3dc
3uN0D33gzj/54DOJ5zusgmfc/onG/g9nnMmO8b/irr8v85odmFX2Y/M7VyU+
Md52LHGj+4QXlndM7mUtLvucH431pvyT/Jd+OK7ct3ceIX+mctx3OqDsA1uf
+m4de26ff1Gp170j90NyHRrrvtOacoZyXLykvz860safg++1sZP3x756q/+G
Uesj+bTV+2PysU8IPyvWX1OKPu4XHV54cF7geyX0eV6sC95e+FkT64spRR/3
hb5e4sAFsT+/bSn/ZxEnb1rKfyL2w6v8n8Z+NT3be7mPh58d7DvZv5XfNcdN
6HViuadqX3RRKf+S8HeHln0z+5/6nd14pOQVV/5FsT+5eYwfuH3FE8q5uf4x
ftr7PIPvpKQdi31C84U+t5d84+p1f+B1MX7g/Nekok/Mo+6wwsOFMd/lR00/
HvuEqwo//EjVx3n9dcXe/n2c+08v5TuPruXfXvKWs3t3lrzl7OTmsQ/52zgf
hNuHXNXy3D3WvDeaNAke+58TJ5bz1ovjvuiCoo99wlXNPMr7Bmk3lO/e6fwo
P/1CnEffG3l01WtfzviEu5/5j43dGO6cO5dx1bnneUPZH3MePb3YW+e/nyv1
Ov+dVNrrnHdKsbf2l5YXPs8MXD5nfurzYcfYAbjzvmpXl4S/ch4E58de0Svv
5pG87xq/J4Xd8PfXYx9gcdHnC+FPl8V8gdsH+PNi/5dFeRf05FaNwT8W5S8I
HpTT//3p2E96+t9xSLvvetv4qeU86PQ4p1tc1kcfj3t308MuwS+L9TU94XuG
Xo/99r/rfd8Y/KKwz8v+oJ5Xj304xrO/revZf3HC1DiP8/07+p8f69P3l3bp
t5eU/totytk39IH/Z6x/jUP6fDbW1yOlv5xLytdNz1fF+m5V0d99vCOiXnpa
J8oHTh/35b4R8wv+wzgHHC7+yDprRanXOmtS4ce527Tij6xfTinnjEOBTy1+
5JiYr3vH/Qr4sYGf1h9H7NXEo807xbST3i90lxY7Jr/IrfFOh32Qt+MtxS7l
u/v1rbzzjofiXIPdkEfEepm8vBP/OvW/9V8zQt55wU9CH/ZN3pQ3/bwtX56K
PR/8n/pszHwwH/15W4799v64XZPxobwWR0X5xre8Fq8pcZf94QfXt/WSvzna
y57Ig7Ew1jvGuTwYHyn7KvYJfxR6Gp+ZHzHaZbzJa/S2YjfsX92zvpW3r+K9
s3GY32Eo+2n5faG/2nJi7VnXjpC3L3Fs6GO+yAv0plK+fB0Hhrx5IT/PT9a3
5dgH0F9w+T30V973i7jLdxaUb929Z6mX/F2nNedWea/yLeU8S36auTPa8z7z
5TPNPu1Q5/xuj+KvnXN9qYwr51w/KPG8deUer23Ld0/pqBLP71Dykbbnoc+N
H1Nw8+XEwNX7eNz/mRR+ynh+OnB5xuDvjvOOnYq8PFJ/Ut5xw1fFuILfGvd2
di96us+zpPgL+bQOj/0c9cKfinEFnxn+d3bRfyz8b/UL8oo9Gvst6oVvG+OQ
vPlo3964dd9jXvEv1vvHl3HrXsT1JT63D7D3a9vy3XN2nzDvCZe8mvDXyedX
cPPR+ku97t8+08btE78MXF4v+JVxn2Hb17by8ly9rLxnhD+z5X+349IR+PNK
/szcxwv87FKv+647FT/lfdzxzTgf5L18WTlP9I7M+hHOf72kzdPSPRnyXatP
533ZwmYfY/B9olPKvgE/eFDZN+DvTmzyPOR98oljS7uUMz3k6c+fvqy5n7Ax
z7VPjXblvffwj98LeeV4t7W23OtQzgHNfB/kh9y15KlgBxaGvPk1FvH8yWW+
e8e0b4n/Mx9jyJuPi6f23xm9ouA3xH7Iv5X5zv+yV+274/tGV0Q5cH75hKLn
R8P/zi649zvLSjz5q3gvs1O5Z8X/ev9Lz/Uhv3tp17lxT8++GT359+Gyz8CP
Ly37DPz10ugv5WwZ+GGFB+VMbfKSbcw8gatj/LAn/Ptro11w/t29GuWEf+xu
KOeDynlxlEN/dsz4Vz47M1rGZ37ftfhl+7cXhT7KZ4dPKXbbfuw7yr0gduPt
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
jl5rmvX4hsTf09jPwXdu2T3lwj8f8yj9VrTPu1r1wq+KcaVeOPusXji72trn
4W5mzOvWPg+n3SvxUnd86FPipbBvU2tc1OGZ/mnfYr6U+Kczr+mffi/sCf3h
7FWJlzp2T3vg4kD1al8/Hhjk+dK+bZvxuSFxPJhX7MdXevzvkuMv8zFGOW3+
543jR5Tv/8K70Cfz6AWvK4ue9FoauPmb716LPPyLoWc7L4a6bcr3+3K8lO/3
5bovyi/9NXF1lF/6K+LGAZ+pb/M93I2JV/31V+UZzm7r78zXW/orz2tCPtd7
gbNj+iXzCbT2f3CfMNoF1494yHOawNWbeeICP6F897m9TzvIg6kdXy3l5zvx
wpt/P7XZ/9+Y68FpZf7CTyrrDuV9OerV/rz3WPoXXsdnvr+Ifs/7qYGbj/TI
dxyNH9yQ43mTtt9z/OO/jdM2ji4r38/N+43ePTXzayjjw/b7NUPdsjKu4FPK
d8Dh25XvUeb+YZmPcOu+jIdiPI4GP217h7vl0b9tHvX7x5Wvndp3VeBlndvV
+duu7wZxiH47qeTN1j8nFH+h/peWvPfacdeW/fuW5Oh1Zu9+y7fzO0T64aTS
j9prnOf5ULR3s95+xNdG6I2n3140dMHcFevyuyTwo+p32OP/21jk6UvP1g4P
x772WH6fgl7LQs/2O/L3j9Mz143RviNLXm78/WXLZ+K/2bJ/76X4wYnlzTpx
+Pf6UXsyHi/jCn5EyX+OjxNLfvLMQ1LK148vLv2lvfqRHD5eU3DlLS154Ol1
UrF78FeWcat9RxSe4UeX8vF3UhnPue9RvkdA/yNLe/GEh/8HGtlC/w==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxNnHccV+P7/8/7nPeZGSmRyMrKFhkhpC0rUqSSKFkpq2Q0ZCQlZVUIUVZG
Qvb+ZO+ZGZKRVfb6vp697t/j8fvjPO7r3Oc697nPOfd93dd4XfdGRw/pfnIc
RdF/eRQlKj/NomgNlYfWo+g31V0i+uwiimo6WtSiaLrKeWkUrSV6I5W/i2dT
lROrKHpBDZ2h41Fd+1X143XvWeJfqDYfV9188Q3X+WTVX6DyTD1jH9Gf6MF/
iP8y0eer/hLVnyD6Nzqk841179UqJ6j+RFX9rvqLdH6V6K667y8d14i+RHXb
qR/Hie/qMoqu130NdJyqazNVd7HKVVXeoLpVdJym8/5q6ygd1+r8evVvisrL
VY4ozL9v7m+zg+ouV9uj1O7p4j9P5VzaEk9zlX+K52rRF+u+C3VcL/oKlf+q
flvdO1n3bq97ztb3yVSeoXv2Fs/HautV8azQ+TniOU1lW9V/qPrXVN9BdFva
VBsR/Vb5OX3S6UGq71u4z/erPFv37q/6L3TvZeIbo/oxKpuI/yDVf6nnXiCe
fqJ/FM840X1F/yB6kvhS8TdU+aD6eIyO8TofK54jxbNMPI/oP16kuovFMy51
HyqVb/EPxHeu+j9F5Zmqj1S+qPpdRO6gvr0gemfR24l+RfRPuj5S/MtEZ2qz
p+pPV91e4vlIzzpefd1P5WCVG+nopf58I563xf+P+M7Tvd+LznVvL9X3KPy+
81UeK/72uvcYlYfzH1XfVfSXub/hwao7SW3soNO3xPdd7nc/VPXri6+7nvW1
6HZ63+mqn6Z3vDL1s9ZUeanuPUn3/qF7fxLf0eLfQvf9zLNFDxV9svrXQLxf
qO0PVb+z6s9m7KhszPjR/Tvr2ikqf1L9SeLPxf+Z6j4W/y7i20H1a4l37cRz
arDKJjqaMnZj15+r+5+suX6U6CGqX1P0XNXtoraGqq6z3uP2mtti3q6hspGO
O0QP0XNv0vvM17NOUV0zHRuo/o2a6Ym6/xrdv67olurf0Sob6lhD18/Rs9YX
fal41kvMMyFyyfkr4hkpnqaBh3dfJ7EsmKY2X6UvKkervrnqp0fmp83XdO2s
2O3Q5inq5+3q5wPq50Rdq+s4VvWf61vtLr7Wqh8qnjvE86Do41Q/VtfPVPmq
jg3E00L1v+ibjKEvqjte/P+K/x3VnSA60vu9J/o40Wcxt8X/CmNC9w4UfbTo
aXruAYzJ3HOnn+quSD2GG6l8XO9zDfJK9FS1MZwhp/Jn8a+m+v7iXy56tOpP
LfwP1wr/8QWdr6tnbaD2n8n8D29VO9+p/kjVb6r6QerbqWrvWtH3qP5v8Tym
cpjq56n+IdUv1nkb8Y8WPSv1c9dRebOO1UWvq3KheJqJp794OmUeC7NV31/t
vK92Fqp+h9zydnBhOXyLioOZuzrOFn2C6r7X0U/tnFR6HhR6l0N17QiVh/Pv
1O4otTtU5TCVT6rtx3V9R5VP63hSdGuVo8S7RDxb6nhffF8yBlU+oWuPiaeV
yvPFM1bHN7r2lM6fUP1OKo/I3bdcfRmHjBXP+So/VH8u0rFU/Kmu7cY/0ftd
qOsrVLedjitV/zzzW/XvqNxGdXurfFfHtqLbqbxB1xrqGy1CJuj4Wc96WWWv
mmnkWg895widL488dpDbi/Wc2ao/TMeRrC9q53e19z/de3/mcfW3zo/PPD7/
Ff2p7l1F9z6tezuJ7xfRr6nsquNX0dfpXe8T/+Hi31Hl3+LfXfXH6t4d9c5j
VJ+rzJgXqrtCz7xfPHeJZzPmj467RW+uckfxHK5+HS3+l3X+iur3UfmSjpdF
763yU9oVT0eVv6lspeN/9EnXXlfZXuWrOl5jraQNzkW3Y21X+4PEP0jtHyb6
YNWvpf7PVb8PQm6rzRPEt53q39D7nih6e9Fviv5M134SzyKV83Tvb6q/Hn1E
18br+EXXIr3rzirfFvmO7n1f5X4ql6aeF5+rPDd3P79mXdO1e0RvoXKx7p2o
42fxxSp3UfmOrr2rax+o7Eap40PRB1Lq+Jjxr/IjHZ+I7k4d30j0ISoXcY11
WeVEZJ6Of9Tut2p/io7/RA/M/R0PRbbrmKr6PVQ20jFZ9CWl5zfr5ge6fz/x
fkefmYKMEZWH65imb/IB63tp3Wy26q5S2YXn8X91TNG/n6+2HhbPs7p2iK5t
o3JXHT/o+osqB/Av1O42Ku/JLBP+0Lc6UOX+4l/GHCvch19V30BtXcy8UnmX
+A8RvZ3KEt2C76jyXpV9dYzQ/efVrXt8hYwTfaDoJaxVdY+HpaLPEX0A+ono
09Ep0UfRI0T/wW9WuX9hGXKfysW5v8N+vJPu6a5jJOuR+P5RfUb/VXem6v7U
+bmp+QvmV26ezrr33dzP2lP0+XpeH9Hf677bYsvhvrr/Gcatyq0Krw/tkXsq
DxbfxuI5Cz1Y5fCa+7pv4Wd+oLbfE72jrl3O+q5v1EJ0nHnN2Re5ynsllp8n
6v7L9L9u07X70Q9r7tshoa/0+RO1OUk8d4pngXhG1VzfS8edsdeI41W3q9o8
QHRH5JN4W7NO6VmHxh4DP+r8CbW5L31Hj1abr+v6LaKfLHzfxiqPUl/30z0t
VfbWs79Dd9JzH9e1vUVvyHqI/qDrPVQ/TbyddLTXtbY6vtJzmjGnxNdK9QeJ
52nRByLnVe6hcomur6PjUp2/xD8Uz26F+zhNz9xM95V6n0toT+c1ld11/SfV
DRDPXnr2PPXhL9bJ0jrDa7F1D9bAt3XcKr5rdc+HNcvGe8R/q+77Q3QrHeur
/iNdn1T4vizoaS+hY6Fbi/9i8a/gm6vundhtnZb5egs9+3bxHKnz5aV1sxeC
HXRm5va3Yu3T8Tq6rurGin91nb8p/oPF+5eOPlxT+aeO3SLPyz90bBl5nsGz
FbqL7u2r/3qhvsf5mdcW5uz5ql8DfVxtjhPdWPTboc+voz8EfeyN2H3CFnkz
tt71UWqZun5mufiljmdV/5jauV51v5W+90Udj9U8rvk+6HLotq+GdnYu/Zwm
mdei98P3v1TlR+jVNcu5z3XsJHovlR/HXtNHZr63dWoZw72f1NzOB4FuXdnO
uVHPWZR7rjHnWOcXhbUemrV/K+aC+LZX2Vg8d6B7ocOr7vfwbXvX/L6sB/BN
V/uT9fwl4nlQdPvM+vkC0U+K/lP0/egl4j0E3bUw3S3zN3kljJmH+f6q+178
O5XuSwPGGO+h41udr6LzPdXWbPFeq2Ox6G9K9+ezsDbxLp8G/ovCvQ/onWeI
f7q+w636BmeI7if6ItHDRR8venLu9/s9jJ8VKpejT7PGI9dFfxF5HlO/NLLc
+Jl/EbmOew7Q9e9j86+m+t1Yj0TvWvOatpQxpPovUq91G+mdG6kP49WHmepD
O11fEr7txED/KvpylV+FMdC95ueujz7BGAn1nVX+pKND6C/9aBfkQK6+Dimt
x6HPPaN7L0ZnZewV1hPRF7fW+Yepv2XzzGMmRtcofd/FiccEJefohGuxJif+
Jt1E/6CjOTJU99ypNp4IOuRF4bn7xL6fe5F/PwYZuHPlte0m3XdZ4u+G2rKm
6q9kDOfW43C8MN/HZ+7bRSo7qvw7tv53QWa5jq7YM/CfoPPX1G5ddfOxY1T/
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
4e8zL3cs5nnRZ7Dmivepmq9dnTg2dxe6OHomNqDKNXX+gI6R4lmt7nfZPPV7
Pxve/SrGkPi74JMJ8ms10eugqzHmsRPV1mDx/F54vbqJ9U3l4prHCeOjWWEf
29eZfeA3iF6/7rXrRuQVsjS3r25d8Q4PuuWHQU9E/jNWWHvniWcrle/F1glY
V1g/Z7E+qPyiZnmNXH4x9bhCDhPb7KK6U1LLRGTjGSpvxC8TeTw/Glt3R0/e
JLdc3J3/klrGEns9ILW+jC22cW45ib+rZey4G3r8/uL5nO+Drib65MixOWJ0
V9XcVovcshb/2Hs61mauSrYPKTxOb9b1qeK9suZY7926fr/ou/Cv1fyP+b/E
sIgptKzbrzYyyGT+OXFZYrXoDlegA6g8PvF8QHbdk3ocrK/y3iBfWDvQXy4Q
/yrYlqnlOGMDvAFzsDG6nc43qnlsP0ZMSfSjKocmjr8ic9F9poi/Sd36zuV8
w7r9dqcHuTex7u/zp+5ZoPvXqXmuPZx63K+Uz0EvRF99O7VPBT2vYfh3ffSt
isJr/tX6ho+hxzFn67ZHbhd9ZG5bg/q+ufW1e0VvWbeOf77oqm7dH/lfquyQ
u8/YBehcU0WvxbxMLUtZp9D3x6m+Qd0x4ck1x4XfUV+bYA9XjkNOUv0xkWOp
6Pbo+D+IPkf0qmr/68RxS+w+/O6n1+x7b1E4lvJz5jjDuao/TOdvYGup/bZq
f5PY7fSMbGMNiG1nHZQ4DgFNnBT7ETvyErV1NvqKyhMy22ZR5vnAvDiNeZE4
XsA92Bwbqv452krdL2IiF6Uew2AwwCGA1+ig9nuK77DgM/9A7W6udrLM+ARs
XmzfTWNjObBFx6eea2BLTs7sc09VDk+9lhKL+bZwPGWVED85r+Z14rzU703M
5eHYuJFLwzp8aliLiQ/gf8MPNz92bIj33yJ2LJ//tXlme/eg1HFl1lh8Pi11
DIzsj+2vfmyErMYXUDcPc2fH3HP0R/w/pTEQkcq+4usT/ADNcvcTf/u72IG6
r31l3MflOgYh+3K/E2vg5erPcWqnrcqdcs8RfGKTStvFnVWeVFhHwO+0MHeM
bpPCmKMba9ZpFmG/q7399Kwtcr/rDyqXF373dUQfltqexgfyofib67xbZVzS
zJrXref5FuhLum+R+rSV+lbyb3OP679Uf1lp30g3lU/q+vE6rtP9q+MvjI1x
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

           "]], Polygon3DBox[CompressedData["
1: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
fd+ivwF5F98t+pbj/FWQp6Z9O32bMvad7v/Ie2N/lGsHfbOhe42+kbHfHvvV
aR/lHsd41yFvif43+hZH/2cZ/3dt7m9P5Cf1r33/uJeNkLdDXhXbNud/xtjX
I2+F/nd9HvSn0Tcr8qvIIyE/hf5Z5KGcvzHyP1xzO+QzXPuRT8V+FucW9iO6
P2K/PfL93MftyE8jP4e8MOdvgnwt8ubIv+qjItfYDebvtwl9P9G3tf4+///p
7+Hagzw/7Xfomx37PbF/Dft3XG/dS9C/jvwu8kfc28XIC2D/LvZzYD838ofo
f0Q/Mu23uO8fnDvYzMs9XULfgrTfw35O7Ichr4n+G/qe5vrvYf+Hvjby49jP
oY/JeJ/T16d9Jcfarg2cvwDn/9zP2roX593qesg9voX9bdjcw/l3IC/rc2Jz
GO2PsPtb3wX9UkX8l7Wwnxt5Y3Rf9nPtn2if4/6MfA/yLPpO7n+ut8gLIg9D
PoN7HqK/6Jz390Q/KvLVyDMg3+z9Nfvdisjbcr3buN5G9B1mn/tvN/7Y2q5P
HCfTHgvd/7DfBvtbsf+Lvrbnoj+F9tjoJ0L/Ivf5STs+zIz03cR4u2lLewX0
t2N/qms98sTIa6OfnetNSN9atPevs3Y+wtjjo9+Dvq1df9Dv5t7FsSttg7Dl
0T/P9T7G/lzXFNr/cUzK/f2BvAftwdjf3ska9QNjX4W8DrpvGXNBzr+F+zkJ
eUzGmxD5fOQtmvk5OvJ13McCtL+j7ztsrub8dW3TtxD6a/pZu39BXhT5sX7W
TufWBu4f/cyl37mX85r5tVA3682s3M+Gzj/ktZ1jyDcbPxpPeQ5jbOb47fiI
L7jXG1/TfhubIYzXadaHTfV9XF+bePR99KMaf7g3deKfnI7Nppy/OLotkJ+t
M/4SvouuEcir9fOuXOTax/lnM97C6D7Qh0KeEnmY/qJxFvKn/F/52xkUI9/n
ekhzKuRVkZdxD2G8/bn2/sj/0b+SazV9u9C3HPod9c2a+PkX37FWntk9ZA59
rnZiob3QL+n6g7wd8n7G49zX5vobPONezjf672onxpzEd4tjItr/cRxqbFAl
nr2/ub9hVeLzB5FXR/4D+/Gx/ZPjYOw3rBKfP4B+NfT/ugehO5nrvuJvxf1s
w/W2oX9f9Dc2158ZmxHRr1/lfb2P81dB/1WReMs1ZkPjReTZkTdB3hJ5Df0L
2mPQPgT71ZFL5NGQD0b+wjitnTl+AOd2uMbktE+h/1Xae/ai35C+OZB/pv8E
5ILjCOwP7GW+noh8PO1RnRPIxyMfR3tEjg2RD3V9or2JMu3f6Pub8+fhfjZC
3pz+fbifWbnGmlzrCo5h+h4cK2O7Cza70V6E+VBxD8c2/sFdZebP4a4RtEfk
77NbO+/qgeivYPxv2vGd1/D9Q/69ndh4PfevKnjBcw2e8gHyv8j7cv42yD33
v072uKPoK5EHdeLjHo18DMex7ew5Fbo9OP8tzn+D8Tbk/I+dzM2zb4v8XR28
odfgJfNzzubI9xrD0Lck8g60N+d6VyC/XmXt8dm3wr6FfrJO9jT3hN3Qv+H+
2qwPe/t3bMfnFb/pc0xL+35jBHSLIgvIPcxxGfIlHFc635DHpz0Lx2TIT3CM
y5iz9pr4hWM85LuRH23HZxzdOeiez/Vvo70y17+e5/sT/TzI6yMPwn4C5Nvd
L/Vfquz/zzT4z9ZV/Imnm/1n2yr7+7MNfrVVlf3oKeQ1kctefHmfUcxpMMeE
+vsco4jJ9YKd3MBRuv/1Ev89w3EWz74y413H+be6bjDe1L3EFndznIH+ceTX
aI8kxojNtci3tONj12JQvs/IN3FUyDO5P9B+2HcKeTnkBdrB7MTHat9Brrdf
O3NqFf4+Pe+V9kFcfyj/z9COz/wj7WWb/eP6Jj5aBvlE5OuaeGy5Zv+8oYmX
lm/2yxsbfGD1Jp66q8HLVm3iuTsavHK1Jv66s8EnF+Sa07cTM71Oe3N9HmNF
9GPrH7rHtYOtjTWQ99v7N8b4jvbovawnp3OcRnvMXtabM9vx6ZZo/PErmv15
wiqxyJFF9sNFkQ9CvrTZL10vfF+O4DiS9q9l8N1ti/iD35bBLzYugqcOuEfr
a2B/eC/zQzxyf+T9mvXD98c1zLXM/eJ35F2Rd0f+rgyetEkRPOb7MnjOpkXw
3m/K4BsbFcGDvy6DZw0rgjf/Xgbf3b6IP70u69PcvJtXl8GTfyuDJ29XxP/9
owz+s0MRf2qSOviVWHYX+XPfWfTrFsEnP0e/LH/rjZv4cTH+Xgejv6zxnxZv
4qHLG39p9zrz9RLkCfSXGff9djClOWnf1s/7eB/t7fVX+nlf7kDezvklPobt
djzDLfTd2c968CTtHdFPin4R9J9xfEzfuxy/tYM5ToxuIo6hnWC6Ypaj1Jnf
rzXx+o69/P4HNHv4l+JCyKsjb2A828/79CjtHbBfn/9X09fC5kdsX0H+uh1M
ZAKuNS7H/J3kFF72XUZeqBPM9219xyJ40jKcsyryIGNa5C2L4JPTY79CJ5jI
6ujP0J/BdmXXVtcH9Et34lOu6N5fB09cvwg+NbHvBfZXcPToW5jf4wj05zf+
8O7GQ+Knjf85ke8Itpe5hxaZvxtgfzDyIb3glSPqDyEv49rG9eamvR79u3D+
jK5hnWAMa6Jfy/2xHYx3JvGjXrDOeehbmvY6PjPyqo6hb8s44xsbeA7ySr3g
4Us0z3w297tKY7vHQNYv90MxhG9pT8k1Fqd9Wic5nb153nf1H/+/eM69xD1l
CLpLnbNiavRNz9if1sklnOPvZyzNcQLtLznmoz02+uM72bPdu98W8+kEY5hM
bIXxulx3XeRByO+iX7+TGGirfvb/RY016PuK8z/Xv6R9E8dUXr+KL+N6sBL6
sTiO6yRHcgT6Cxl/Ku53yeb+3qwylj7hwnUwfLF893D38o855qX9Afrzaf/B
sVUnmNFUVWJwY3GfaVTGG4vj5E4wuh3RjYT9EZ3kNA5FdxnXn4/nO4y+ufrx
j0fqBhNc0oWhH6xKTE1s7TL0+7eCYYtlj2COo5OYdrZ+Yi5jLzHxEY1FkS9D
PsT9DLkrBkb7esacUywe+ZROaziGulMVf2n2dvrGRXeN6wvqo5BHEgszZ+O7
7voidoI8ejtjFsj9Otd6yz2F9mh1zv0M+XLa64hf6ZvT9zftv+q0z6NvkHvZ
QPxOf7Pv0Q1lzF43v7n4x5FVcg/mYMzFiB/V3fzmxmdXc/7xrp30Hee7zTFA
e5NO8KeF/Bt0M8fEL9+pg9WLgYuFl/1gv8/7ftE+Dv1zrged4MFP1MHyxJDE
khZxv+wkRjAe+r0OttI3JupnPhvripmKnU7BcT3tNTrBj//ht9+iDAYkFvRl
ndhKjFms+aQq2KIY/ALNfHqklZyQuaEred5pe3mGWZAn5Divkz1EPHIyMSva
Y3aSzxvoJ9f1bjPfxJyN7Yzxfqb9ZZW/lRjStv1gdGJ1m9L3E/qvqrTNGa6M
vEQ/WOypzd97afTnY38N68NxA5kjzpVjOsn3ze47RvvATvJpVT+5J3Ns5tqu
Fo/sZI0wP3wO8iu05+4kP+V8N/cphiKWYo7Mfcf9x9ziWPwt9yqD6Yjt7Mv9
vM/9vFskP3gy8nSt5CzNXS7TDzZ8GvLx/Tx/tx3McocGT9hGrK8TPHZtj27e
efHnG/UhGHsR5xj2N7vnIy+NvCXyHciX94IxijWKaYltiUGLRW/MGMO6iQHE
p3dA3lSspRO8+VrvGftRm/u7tAo2KSYtNm3Ox9yPMbmx+Q1VcuFiyGLJK3FM
1c0aId4knrBwNxiC+NTKyIO7WZPMf85u/q4bzHNZ768frHTR5vm26AerXKZ5
vtV62WvN0ZuPW7WRx+okZ7iPGBj3806D3+2F/A7yWw2euCfy28hvNvjTq1X8
NWP7LQcSFxsfi2mZj7ugH9/AWHdz9NOJ0boWcD9r6LvTV/SSz3Z/uA15pF5+
U+fz5hxLdYNZiIe4n2grxirWeq1+VpE57Fw+h76vWvFVNhsIJmcctlyDNc5h
fo32dp3kO8bsh9swnf5FP3yDeWmP3Un+zJyUuSlzruZe9+sn97Yr8v60D+LY
q5ucmfnZg/vBJvdBPoT2PcaQXH+6dvaPu10v3Zcb/YNiSIx/LPd8arPfPtwK
50LuxbWu393sSeaTb6xiaw7UXKj748zt5OTNzd/HeAv30ud+uWY/uehz0J/k
fDEnQnuCTvD0+8W0yrxjJ7s+03dBN5iH+Lb7n/duzt3c+70D8eP05+SKmA95
qMwed4rzeSB+mP6YWN/1+txl1kD302uQFyiDP7r/Xod8KfIMzf1NyvXmoD1G
J/l68alpu9nDxHPX4Ji+G59A/sFRjDFRKxwIuRB36jNy/V2a30fOx13d5HDl
ghzPmJeJFXeSPzWftXM3OUfzV/r4+vr6pM/2EyMYKzgnnBv6+Pr6F3eSOzqX
43J083SCR5sjfqYbTN7c8cHGkfqO/v694F7D8S/nEO12g7/vUQRvm67I3mvO
2HyC8Z+5RX3qV41txSfRnc01Xqd9Xp34wTjiZM4fu8y9nIX+tTL+hPkJc8+n
+7eug9e+0Us+48I6+SrzVqcgX1IHXxVnPXUgMZG5ATF/YyVjPLH/mVuJ/cYs
s9ZPRt/ZtLcpkmsz5/ZLmfuRC+IesjftP9Gdinwyx7HY7ltmb/OZ5McYo5n7
8G9i7Gb8bu7r1SbmOIH7e7EdbsYJA8mvjSF2wFhnu7b3gg2IEYgPi7ebCzMn
9jntxXrB18X436e9qu8817u4wT/Nz52E7gR0Z4n/oRvQN6PvxCJ4t7mz75u/
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
A1mb/XM7fKKz6sQOzhevd3qdZ/GZLLQXbxzuGyCOVOQ39rc+wPeJ8W+uktsx
h2Mux/s5D/nqInzCa6vgfyM3+J3P57VuKsJvNG9m/sw1Vfz22DrcYXNirrfu
5+bPriyChx5Zhyt9Wiv+iuuztlcV4VceXYc77Tnu/xfU4Yr5ezgfxQ+du85h
4zTnnHNPTNX5/Gc/+QKxWPGpV/rhC8p1lc//cr+J73vh87/UDz9a7qv8Yuuh
xCfkO8hPt15ePq8xkfUM3o/vxgK94KvWm8q9Mycvv/LDfvLDzmnntvXl+kbm
/+V7Wq+ub7t/K/ix/pz51IuK8EmtdzefKqfg/+Grvsv+Br5v8kH1HfQhvu6m
/tm9blA7fNX96nCzxdxdD5RdG/SB9YWtZzD37d/kG2OTxt/ZoZf6kGN7qUXY
tJV6hfXrrI2uga6F4uHmY60Bsobu035s9cn0zS6qgh8XDX5+ci/YrBit+eUt
6uw17oHuhdYHyn0Ws5cvc08/3BE5JPLjH+jnXfCdsD7k/n746IOK1IP81g+e
KwdCfGWlKvUvtxTJ797dz3yesAh/3XyB3GtzCD9ie2WV3KQ5UHOh4v9yTcWo
t6yTL5Cr6jP9UKXeWK71sFb4hdaLyKXeEPlbfeUq9TUj9FK/IH9dbrWc9q/R
fdLP3uue794/bpV6DTl7cvdWrMO1tu+TKvVU1mcYg1lvMkLjD/pRAOsbzu0l
N2GOwny49ctyAXdqJf9ivcmB7fgr+i3nOIfb8enMpwxUqS/6twhfaIU6XAif
4SN0I1fxdate6juuqzK3Rmnw/iuq5I71GfUdL66Sr5Dba37Fw7Z/Q/+Wzgnn
hn9j/9Zbuf62k5Px7ysH1tjDmMjfxxhEWczZ+tLvGzxRDFIs0njF2lPfUeMn
56tchm2a/dz5LXdaTu6HtPu98Dx8Rp/Vmpd2LxxYubBjV+EWixnqj/n81iLI
kX+/Sg7Cv6V/U+uDXTNcO/yN/a0nr5KbkuPv+2WNprx+5/j33P8UVXJTcv6d
L3KqxYHFgwc1/rW1eHLc9cflTJtXML8gl9p4avpWOMzGS/J/zU3LKZcva0xq
bCoGYL36VHW4y59xzhNVfHZ9dzE26/3MP8g1kMM9eZ0cmnUJviMbNv6/e7l7
+txV5p+1RXLMXqsaPmwrGLH8VeeTtWVyapbXX6zDlf4Um8fR/VxlbooZix1/
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
JfD7BNaHWj/qt4fEPKxH/T9ZUpcQ
           "]], Polygon3DBox[CompressedData["
1:eJwt1wm8j1Uex/E/7nXvv0h2KilFM7RQXq3WCMkShVK6NFSWcKfsms1WijK4
lrIvjVDi5sqepSZLpcVSYrRQk3ViLE2m9+/1eL3u9/7P73O+v3PO8zznOec8
Vz/ep23vwqlUajNl0ndZqdTFCgOpf6FUqk12KlWT2ivnYJ3oRvH0dCr1bEYq
tbdIKlVX3q9FU6kqcifyTeAZT4d46vB2xbqLn6Q7xbdTZ2ypnOPa2C7vaewf
2FyeivSl3JvxWtRd3Tx1PfzeQV2Uu/GckPuR+s68D2AdscXazBHPpP7q9xlf
feM7j9fOSvqYw1eedvPMoH58X/PV4/sf31lsgd836Db8an1uwrbzNYzx8vXS
1lSsp/hTnhuxk/w/8Fb3+7D257ixlXiaUJrnRIxF3Wmev8uvLmcHdop3AzYK
e0x794nvMs7LsSvlztdON3lH1X0sPh3jFs+kavLbimvTLr7BWF35xeTO0d4k
ObPF87XXE1uCvaTfS/HivDuxKnIXy31KXIT3a57rsY1YLtaE/iM+SOPUz4hr
097v+RphY5XHYMVph/hNfJb2l4gL1A3WRz42D3sTG6b/e8QNeJ9TPxTLoE/E
39Mw5eGUw1eW7yT2gjGMjvG53obin+lR8Ty6AXtIfBnvK9obK/cS+hTbj2Uq
38rXW10zY2mHzxHvxUfKHS2eGvNPf/nGWErdEewbuofnX3RW7pPaOoqVVv8J
DZE7TPwq9ZL3mfgmbfysbjL2VMxPbDulL/L8scbq8qgUdqv2DmO/aH851hx7
StyBrle+XX4nvLT43zEevh+oiOfST+7jxlzCuC7DGsW7xFOR8tTnxNygY+Ka
9Ak2QFwjnq+4odwmxjpEH+ewn7BOtJCnQ8w//T8mviUrmTsxh2bRj/F8aYK8
QjRAGzVinmGdxe/Lq4z9pJ0S+mgo52P6Nt7t7OS+PMm3im913C/3ZbX8t7Fy
NFFua/FKektchsZjLcUT5H+hnc2xBtH58GlvGU8V2qNuMs+deL7yYp5KtDfm
AdVX3kmH1RUTt+J9RnzAOBpFv+I8ub219SF2DXbadUzC+mBbsGuxM/F8sb7Y
Vqwqdhbbqs29WJtYT+Le8jyq/Qf190hmMg9iPjTQzxPYN8qF8D182+R+La9t
rFlyh2IraIG4GI3C7hWvoaXi8pSH3S/eQKvEV9M87CHxQpombuX+1lWuR4tp
BnY/1lD5blpE07HWWP14J+m9uK/YVTRXex2iD+PbIq5Jtehh/lX4EuWyNIGv
lfidmC/iNA3HmgSL901ckja57hGufzn2hrhC3GtsNLYWWyu+lqrSg/ooiDmp
XDHuNd9LkavN18UX0Qh9NBWvp3fFlWkO1l5cEOu9+GIaiTUTT8lO5knMlzru
fbZ4uz72iR+g/XzP8f2F2okXe0b+Ut94vuv41mM30xosJ+4VtkFcm9ZhXbDN
2Efiu+P9x57GRlKnyNOYy0r9qL0RWEesADOM1KGiyT1Yd+Eex72+jnk438PK
7/Appg7ybeTbhjWgbVhPFXOyk/cs3rc7KFO8hq8g2qG3+B7gm4kf4NsR+1us
vdnJ893KU5/qUY14L7HlytVi3ZbbNuYZ7yXWkhOxRlBR8Xq+93huobV8nfm2
YF/FXIszAjY49p1Ys2JfcB2lsSP6H4P9AVuKlcGOYv+UuyfmLrWkG4zlA2xn
7I20m6+/vA+xL2Pu0lfYIOxVGijeqb1bsELi12gQtgurjRUWvy/3Y6xR7KlY
b+xv1EH8dpELZyFj+SvWPu4d5if1LTYrzjmCpsZ1g/KNcU9pNHaYryNfpdiL
6AlsBVYeOyH3Zawbthwrhx3HZmN5WLOLkvNOnHvGUlcsn68s3zG+YdhD2DJM
mPrev3Nx7/1uoCfwXM9jc9wbvptoNV+PuF7aIb6NNmK54ua8fc2Dvi72F/zz
mEOxJyt/r62WfBmxb2N/xg5hrbGsWJewkdjx2CewMvGuYSOwY1gnrDS2TB9Z
5ssRffyq7ot4d/mGKx/le5SvJDYbG4p9h7WIsyj2POVgLeTWNc5K2urP97by
Qmyja+4X6wi9yHdabg+5lS88k3g2S9LJvS3j3o4T94h1RW5zbVTT3kL1L2Fn
5PaUeyXPXOxP2EGsFVY0K9lvY989JLcZfRfnsjir8B3he4SvFM8H2jyjfomx
NcC7pJM1NdbWZelk/a1oLPlxRlUuTs/Lbay+aXZyRimIMyj+WeRd2Ct6avNk
zFXsuljHsXF8r9CpdHIWizPZdL5ytCveP7mXqt9CucYyFHswzo98++LMEGcb
cZt0sid+Ia5H+8RTqHv0J+9edVXjzEqfKW+LM1c8z6xkLY81faW4Kp25sNfE
nrM0newtFVxvHfFdsc+nk32pPPa7OCfKnSavbOzNcQ6l8fGiUX8/1WOPwsaI
zxpLL+wqbEisu3JXyPvAeAbH8zCWHZnJ2hRr1Or41og5wDeRZwL9l28lXlz9
cb5a9P/YO6JvfVxBM/Qximca9oz4yzhfauNmbAW2CLs8I2kj2loQ605Gct6I
c8eA+E6J61dehF1BX8V5GtvEVz3eYX10Fbfgzc1M3o94T/LFz+KFlQ9iTePs
FOOIhR973TXMpzPp5Dwa59L9PI3jHINtiv0n1u9YO6R0y0rW090X1vVY37u4
9zXxm+KMlU7WstLYa8p/VN5TJPnei+++uTyTM5Jvpvh2iu+0U1TXGNbEWZG3
r7zPqSTPxMzkGzC+BQdim3nysV58g+IbAi+k/gXs9jizZifvdbzfLeMaYs+M
8WYlH6Qx72P+x5lpD14hM/lGjLHE99wsbHBGcpYKX7wvb8V6Eus437vxfRHn
xji3i/NoEnYNz046n5F8m8Y3at2Y33wlxC9nJt8S8U0xhXJjn9VHNcM6Z9yN
Y076fZGvHd5HfIAvKzNZT2NdvS++KbCpGck8iPnQD/sNapIQsA==
           "]], 
          Polygon3DBox[{{2491, 1205, 1061, 1060, 1481, 2198}, {1962, 1180, 
           1440, 2536, 1851, 1852}}]},
         Annotation[#, "Charting`Private`Tag$6274#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r1Pk1EUB+DT1lZQlI/RBBt30RonEhlqil8tCnUxdTNxwAHippMjLkQn
jTFhg40Yow3BxBhT/QdEEPnSbkQZNHEjoM+Nw32f37l9c8+99+2JW5P1iUxE
TBuPcxEpn+Wg0C5E9Kh/ssg/PMU9DjF/MKLGPt5kkXd4miXjvlzhQ17hU45x
jg02Od9hXb0+yEOdET+yEX/VZ+xhydy2el9dUl84EPHZXMbcRXlZvsQVXuaX
1IerrPIra1zjCK8a6/I1bnCUm2lP3GKd33id39O5886o14zebfUj9qof2Psn
9V22eJuveYOzaV0+SXviFM+zbNyTT3Kc/Wywh1XmeI677nYgvede6s59XD7m
Xp7rO6z+zW5zz1hR/+JH+zpqrpzuUT4it9jF9zzMdzzEt7RcvOGioU0sUPto
Uvt4RUePl3QV8YK59K08tIsdPxay//8v/wA/WUOd
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1761, 2073, 1108, 1760, 2555, 1920, 1762, 2556, 1921, 1763, 
       2557, 1922, 1764, 2558, 1923, 1765, 2559, 1924, 1766, 2560, 1925, 1767,
        2561, 1116, 1768, 2562, 1926, 1769, 2074, 2076, 2677, 1927, 2075, 
       1991, 2078, 2678, 1928, 2077, 2510, 2563, 2080, 2239, 1929, 2079, 2394,
        2395, 2737, 2553, 2081, 2240, 2366, 1930, 2329, 2543, 2722, 2331, 
       2278, 2082, 2241, 2445, 1931, 2330}], 
      Line3DBox[{1771, 2455, 2606, 1770, 1121, 1772, 2564, 1932, 1773, 2565, 
       1933, 1774, 2566, 1934, 1775, 2567, 1935, 1776, 2568, 1936, 1777, 2569,
        2456, 2607, 1778, 2083, 2085, 2457, 2679, 2084, 1992, 2087, 2680, 
       1937, 2086, 1993, 2089, 2718, 2242, 1938, 2088, 2396, 2398, 2397, 2570,
        2090, 2243, 2367, 1939, 2332, 2279, 2333, 2280, 2571, 2091, 2244, 
       2446, 1940, 2452, 2752, 2399, 2400, 2093, 2245, 1941, 2092}], 
      Line3DBox[{1780, 2458, 2608, 1779, 2459, 2609, 1781, 1133, 1782, 2572, 
       1942, 1783, 2573, 1943, 1784, 2574, 1944, 1785, 2575, 1945, 1786, 2682,
        2094, 2096, 2460, 2681, 2095, 1994, 2098, 2461, 2663, 2097, 1995, 
       2100, 1526, 2246, 2099, 2402, 1996, 2403, 2719, 2247, 2401, 2248, 2101,
        2281, 2334, 2511, 2729, 2336, 2249, 2335, 2250, 2102, 2404, 2405, 
       2738, 1997, 2104, 2251, 2252, 2103, 2683, 1998, 2105, 1946, 1787}], 
      Line3DBox[{1789, 2462, 2610, 1788, 2463, 2611, 1790, 2464, 2612, 1791, 
       1143, 1792, 2576, 1947, 1793, 2577, 1948, 1794, 2684, 2106, 2108, 1949,
        2107, 2685, 1999, 2111, 2465, 2664, 2110, 2000, 2114, 2253, 2665, 
       2539, 2113, 2407, 2001, 2408, 2540, 2739, 2406, 2254, 2116, 2282, 2337,
        2002, 2340, 1533, 2339, 2255, 2117, 2409, 2410, 2740, 2003, 2119, 
       2256, 2257, 2118, 2686, 2004, 2122, 1950, 2121, 2687, 2005, 2227, 1951,
        1795}], 
      Line3DBox[{1797, 2466, 2613, 1796, 2467, 2614, 1798, 2468, 2615, 1799, 
       2469, 2616, 1800, 1152, 1801, 2689, 2126, 2127, 1802, 2666, 2006, 2109,
        2007, 1803, 2667, 2008, 2112, 2009, 2690, 1804, 2283, 2010, 2115, 
       2011, 2412, 2742, 2548, 2369, 2284, 2341, 2012, 2338, 2013, 2723, 2343,
        2285, 2370, 2286, 2413, 2014, 2411, 2741, 2512, 2368, 1805, 2287, 
       2668, 2015, 2120, 2016, 1806, 2669, 2017, 2123, 2018, 1807, 2688, 2124,
        2228, 2125, 1808}], 
      Line3DBox[{1810, 2470, 2617, 1809, 2471, 2618, 1811, 2472, 2619, 1812, 
       2473, 2620, 1813, 2533, 2621, 2134, 1814, 1289, 2128, 2019, 1815, 2670,
        2020, 2129, 2021, 1816, 2724, 2288, 2022, 2130, 2023, 2415, 2372, 
       2694, 2373, 2289, 2344, 2024, 2342, 2025, 2345, 1594, 2375, 2290, 2417,
        2026, 2414, 2743, 2513, 2371, 1817, 2291, 2027, 2131, 2622, 2514, 
       1818, 2515, 2691, 2132, 2028, 1819, 1409, 2229, 2133, 1820, 2578, 1952,
        1821}], 
      Line3DBox[{1823, 2474, 2623, 1822, 2475, 2624, 1824, 2476, 2625, 1825, 
       2143, 2626, 2535, 1826, 2516, 2692, 2135, 2029, 1827, 2517, 2693, 2136,
        2030, 1828, 1595, 2292, 2137, 2378, 2377, 1829, 2725, 2293, 2416, 
       2294, 2138, 2296, 2374, 2295, 2733, 1830, 2297, 2346, 2298, 2139, 2376,
        2447, 2732, 2549, 1831, 2299, 2300, 2140, 2627, 2518, 1832, 2031, 
       2141, 2628, 2519, 1833, 2534, 2715, 2230, 2142, 1834, 2477, 2629, 1835,
        2478, 2630, 1836}], 
      Line3DBox[{1840, 2579, 1953, 1838, 2580, 1954, 1842, 2154, 2156, 2697, 
       1955, 2155, 2033, 2158, 2698, 1956, 2157, 2522, 2581, 2160, 2258, 1957,
        2159, 2419, 2420, 2745, 2554, 2161, 2259, 2383, 1958, 2348, 2546, 
       2726, 2349, 2305, 2162, 2260, 2449, 1959, 2453, 2753, 2421, 2422, 2164,
        2261, 1177, 2163, 2035, 2166, 2699, 1960, 2165, 2037, 2232, 2716, 
       1961, 2167, 2152, 2582, 1962, 1852, 2583, 1963, 1854, 2584, 1964, 1856,
        2585, 1965, 1858}], 
      Line3DBox[{1857, 2640, 2483, 1855, 2639, 2482, 1853, 2638, 2481, 1851, 
       2536, 2637, 2231, 2151, 1850, 2524, 2636, 2150, 2036, 1849, 2523, 2635,
        2149, 2308, 2307, 1848, 2550, 2734, 2448, 2380, 2148, 2306, 2347, 
       1608, 1847, 2303, 2379, 2304, 2147, 2302, 2418, 2744, 2545, 1846, 2381,
        2382, 2146, 2544, 2696, 2301, 1845, 2034, 2145, 2695, 2521, 1844, 
       2520, 2634, 2144, 2032, 1843, 2537, 2633, 2153, 1841, 2632, 2480, 1837,
        2631, 2479, 1839}], 
      Line3DBox[{1860, 2484, 2641, 1859, 2169, 2171, 2700, 1966, 2170, 2038, 
       2173, 2701, 1967, 2172, 2039, 2175, 2720, 2262, 1968, 2174, 2423, 2425,
        2424, 2586, 2176, 2263, 2384, 1969, 2350, 2309, 2351, 1612, 2177, 
       2264, 2450, 1970, 2454, 2754, 2426, 2427, 2179, 2265, 1971, 2178, 2702,
        2040, 2181, 2485, 2671, 2180, 2041, 2233, 1188, 2182, 2168, 2587, 
       1972, 1861, 2588, 1973, 1862, 2589, 1974, 1863, 2590, 1975, 1864, 2591,
        1976, 1865}], 
      Line3DBox[{1866, 2184, 2186, 2486, 2704, 2185, 2042, 2188, 2487, 2672, 
       2187, 2043, 2190, 1550, 2266, 2189, 2429, 2044, 2430, 2721, 2267, 2428,
        2268, 2191, 2310, 2352, 2525, 2730, 2354, 2269, 2353, 2270, 2192, 
       2431, 2432, 2746, 2045, 2194, 2271, 2272, 2193, 2705, 2046, 2196, 1977,
        2195, 2706, 2047, 2234, 2488, 2673, 2197, 2183, 2489, 2703, 1867, 
       1198, 1868, 2592, 1978, 1869, 2593, 1979, 1870, 2594, 1980, 1871, 2595,
        1981, 1872}], 
      Line3DBox[{1873, 2048, 2200, 2490, 2674, 2199, 2049, 2203, 2273, 2675, 
       2541, 2202, 2434, 2050, 2435, 2542, 2747, 2433, 2274, 2205, 2311, 2355,
        2051, 2358, 1557, 2357, 2275, 2206, 2436, 2437, 2748, 2052, 2208, 
       2276, 2277, 2207, 2708, 2053, 2211, 1982, 2210, 2709, 2054, 2235, 1983,
        2213, 2710, 2198, 2491, 2707, 1874, 2492, 2642, 1875, 2493, 2643, 
       1876, 1208, 1877, 2596, 1984, 1878, 2597, 1985, 1879, 2598, 1986, 
       1880}], 
      Line3DBox[{1882, 2055, 2201, 2056, 2712, 1881, 2312, 2057, 2204, 2058, 
       2439, 2750, 2551, 2386, 2313, 2359, 2059, 2356, 2060, 2727, 2361, 2314,
        2387, 2315, 2440, 2061, 2438, 2749, 2526, 2385, 1883, 2316, 2527, 
       2728, 2209, 2062, 1884, 2676, 2063, 2212, 2064, 1885, 2711, 2214, 2236,
        2215, 1886, 2599, 2494, 2644, 1887, 2495, 2645, 1888, 2496, 2646, 
       1889, 2497, 2647, 1890, 1219, 1891, 2600, 1987, 1892, 2601, 1988, 
       1893}], Line3DBox[{1905, 1990, 2604, 1904, 1232, 1903, 2653, 2502, 
       1902, 2652, 2501, 1901, 2651, 2500, 1900, 2650, 2499, 1899, 2649, 2498,
        2603, 1898, 1989, 2602, 1897, 2219, 2237, 1498, 1896, 2071, 2218, 
       2713, 2530, 1895, 2529, 2648, 2217, 2070, 2320, 1894, 2388, 2528, 2751,
        2441, 2069, 2444, 2319, 2392, 2547, 2731, 2363, 2068, 2360, 2067, 
       2362, 2318, 2390, 2714, 2389, 2442, 2066, 2216, 2065, 2317, 2221}], 
      Line3DBox[{1919, 2226, 1513, 1918, 2662, 2509, 1917, 2661, 2508, 1916, 
       2660, 2507, 1915, 2659, 2506, 1914, 2658, 2505, 1913, 2657, 2504, 2605,
        1912, 1239, 1911, 2656, 2503, 1910, 2225, 2238, 2717, 2538, 1909, 
       2532, 2655, 2224, 2072, 1908, 2531, 2654, 2223, 2328, 2327, 1907, 2552,
        2735, 2451, 2393, 2222, 2326, 2364, 2325, 1906, 2736, 2323, 2391, 
       2324, 2220, 2322, 2443, 2321, 2365}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{941, 1109, 2555, 942, 1121, 967, 2609, 1132, 979, 2611, 1141,
        989, 2614, 1149, 997, 2618, 1156, 1006, 2624, 1164, 1016, 2632, 1174, 
       2580, 1027, 1455, 1456, 1185, 2700, 1038, 1319, 1471, 2672, 1195, 1049,
        1331, 1483, 2675, 1554, 1204, 1059, 1694, 1696, 1695, 2750, 1492, 
       1560, 1661, 1213, 1069, 1627, 1701, 1628, 2731, 1501, 1566, 1758, 1223,
        1081, 2735, 1702, 1703, 1509, 1570, 1235, 1095}], 
      Line3DBox[{943, 1110, 2556, 944, 1122, 2564, 968, 1133, 980, 2612, 1142,
        990, 2615, 1150, 998, 2619, 1157, 1007, 2625, 1165, 1017, 2633, 1441, 
       1442, 1175, 2697, 1028, 1310, 1457, 1186, 2701, 1039, 1320, 1472, 1550,
        1551, 1050, 1691, 1332, 1743, 2747, 1555, 1744, 1556, 1692, 1625, 
       1658, 1341, 2727, 1662, 1561, 1663, 1562, 1752, 1697, 1748, 2751, 1347,
        1502, 1567, 1568, 1082, 2654, 1351, 1510, 1236, 1096}], 
      Line3DBox[{945, 1111, 2557, 946, 1123, 2565, 969, 1134, 2572, 981, 1143,
        991, 2616, 1151, 999, 2620, 1158, 1008, 2626, 1427, 1428, 1166, 1018, 
       2634, 1303, 1443, 1176, 2698, 1029, 1311, 1458, 1548, 2720, 1549, 1040,
        1689, 1321, 1738, 1552, 2721, 1739, 1553, 1690, 1622, 1656, 1333, 
       1659, 1557, 1660, 1558, 1751, 1693, 1747, 2749, 1342, 1493, 1563, 1564,
        1070, 2648, 1348, 1503, 1224, 1083, 2655, 1352, 1511, 1237, 1097}], 
      Line3DBox[{947, 1112, 2558, 948, 1124, 2566, 970, 1135, 2573, 982, 1144,
        2576, 992, 1152, 1000, 2621, 1411, 1412, 1414, 2692, 1297, 1429, 1298,
        1431, 2695, 1304, 1444, 1305, 2581, 1446, 1610, 1312, 1459, 1313, 
       1734, 2586, 1733, 1460, 1617, 1653, 1322, 1655, 1323, 2730, 1657, 1618,
        1473, 1623, 1742, 1334, 1746, 2748, 1335, 1745, 1485, 1626, 2728, 
       1343, 1494, 1344, 1496, 2713, 1349, 1504, 1350, 1523, 2717, 1506, 1512,
        1507, 1098}], 
      Line3DBox[{949, 1113, 2559, 950, 1125, 2567, 971, 1136, 2574, 983, 1145,
        2577, 993, 1395, 2689, 1396, 1398, 1289, 1413, 1290, 1416, 2693, 1299,
        1430, 1300, 1433, 2696, 1603, 1306, 1445, 1307, 1730, 1729, 2745, 
       1448, 1611, 1650, 1314, 1652, 1315, 1654, 1612, 1462, 1619, 1737, 1324,
        1741, 2746, 1325, 1740, 1475, 1624, 1336, 1484, 2708, 1337, 1487, 
       1345, 2676, 1495, 1346, 1522, 1498, 1505, 1499, 1084, 2656, 1238, 
       1099}], Line3DBox[{951, 1114, 2560, 952, 1126, 2568, 972, 1137, 2575, 
       984, 1382, 2684, 1383, 1385, 1278, 2666, 1397, 1279, 1400, 1291, 2670, 
       1415, 1292, 1418, 1595, 1596, 1432, 1727, 1726, 1728, 2744, 1604, 1686,
        1605, 1447, 1607, 1649, 1606, 2726, 1651, 1613, 1688, 1614, 1461, 
       1736, 1757, 2754, 1735, 1464, 1620, 1621, 1474, 2705, 1326, 1477, 1338,
        1486, 2709, 1339, 1521, 1489, 2711, 1497, 1490, 1071, 1225, 2602, 
       1085, 1239, 1100}], 
      Line3DBox[{953, 1115, 2561, 955, 1127, 2569, 973, 1371, 2682, 1373, 
       1375, 1266, 1384, 2685, 1268, 1387, 1280, 2667, 1399, 1282, 1402, 1591,
        2724, 1592, 1417, 1724, 1723, 1725, 1597, 2725, 1682, 1598, 1434, 
       1602, 1647, 1601, 1648, 1608, 1687, 1609, 1449, 1732, 1756, 2753, 1731,
        1451, 1615, 1616, 1463, 2702, 1317, 1466, 1327, 1476, 2706, 1329, 
       1520, 1479, 1488, 2710, 1481, 1060, 1214, 2599, 1072, 1226, 2603, 1086,
        1240, 2605, 1101}], 
      Line3DBox[{957, 1117, 2562, 958, 1362, 1363, 2679, 1129, 975, 1258, 
       1376, 2663, 1139, 986, 1269, 1388, 2665, 1530, 1147, 995, 1672, 1674, 
       1673, 2742, 1403, 1536, 1643, 1154, 1002, 1593, 1679, 1594, 1420, 1542,
        1754, 1160, 1010, 2732, 1680, 1681, 1436, 1546, 1168, 1020, 2635, 
       1308, 1452, 1178, 2699, 1031, 1318, 1467, 1188, 1042, 1468, 2703, 1197,
        1052, 2642, 1206, 1062, 2645, 1216, 1074, 2650, 1228, 1088, 2658, 
       1242, 1103}], 
      Line3DBox[{959, 1354, 1355, 1118, 2677, 960, 1252, 1364, 1130, 2680, 
       976, 1259, 1377, 1526, 1527, 987, 1669, 1270, 1717, 2739, 1531, 1718, 
       1532, 1670, 1589, 1640, 1283, 2723, 1644, 1537, 1645, 1538, 1750, 1675,
        1722, 2743, 1293, 1421, 1543, 1544, 1011, 2627, 1301, 1437, 1169, 
       1021, 2636, 1309, 1453, 1179, 2716, 1032, 1454, 1189, 2587, 1043, 1198,
        1053, 2643, 1207, 1063, 2646, 1217, 1075, 2651, 1229, 1089, 2659, 
       1243, 1104}], 
      Line3DBox[{961, 1247, 1356, 1119, 2678, 962, 1253, 1365, 1524, 2718, 
       1525, 977, 1667, 1260, 1712, 1528, 2719, 1713, 1529, 1668, 1586, 1638, 
       1271, 1641, 1533, 1642, 1534, 1749, 1671, 1721, 2741, 1284, 1404, 1539,
        1540, 1003, 2622, 1294, 1422, 1161, 1012, 2628, 1302, 1438, 1170, 
       1022, 2637, 1440, 1180, 2582, 1033, 1190, 2588, 1044, 1199, 2592, 1054,
        1208, 1064, 2647, 1218, 1076, 2652, 1230, 1090, 2660, 1244, 1105}], 
      Line3DBox[{963, 1248, 1357, 1249, 2563, 1359, 1576, 1254, 1366, 1255, 
       1708, 2570, 1707, 1367, 1581, 1635, 1261, 1637, 1262, 2729, 1639, 1582,
        1378, 1587, 1716, 1272, 1720, 2740, 1273, 1719, 1390, 1590, 1285, 
       2668, 1405, 1286, 1407, 2691, 1295, 1423, 1296, 1519, 2715, 1425, 1439,
        1426, 1023, 2638, 1181, 2583, 1034, 1191, 2589, 1045, 1200, 2593, 
       1055, 1209, 2596, 1065, 1219, 1077, 2653, 1231, 1091, 2661, 1245, 
       1106}], Line3DBox[{964, 1571, 1250, 1358, 1251, 1706, 1705, 2737, 1361,
        1577, 1632, 1256, 1634, 1257, 1636, 2571, 1578, 1369, 1583, 1711, 
       1263, 1715, 2738, 1264, 1714, 1380, 1588, 1274, 1389, 2686, 1275, 1392,
        1287, 2669, 1406, 1288, 1518, 1409, 1424, 1410, 1013, 2629, 1171, 
       1024, 2639, 1182, 2584, 1035, 1192, 2590, 1046, 1201, 2594, 1056, 1210,
        2597, 1066, 1220, 2600, 1078, 1232, 1092, 2662, 1246, 1107}], 
      Line3DBox[{965, 1572, 1665, 1573, 1360, 1575, 1631, 1574, 2722, 1633, 
       1579, 1666, 1580, 1368, 1710, 1753, 2752, 1709, 1370, 1584, 1585, 1379,
        2683, 1265, 1381, 1276, 1391, 2687, 1277, 1517, 1393, 2688, 1408, 
       1394, 1004, 1162, 2578, 1014, 2630, 1172, 1025, 2640, 1183, 2585, 1036,
        1193, 2591, 1047, 1202, 2595, 1057, 1211, 2598, 1067, 1221, 2601, 
       1079, 1233, 2604, 1093, 1513, 1514, 1515}], 
      Line3DBox[{1094, 1234, 1759, 1569, 1508, 1630, 1704, 2736, 1629, 1080, 
       1222, 1664, 1565, 1500, 1699, 2714, 1700, 1698, 1068, 1212, 1559, 1491,
        2712, 1340, 1058, 1203, 2674, 1482, 1330, 1048, 1194, 2704, 1470, 
       1469, 1037, 1184, 2641, 1026, 2579, 1173, 2631, 1015, 1163, 2623, 1005,
        1155, 2617, 996, 1148, 2613, 988, 1140, 2610, 978, 1131, 2608, 966, 
       1120, 2606, 940, 1108, 1353, 1516}], 
      Line3DBox[{1102, 1241, 2657, 1087, 1227, 2649, 1073, 1215, 2644, 1061, 
       1205, 2707, 1480, 1051, 1196, 2673, 1478, 1328, 1041, 1187, 2671, 1465,
        1316, 1030, 1177, 1547, 1450, 1685, 1684, 2734, 1019, 1167, 1755, 
       1545, 1435, 1600, 1683, 2733, 1599, 1009, 1159, 1646, 1541, 1419, 1677,
        2694, 1678, 1676, 1001, 1153, 1535, 1401, 2690, 1281, 994, 1146, 2664,
        1386, 1267, 985, 1138, 2681, 1374, 1372, 974, 1128, 2607, 956, 1116, 
       954}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzEvXk0Vt/fN16o0GiWISEZKiFp1JFKiTSQsYlCRSSlNBhKplJoUiSVscwK
JTZJUWlQCqUirqSBiCjDc73fzv6s++d793nW/ax7rV//vNbZrvbZ5/We99l7
H3k71zX2PEOGDLkrOGQILxdTk1XchlzkMIua7+8GzJIYf2eGxBVGreJMsnMU
h3m6rD4F0D3fel/7/quM7Mekw5mRHEb3nKE34MFuS96a8XGMxeQI2+ILHIbX
fYodoL+r+/rfvAmMxRwXtaDzHMaKxQejnwmVr0xiAnU2Pv9wjsPUN7aUAi4J
8THKkU1m4u6pKIWe4TDDVDcpAEp9/+StEZ3GzO+91K0RzmFWXG/tACyb8IqE
jMlkan7LDuUJ4TB5UfN6hnJRZ/eJGZNG3WSaoo9McPPjMJmaeVKAaeK6fNNm
32L2dp28XLKbw1yeKXYOcN2BuCnLdhJGd+gqIytTDhOda20MOH5bzQnTV/eY
xanMxu7ORkb+vvg2wIauWyvVCp8wQ+X9ePctbWCi8zUFAG90FVWM2fKW4f38
89X5854FFFP74V8LY+Ckh3wukJ2RCsisSjoEfL652O0DPFJcJxaFfN7bkIk8
Hv4uhrxeGFpp+V/5tGTxPstnjajXI+Ax7VnJE8DnvkfMgE/PxM/ywGPP7/PI
62OdtCPAp03GxC7gcdtj91+AyQeuFgCfr846DQE+zV1akc9bPz9pAZ+xZW+R
zxcfHJFP34LvPMBnp4XYJeDxbcPp84DPlhaoAZ/b+wtWAY9yccOWAsbJTQgB
Phvv8WwFHid/r9wEyHh8NgQ+q0aRMcCjbqwSH+CJSxJFwGfTWHeld7U7ChoQ
DxXcZvkc07pNlPs70pg9BvgnmhHvrsDvqV5SPaX6SXmkvFI+Lf/C512XpMfA
40rruHJA5YBi1M/7fIWKwGMpi/y5C/2Bz1bZrcjn/aBJyOf6TeJFwGfUa7d+
4PHRqW+9gK/f9GkCn5sKJaWBx8ipcshrceH9YcDnHrWZ0cBj2mTvC4BzD/9Q
AT7nrKkxAR6v3OQzBGTuWh0DPplSZ+TT9wdjCzjLZJce8MkXaDMMeKyuWD0S
8N0Z5wfAz5CBfz6iO68bHv1iW9DD8jn6nLUw8FhSP3o04MWfay/C72uUqjZz
+yVL9CbDfciHvT+UoH/iOnkD8LjR7LI94JVsGyvg0z9mtgrwGHcufirgwzPm
Y4HP8xKzy4DHdncJtHtxPWXkM9apBHmkaKYd7AV8+qk/RR6Psrg/OyQP+Iwv
CUD9bKiqQv0UOJeMfMbJrpIBHq9ZDJUFdCwUGQJ8Ng45EwU8do6Zinix7tpk
4HOPkSHae3x2Ftp7zhuLIOCz3UjSDnjs+urpCDhnxuWF8LwflqainQfN7hsF
+NF9eTbwM95YPMrBwaGA8trF8qloEI08yrEYOm1hEvy+7MiP7cDjjYXqoP9k
fmnddOg/c0fJGu44yDXZuUsA3W2n4nimuqmqAo+SzhlTALUE5ooAn9TOqd1T
e58/2hj9pvNhBu29zmc48jnk27bfwOPiVCX0n6MWqxUCn7LeWX3AI0XbwF/T
gc8V0rHI50oWXfknob27ah+8CDw+va8bCage+l0Z+LxY9Aj1Us6pdwXgWZdn
x2H8o5WV7YFHXt/CLYB6T5/pwvOm1d9F/5l7IxP4YVQPaJT8V/2cOA7sff2C
PpbP/klrBYHHJLE45FO0LTQTfk/KNzsAj36F86F/MiLl5Ezo/+mnMcjnD51P
yKd/aznyOSFmLPgrcmNBBfgr8mrc04kwfp2s12jn25+5ot13mkauBj6p36R+
lPpP4dvb0N7rlSajfsqUiyKf2qPW8YB+Jmr1/QY+M+NsMR7tSd6NflPN9x3a
+/29Gf1TuXya529EvaSoPL8d9bMyZSzyqHru5XLAZe39wTD+0wabkcfllYrI
63CdifrwvPsvJvADj4lt24AnxtXpXCHwI4f6aV4gxiK19xDxFPALRH3CMOR1
4RmxW/D7d5/8kE9TiZdo97cOFc2G/svTy2A85Iv6JBgPyVlhg+NZt2gz6AOJ
fRAC+kBmeIyfAOP/3VEhx31OEt/sNx7wcmtsHzwvjes0ztP4XvlkSyfwKDxk
Gsb50fL7Mb5ffOOGdr7bowntforvOuST2jm1e2rvVC+pnlL99DzrhfYue0EV
7d3y47CTMH7rh53IJ8XFUiGon+ILxyKPFEWHnssHfgb0cWXB/xe59h4mBn6B
OLTwI69pd/huwu8N12WBnMilxyaon7rNl+dD/wkDfofsGvBD5Abrf/R+VSGf
a17/BP9PevW2TILxn0zG+Eu+fTkEekTULwogn5v99wEvpPBKC/BElu1NGLBf
Nk+ieRPNl2hcp3GexvfeP/2on7yRS1E/+xOXDsR31m9SP0r9p5nxbuTz5qx9
yKfE2V2oD3KzzUBvmPRUJ9Aj5u7kc8z/hc+NLI8b/yufJc93I48Ut96PRD6b
y6aifjpeqkf9vL1XEPlM+guf2gfCkM/TM+aifhbZlCCf8zySZZFHw0SIw0Sr
1ALt8dHtOOSTCBQjn1tfH0I+wx+EAY+kVYQf9JR81ei8A3xOfr0c4/qLLcLI
5+8bp5FPmifRvInmS946tpgn+UYux7zJ5NsezJc+T76HfMYdnIp8en+agnxS
v0n9KPWfn8V60d7D9R8gn/eiIgr+TT//xqf6NGXk0UOrH3nlGck377/y6cby
mcXyqWAhhXxalacgn4IzHJVg/BeCJ6B+6jjMRj6F9tWgfqryNSKfP877IZ8a
YYuQz1Msn99ZPptZPjcueDWF6xfIbvN4aUDxpFuB4B9oHk/zeprP07yT5qE0
/6R5Es2baL5kbj8T9bLqtB/qae6bGtTP0ZwszJNG9eYNB3xkZX8X+KF+U26Q
/6R2Tu2e2jvVS6qnVD+DijrQf74/p4b+cybvb38Yj8WA3ycUZVj/bzIQdwkb
f4kDG39nDMQXcn0gvpBkNr6w+RLxZ3EPmy9N/eGuDDxqGYtMBPS/KeMLfDrE
Jj3jxjkSoHMF8jIiu2qCCcS7G1EfIzAObc1CPr2qpqrDeGgeT/N6ms/TvJPm
oTT/pHkSzZtovkTjOo3zVD8DB35P6gZ+TxrY31O/Sf0o9Z/UzqmeUns/xnMd
47vx/nkY3yt6/8jB+CmPJoP4ZPMeQtGGzX9aH31C/Vw3IwP8KNEZOi8f+DR4
4jcJeEwVGQn5Kplm3Lof+Mxu2458ih14g3w2nN6/BvhML/sFeTB5/eKTMuBX
8Z4xkL/pmp/GuJ47cTrG+cDVWsjndzb/7BmUf9I8nub1g/N5mofS/JPmSTRv
ovmS2xNH6J8cdi2D/sm8yoC5/5XPhEF8lm6dhXxujM5EPo9NtkY+rw7EXZI8
EIeJPRt/J7A8Sg/ik83jid8g/WTzfkLRhM3/9fuuP0IeCy9Bnku2XdVG/bzg
rg55MDnpcQPyYvKkQ2AU8BnsH72ZW4eQsNtqmwA/+DdaQD2yYik/+k2zLeVo
78Kio5bD89I6k9adtN6kdRHlldo7zeMVB+Xz/HsV0M6bJLMG8s+PmjOgf0cT
XuRxB4vKOlmBwOfRUW1Q3xEnqd/I54OR3Zgv0ThE4xKNR/dn/4H4Qv4YbYM6
khzRuawBfJ6eLIT6ObsvCP1ntuFJ9J9UL6meUv0sHqhniclAPUsU2XpWnCRB
vUY0vmijnm5cWon1GlsvE7ZeJufYerny0ZEj3LqaCFi7ewFusNjeX82tr+k8
CJ0XofMhtG6ndTyt34fJGUP8Ijl1x8QAO1WfXIbfVwS8Ww88Lp052xlw1u1s
jEeLL08G/0NC/7wH/0Mms3zSvJPmoTT/pHkSzZtovkTjOo3zNL7H2YmiXvaX
HYa8nhi9eoz2Tv0m9aPUf25WOoL6qVX3EPVzxpONxsCndMA01M9xwVmon4+W
pI8GPoUkCzYCjxLfBbYA5tZIYb3cXPQH5n0IxRMpw5DP8oF5NzJ1YB6O7GLn
3/42v0TnQei8CJ0P0bN/j35zIYuLtpeqAJ+l434YAI9xc9etBpxw9NcR4JPW
RbROovURzeNpXk/zeZp30jyU5p80T6J5E82Xwl15IP8nPteOQ/5PTo7zPgB8
xkWFIY/Cr4uQ1x1BvMuAz/PDpyCPR4ZmIa+Wwg7jgM+zq6ejXn7mi0I93Xmt
ei3wSfWS6inVT8oj5ZXyaShcCvOe5OZLVZgHJS7DZ96C+c+e2oUY79Ty5mG8
2zHiQxjwcyqqD+Nd09069M/JoyYtAD7vKPNiPuY43Ar9tNHcuwT4f2gYt/5W
2IGCAXQquM/Ka5FqAfp989QRGAeKTwqg/1cjw3Ce0SNJBOfHrL8NWwr9Tx2x
Ee1L1rIT85PvnY6l0L/wxKwpnss3FYxjkfr/KYEdqA+5HcLjcD7HPCMZfv9z
lgfeV8V1Nt5XSfIcznPmd+1H/3jm0Rb0l1fTI3Be7oT1LPSPHVLnhwJuyvlY
9l/jDhG8Urzg8+aC34PmPSYO8pPHWyYAbyTW4ww8H0lrSNaG/pUeJGDey9k/
AvNegdzjOB59Np/wZvMLHTaveNywBHn+tmsI8mBUbPgE+mfQHqwKZiNuK/jJ
jid/xlr0MzM2qQkBrjg6OxV+z6dog/NZ+eFxOK76A5mYV8wIdEd/PXbtIYyH
qoIqmIcvXDkR88j3sjcxr3zu2If5pM6TBOTL8XgO8hcQwlkE/cxtvI7zGhW8
o0YARmV/yMP5IowvqwuEWaT5z9wcHRynxa81yFvW+iCsxxU+26Ld8s+9hvHl
Uv10HOfh/VdwnImfw3Gc95aHHYXxbB+IN//gFNZPbhj/C8f3Rf8ijjegOBDz
Clo/NLH1BK0jpmKetqJAaiBf+yfv9U1SB30g0zvqcLwhDlMx73X9MhHjYIm0
KI6z9eQ6zCt+M1U4zjCbOTjOpludATCeRdu1Ue7rym/gOEvkryPPiwfyPObq
QN7H6LP53v+0Hldi83J7Nk9PYfNzo7g9OM4DOZcxT3c9nzbv3+pH6XVeKG9d
XTOUf9B7dZzXovKm8qdyb/pfqsvi9pSh3Ou945HPrnF5s6D/UbwzYBzkeFmt
IeZrZ/hQvtSeqX1Tu7aIb8V8Ml8oAOueWZLPcL7ofMgmHOcar3T0V35785FP
Km8qfyp3yiPllfJJx0fHS8fJ6h+hKMfqIfV31P9Rv1c3xXZA3g7RiK6zpi2D
fiLKHTFPy7gfj3yeTxz9GP0eaz/jB9nR0Qv7Md+NeVCO49X13ZoDv6fypvKn
cv9bHWFbpjGQl8/ei+M9zyuA80UmJTEbYHx7heNhHpdpTulbDP2sNV3dvxfm
h6dfBD/DJDln3of7Un9E/RP1S3vE2nCcYeueop+231eC/oHaD7Unakf+cUuw
bvT1LsE6cvxRe+STxiEal2g8onGCxg0aL6i/pv6b+u0Jgp0SMA6f2BLI30hz
S2UC/P7oY3/k7VWgPY7nhU0kzj9Qe6b2Te16H58exotrkumYB77cXlEM/dD4
JDwoTk38S15tOYeDPORY70G9GtF7Fechqb+j/o/6PRpfabylcfYah6AezPV/
i3orH1CUDv1HV43G+uf6h434fKlRL1FvizgxyK/VfGfku33dIuR5nvB8fA9K
0Th/JeYP97TuJt3mXm+7vyoR8Nbl8IM+d68wQcxDnJf4Y/0O3+e0dvPje0ae
lxfEjztymOMj+0UBt/Jc1d35tYipu7xTAq4T5CSx/a519wJoD/+VVrdKi8Nc
mLX2LeDCWW21mm9LGQOfNe/hevc6r3eAvsm1H6DdYo3Q9NqDjUxt/cKlgGp3
u0dOGvOScfnpswCuT11bNBswP0tEENodM94xcO2TdwrbZdPqeKD9Qs5x2yui
Hxg5XTN3wLmHvGWWH+EwSzpLnOF6S331WsC9zkGq0N43TCEArncptBkDvi0R
koX2HxGNh7jX5L3eziOAUUsLegy57aHRTW5wfZK35BjglaE2/dDu5b0c5xn3
suhjGoTzDw4rpyI/98zWID8L4osZ4OeYR6sYXM93OIr4do67HrQnj7/+AXgR
kf2NvN2dveIj8CM1txr5EmdRUzS0Htovnv2O/Phf/TwLUCWFCAAPc9KPIS/7
GFX8+4yv5shbTEb8PnhONcHIrYC3RBJF4Hm1oroOwHUaubsNsLtkzzhoXzha
LhSe8+JInROA/R0jmuB5bxxc4wvXtqssgwCHfBTphPZH8w/M5d6PePqMXAg4
UyutQ5F739leNTPh2tTGVh9w9elHvDCeMnNx1DOBr9H43rDe6j6+N3QznCkJ
vNjy24gAtoraoV6d1o9DvrqMh6E+XtZfOx/aF93rQt4qHkjVAvLwK6G+Ce6S
QX0byuLUkLFvoF3t0Cw94MX2xBsdwO3ni/lhPCqyzTB+5l5Dri5gmKcQ6tWa
+zuRn5DPU6wB59t3SwM/j5Okd8N16m8Z0BfG6o0eP7SHWzjB74kdX2UYoI3l
vJ/AzwnZUNSrLYGj7AEblqYLw+9HPtMFfSZyU+TmA7ap2HUCbxWPOrA9Ufv0
HMBK7xl90L4z+SPYF9n/NRD0hMh8nFoFz7XCYQW+R1groofvEYIU6qYDn77m
l1APy393Ip92cs1ov1LX3uP1G+U0/PtqYR/kOXipEPJpwvMT+Vx5uxX5dLpT
jzyOC9+CehgRtbAG2rvqReYBXz9Y3NyUNQp4y+4IRf0z6quH8TOdCm+QT4+T
P8GOmMrUdifA5rBR4sDD4rEBDnDNefAS7bV4xxm0x2spoaC3JLgvDPXufWX9
UGhnEqZj+2KNjMOAYkNssD3N4gfoP2m9HYb61tlUgHroFzEc+Zxw2RL1lOdl
M/L5dnh+PfDo0iSNfEbPlK+A5zIKqobnJbyCYxF9ShY+h/ZtUWL4nsNy5Auc
F/HkROD8Em8BvgdhboZ9Rn2WL3bDedHgo0dQb0V9fw9gx1P0A2pnXJF3yUhj
9A+mN37OhfYY0VvIf53TIeTfM0UT9daZ5X8sy/95lv+RJYWgN8zx0huov7LO
siPQD4TcwPanzitRLnICeXzQ3s3ftgP43WGavAvwdImMKPDmOFoQ/eZGFnXs
dNAPOHefAj0nFWUPkO+xM3hHQvvkHcEoj5wQG/g9kfCMGQbtEeMZuB8ZumQP
8v39gXY38Mw5043ttnH7wb5Ix+NQ5D80sx712W7WNeT/6eyNr+C54v78Qd4L
ou7D85IFlpteQPvrROfxXL6I/OlVwoCTst8jb/u2FeF8yh9/cZxfiR97RgH4
p/Kg8qFyERQqRN63271Gf7J+9wu0C9W+hSiXzphl+PehI1+iXewYxP8Fln85
s4/YvrBrCbbzrPiO8mod4Yb874y/jPxr8B1E/t/4vMRrilpNesOhPePoB/Qn
W0Mb9wAuf/FmFPB5y8QK5UTR6IOWELRPf/lqP/CuwmJUlRDy78ZxQDmlfC7a
C7hmGK8AtN8csEfC2iPpYu1Rz+4AyiM75DnKZ432nH6Qi8qrU8h7qegI0EdS
pHauEp4rpjQV5XI8IB3/PjKpGf3PrJErgTey8Lwt8EZmxbyZB7wZsfPadJ6b
zm9rZHajXFQWFaBctEYaof+vqjqIdqK8VwXl4jWnAP089V/Un1E/RuVB7YPa
BbUfak/Ujg43u6N/55nchvZSkiiO8YjKicqNymvE9/fIe86LKYhi2u1oF/Sa
/p22+5/6grxTPGyli/z7SRbg9UutXSgfo5RejBd9Wa3Iu2iCGMphW6bjELjv
8Qtz8LolbATGhevRTiiXnOeNyP8dr0PI/26fDOT/Mp8U2lF51kZ4btKxze01
tCv/eQ48kmz3DygXs2c5KJdxq7PgvQnpl5seA/im/QbOm5mz8YPGExpHHkXP
RrnsFNqOcvl6ow3lQuM0jds0XtM4QeMGjRc0rtA4Q+ML9VPUb1F/Rf0a9XPU
v/3NLhzmbkH/lSXfj3FG//INlAvlncqB8v83ef1Q00S5uLVkohwOef1GudwK
XoPyoHj5FD/aUbBbPNoJ5/1D5H/Lrs/I/7Wxjignjr4U/n3UMz5slywKQbn0
j1YAXsldo68ol+9XA9FeQnoc0F5StKxxfpjml16D8kyaR9K8kuaTNO+keSjN
P9dq5yD/qRkXkf+Rbt7VMJ7w6jGYd/ZljYd4yDS3daG9uIj8QP7Vxi5Du8nS
eY32EnkuE+U1UVcL8WtiEOafNH44DoojNN7Q+EPjDvVT1G9Rf0X92vRB/o3a
A7UPahfUfqg9UTsau1AS5bFeyBHtw3SLPPJP5UTlRuXl9qsR5eHO4s2nt+YA
b9Xdh1Euu9bYolzui29Ce6H1Eq2faN1E6yJaJ9H6iNZRtK76p56q40F7Wb6p
EO1lFW9MHYyH1gO0PqB1gcOj3WgPTiwe/FOPz0vzWprn0vw284oEyiN2/FnM
/5eLxEoAnzQPo3kZzcdoXKdxnsZ31b/IZWz1N+T9VnoDykHyck8PyIXGGxp/
aNzp2tuDdhGmH4n+7MStexhfqF+jfo76N6cgc5QHM9UC7Wb8MnH0P/EPrmAe
VvzYCPOyIqFgtJdzysao5xXZUcjbr1z/99CPjOgO5FlG0gV53mW7HOvQcsYa
eTzvR1Df1z2MR95ofUXrLVpn8ZyLRD4f6dsgbxwFHvQ/tE6gdQOtF2ieSvNW
mq+2Fh0/CtcHFcsg7yUJUntGQHtgfwTyGLI8AvX9SIjDH+Cz8GwztndqHcF2
XoPNv6GdxmMan2lcpvGbxnMax/XDejAeZObfQD43mDxB/3Ml0BN5vD7KEnm9
dClHEfikdTity2k9bndIE/JsxnHkfKjzmCdlDPpnWk/S+pLWlbT+pPUorUNp
XUTrJFof0TqK1lW0nprl0ozPP5/FgOQ21LfEzd0GcG1jaYp1p1HchjZo502J
Q3vnfB6BfsB8x/GXwMMMoeI3cH1P8BbWAemGK9EPNLptQV5WWzuj3ukctUQ/
cD7hKfKyJnIS8uS41l8W+SkvsITnCXitvQXw6c2z02D8dD6Czk/QeYnGIXWo
Z54SQuhXr14fMQztl62raZ1N62veb7GoJ3u7eE8BLmXEvkI7rQ9pvUjrxKTx
mVgHOfGPwTro1HoezMPjDENRH2KMdqM+2CZlPIXnDVg7oD+TL1ri30+YuGO7
K+sHPVi8zfpDWv/QeojWQXR+hM6X0HkSOp9C51fovAqdf6HzMXQe5lmfET5P
R7odPodPqArmyaEcXfQjGodLB+KweuUveK7vDh3VMO4qzrUGQP45y1HPZTWr
UI5bRjejvnueO4D1woP5CtfhvdplK7M0wPRi2f0wP8bOixF2nozQ+TE6X0bn
z/6ZNxuIu6Ru2QNEraMr0I7UB+o7IjZQ35FVbH1H9YnqF9UraofULqk9miVF
Yz/VsdLYzr9BCttpfHIbFKdGvtmOvxffZYO/b9mlhvel/9+U7Y/280++zubv
NG+n9RWtt2idNTsrPwF48UgyvwaoIM/ZDzwkVw/o8x5FBvU5NXMB5m+ZnVvs
QK5f50gHYp5WOHo0yDc5LBnjh9K6T94YZ1rD0B+2xDmiH/FPmQLzSMyBXxz0
M7/916IdfZMJ2gz4aocI+lWej0/Qr/6WkfHC+vSCYC/o1bpPP1BP5IJU0V8K
ftZsBz3Jte/Hfpc79uB9lEXe4TiXeuxBuzXSOoDjLVqyezL0vynkMI7zx69V
A/MM5Z2oz0Uxm9CuIvcIoH6OVXBHPxz4PRCfX0yiEuc9piw5jP5w8n4ZrO+0
m8dg/iMokIt+z/mUCfb/JC/eDzCvfWcf9F81KwLiN1HYUov9b2gMRrum9Ykb
W69MZ+uUJN7tntCvs/5W7N/peOpY6P9JVORB6Lfw7AWoK4lxwTGML/pTojFe
O8bUoh3l+9/CuPzwqAj2T7E5fxLfv+XbK7w7MZ7tcwjDPG6HFMG82vWTIPLP
n2WD9xk28xGO/3/a/9/y8/6/1E1ug+o4ys//tP+kk2HIC0XrbV8xz2w+ewf1
3JLPFfuXMLfGPCF17TEXzKNcRnlgXjDaAPunvFCeKD903P2D8tU+AUXMN+5G
oPwZZ6EfGBfKN/pi/+XNL1yxvkkpEIN+qFypnKl8V5n8wbgwa+lU9KMqy6tx
/O+3PUL9XCHvh/rZtLoQ9XO43/wN0G+hwHDMZxZ/OTwR9YfVS6qnVD9bTuzE
/q9sdkE52+VZ4Tip/VN/QP0AtVtqx9R+qV1RO6P2JfYoEvk52JuJ/JtPbkL7
on6E+hXqT5ROKiAP68RfY5xcv8wQ/Qm1T2qv1E6p36F+iPqfFcVzcH6QmW+D
89iTxXfh/GFfeQ3q1ZNRI/H57vS0obwindUxf5ZKbMW85nqXAMavO7mH00yP
7y+gmEjXuY1/v4c/2bkggUUO235atBP90ajSsyj3qOs8+B5k1hJ9lPtrp4l4
H88tS8dD/xqmJ34bqXkXTGUxkO3HM7JrjpCQW8FeRNuCZrr/SEMjEueL+v+g
HroUGbYAz4u+y6Iev7xViPISlYvF/PbEbBm8X2ZNjyPgkgkl+Fz0PdyNnniJ
rrd2/6yjqD0StVRMzP4/3tMlvJPGvO21qQrOI5qujkf7YpQnoF6KmPuhfJct
no0872Tzy5NsvnmHzTMfXViC82KHfZ8gHz8lYoX+63ik9U7mZDRY/PNe1eHX
vOFGKbsLqtj3bDV0H0HTU38Yx+73S4IBrcy8fgAPdWuDUd5xb3ahvmhWLMF8
Uq76DI7HWiQM7WX2IiXU58LpKmjnAioL0N9G6UzEfFUc3xeuKhBikY7nAb7H
NP2HH9r+Nc0D41bnuoue6If6rHnRLykOvEfZvtsQ9XGttD++F9C5G4XyClft
Qn08WLUC/XZg+BXk58fUBLSvD15f0C6M8D2uIfs+15C9f+tf3++7fepGef1a
4Il+649V0nDoJ1Nz5EA8GvoI+UkX0xn6/xIv/nbfv7V7JczEcZBxw9FOExMX
oP9cKW+L/sGvzgr15+Ee217gxzpoPNqn1/r5yE/MNxve/83x/C1e1E3fOTC/
/fMHjkvH7B3GO6o3VI+o/gwZJoLyEonYgf721Iemsf82Hio/o0FypLxQnig/
f4tfhfev43huOj1EeY17shn9DNVjqtdUn6m+Uv2l46H6LT5Iz/82b0PlROVG
5RUn8wTtvED+0IDdkwqMR9TOqd1Te6f2TO2b2jW1/8H2daXcDOOCv9Jn9PfT
rtrieH6KZ0CcJUEZbajXUZPHoB1R/0v9MfXD1A9SvzjYH1L/R/0e9Y+D/eF4
1RP4XtU+LB3jqnzC0e/gfzYuTEf9eenTMOAXZd3RH9J4Q+MPjTs0HtD4QOMC
9fs0DlD/T+OExqB4Qf0y9dPUP5uO90W/M1a7BsezzTsT4yaNczTu0XhH41nS
oLj2tzhI4xCNSzQezZqYjTyYPLdD/1fn0f4d7vt6lVnhcMeXjJ66/lPA6Akn
wnRDvzKxCy0ew/VNebkawFfO+0Kg/cu5ZxojuNcRc77PBdz1QHc7tLe++jQO
rpecSiTw+2kP2o9C+9kOPQtoTyss6of2pIQfO6DdbsK38fH19eTs7LgxgOb8
Lz6ax9QxdZp3+bi/J+OqBaYAzjdo2w2/r/053hmuCwKGRQKalHuZQHub0noz
uBZOWzEecMOXxm3QnvFEVR7uO767bgxgQAMH+3Hdz/sbxlFw8UEzYDKvxWFo
f/f0uCD87o/v61/Qbto6+hC0V9uOOAv9Lt/00R1wmkj/CmjXWL3AAu8rI+kC
6KmwwBraI5r7DeE6brqJHmB0cekWaJ81yQLH0b5/Sjf0/+Kn4kFoVx3l/Aau
p/rrfgecbjg9ANo/LngzBH5f7T4Ux/nkzEJfaL+sXrwU+u0wENsEWGtxeCO0
X/EKtobrxa4PJwPO6bZzgHaF0lB9uD4kP0wHn+NxmyO0i0reBr6YRGu+Xuhf
9KSTJ7QH/jD9CtdHWHR87+sH7bkWs3HcjNg95Gf5FVUfaDd64ScD/cacap0F
uHK1gwu0z4sYhfe9v8AA+CaPLt/cBe1F07cpQLu3Ypoy4HNRvZ3QXhCWgnKJ
TZmLcrjSfgH5ebnwOrZ/WdLQBVjekuUN7Te8duHvGl+dkQaMik/3gPZFX7bM
h37X3Ak3ADw6QxJ5yE4fh8+fPWM66kmBm5krtKdeFsXf8acSlNeDBEd7aFcW
HyYG/VKctLd7D7SXXbuO953eFYTyyavaf+Dffr+gdNRU6HcGi1pvCer/1vEP
UL8papEqbL9wXQx/N0qnANszVjze8W/9T0u8JA7Xa2NfiQJuccvFdnpN/07b
13eEqUC/gr2KeJ+Mh9Yu/zaev7X/bTx/a98+dNxIuL7mpoTj2a8Wsvf/5b50
3PQ56PiTWH1oHaQPVD+ovtB2qk9Uv6heUd6pHCj/FXrLtOG682s16le3x1L0
M1SuCwbJV+75Yx64346E1E7oP3VenBe0U/uh9kTtiNpb4CC7o3pJ9ZTq5ynW
zyQN8jNU76kdUP0f+i15GoxHSThVFnCCx3C0O+pfqL+hfob6I+qfqF+idkvt
mNqv/EC/ZNjAfQjtn/oF6ieof/Cf28IL93twdTfqw+4P9/ZBO/W/1B9TP0z9
NfXf1G9Tv0b9HPVvXUP3aKI8TurhuKYr7UB7p36T+lHqP7Oe5H+Dfi3GVb4H
9Dlw0B/az1XX68I4xoxIx3HWjLbF8dO4SOMkjY/U79M4QOVyIil4Blw3DlXY
BbjuXCPe98LTu1Zw/W1oTwRgpJXCGmin8YzGNxrXTqceMIVr9Z966O8Th+/Z
AO00XtL4SePmyXXHhbnxlVGTrOcFFL2k/wviLI3HND7TuHz/BT/Ow1LcF6Hq
BfOQguJKuK71QEMI7CNgNNtmPYT1k/u85UZCv5vlvkgAvnhPPkP/lEfKK+WT
joOOi46HPg99Pvpc6ad24vpy/Y/3xQEf9tTheRTxjRVjYRyeXuq4LthMqxnX
LXM0S0Sg377F5uMArwdHNkH/VM+o3lF9o/Kg8qFyafm4HvcJMENu47rc2Z+T
cD3qDcUK5MExsR/vH9zwHvdBLP4xdhTc727mNuRjkvWkTrgvtTdqf9QuqF5S
PaX6eWvmelwPbDlqNa5TneK6BPc/fkh8guuJnzVU4npaoXPzcV9ATrIy5FHM
1z19eN/EikOf4L6fWwrwOZV81wxFfxtxCuOpkdBh1BMO32vI40h9Yq8z6vO8
Pcjzh8V+A+cq1BnmQv/rJERxHW/29A24f2HB/Md434wr55HnnlUuo1GOJp++
wH2Xa6wRgvsdzo9Ef7/90SrkOeH9iwX4vFrjMG9ynJhjB+191iH4vIW8H/B5
Nzko3oD+izdcxfXKDkPScb2306/+O9CesvXdWLifyJ9xQsjzpaFf4b5/izu6
f4m/2zSDUK4TSgrwvjdvbMP14X/bX7By9yW8H8WO6oDP/3bfv8Wvv63z///r
vibPr6FcJQyv4fr/m7te4X4li+/zUK4HP/9COVsuzUX50vyM5ms0T/vbfTX5
fqB8P27sRL2aZvElDfp3OlmN9/Uxn4vPO3WaM64Pz8lpFYX7+XRkoz3VTpmP
9/0nT2XzVpqv0nyO5nc0r8tl9/vMGrTfZ2ZGzcB69EsTcV+yxuJtaL/K6xPw
OY233EC/tEBciwP3pfk6zd9p3k7zWprn0vw2rkQU73t3+Xs8R8fAYNw16P/Q
piZ8TrGFyeivdBJOoP/8HRA2BnnO34fy5ZH+hfpM6xZax9D6heb3NN+nef7r
iRaox+ZK85BnGylefF6OniTeL1ysDPch7bzSgzxvGaKI97vyam1fHBdLvXL6
4L60DqR1Ia0HaZ1D6x5a7zRrHf7N9YekqMp+PNw3IUoL97nQOo3WbbReo/Ue
rf9o3UfrRlpH0vpxyx4JfC92KPAPvhfL7jyO7wdTHvJ4vePGp2iLk36AJT19
c4ydrjDvalRRbxVW3US/mG0Y1wj90+enfFAe6PNTPigPb2/PEoBr1/mnMK5F
xamgXBTD4+CavHzKTAAUsTxeCe19006h3uzekD0CMG+YfDu0U3lT+VO5U3lT
+VO5P/oWKQbXq5RF8P6tEk7foX2Rpw3Gv7BuAYg/JO9jK/rhW0mlCjCO8dF3
wS+SGfmK1fD7Aw4M2BFJUN0sBZjTYloL7f0KX/F5hDeH8QN+jz6A962q24v7
gMo3rcT9Iot3VOP+GmoP1D6oXaxdMBP70Ujdhc/rVLwLx0n1j+oj1cPOjVeQ
t0CxFmEcl2NaHfw+9w/mAeR43id5QElLidfQPir5CYyb+dxmNBzQfsUL9AOy
GtuRx3V6dzA+zLH0QT+ZITwJ+cq/Xi0OKBXA9w1+XyAji/pgZhOB8bG78/lP
aKf2Se2V2umNs7qol4p+i5C/NqHgd/D7b1WxIBdyRc0P8grS7b4VeQi63YDy
MjVvwvs/TJ2N91X/PqBvJ37qIp8Csa9xnKHir3F8GcOycDymoYbN8Pujrtdx
nCsNlJHnA1YTUS4Lr/gin6s/lqEfXZ+amAH9RDXkS8M4ygS6Ue5bu3Z/gN8f
Pn8Mx7ni6irQL+KzIxH1f59WEMpxp2Qzxs9mHju87/807vytPXb+ZsiHiPTG
58hnlVIzjjNRWEkSxvFkXhLKebSOC8r9ZEso6kNQ+oD8Jx+ZUv9v/f9vjfNv
cVCt1wjlTbG+9zH6pb+1/61/mq/Q/IXmLUd0XuLvRugfQWwI3IG/p/Kg8qFy
+d8a5/KTuXi/S+etMB8eLfYQ+/cXOYz2/n6qLcbBiLotuO+M5nM0v6N53ehr
Cqiv7mcjsJ1vzAa0d+3t73AfaKKZDMpdkLMdx0nlSuVM5Uv1gOoF1Qdf4w9o
P56HzXCc7gtmof98vdkQz7mwlI/DfNssbTGOk+a7NP+lea/dkLfoj/jl69E/
maYtQ3vU/R6O49TYuw3zPv6iYDwHw+5BFDwPebBkNfJmMOZIA/xeKLYI8g/i
0r5HFrA5fSyOP27tJxynamcUyqvON78V7a4lH/On7S9U0d6HLWvG+ELrAVof
0LpAh/MH6yDOW++JgMHrtbFOscq3RnkX3G7CcVp2r74N/Vy8dA7kQhw42shn
Y2UtPi/1U9RvUX9F4weNJzSO0HqJ1k+0bqL1Eq2faN1E4xmNbzSuTW84iPa+
1Go+yr05ZnkW1oMRmpNhHMt19dFPbs9pfwm/p36fxgHq/zdbZKGfL4/dgHzs
2SbSgvGLrTNp3UnrTVpn0rqT1ps03tP4T+P+qgPqyKOZ61KMn8kh07F+pHGR
xkkaH0UCPwNv5Pq9JiXAEb5j3kI7rT9pPUrrUJoH0LyA5gNbhbN8uXkJKfOp
8wHked6vA/nJ2g+/MG955RJ5BLA6MmQ2tNu0lKH8tueOxziofE/rGd73k70M
XDubyKC/DxxR8QLa53bswOudcgyOd7p/P+pDSXQf+v+Ikqs4nkJHB9SHYZYv
8TlHf9mMfx/fPQb1eWuKNep/9s/H+Hf7dUsa/s2f/K191KjF2I9vzRyIb2R9
3CvsX3e7M+ptk8QWtPfipQ8wbiqpJOD4xljzYJxyn3kb+/kc+RbtreRSHo5z
wyneKnwvcOQT/q4pPwH/3r7WHOVC+aV8U56NgmxRvqINI/C+GTzLMC+i/dL7
0P7pOOi46HjeTg/H56xk0TBMB9vpc9Lnps/7P+WN8k7lQPmncqJyo/KicqVy
pvKlekD1gurDsCMp+P8/8b2SAwzeNwLzK6pnVO+ovm2IPXn2YSSHufS7HPFo
jlF7b2MsYyQ3fFc99/oz73NXQK2OpQnymbHMgfU2MkO51+oCk6UBD+tJa+8O
imeC5S4dlIPfC+ccAEx+9uiyhnE8Y5awxJvnAoeZ1HvNCzBz075KW/dERuK9
11A17vX+o6WIzQITb35STWTW6vgdvx3BYRJFVU4AFmp7lpZmX2MES4MWtnCv
hQU2LQBUqEjvE1x/jWn0i08XPMdh9u0XuwE444qiXcuOFCZj9gw1U+61walp
ioCMJH9HbW8yk27UKVZ8msOcWn1SEnD4jwlOvRvSmfc+y/zUznCYhNGbfQGH
uKs7jpRIZ57sPTXjbBh3fGXHtQBVVXdGG7pk/se5xA/Zc/byh6R2ZYZwmGdD
29oBn7pVhR5IvsG8Zs/ds2DP4ctjz9/r3mFfFXGUwwjcGvsScNHV3qjizFym
Meuxw21/DlNanG8HaHqi6+yaabnMmxnj+nk8OYxEaEU3oG25k0RafT7jVTJU
avQB7vMXCAgDnv8aFlosnc9ozuQ1L7XjMDXOwqsBGQfhaqWEu4x4keanufYc
Ru+gZz3gk7zlizSW3f2P/cVH2f3FuZeShD9oc5juR0MlAC8e++obE17KHA4N
m9Ge38j01L7WBtxuL9Btf/s5I7fZsPxa9Edm9er9rwF/etRc+FP3nhGy3upY
z5X3+yW62wBtqht25dyPZ6zHXPerOc+Vo5rwUUClaR/d39xJZMya5qkc5co7
w6YaUbUrP/vouOuMUNRL5aKzHIY/fI0KoLWIlH1/bQoT3bKxzoor1wfnOB8A
dXcVzvken844zF2v3xXK5cdTYCFg6acNc3ifZDK+Ilv9hx3nMGWT9hwF9Km9
238r7CZjy57TG8We03ufPadXeoWO6hcPDqP53GIy4Is8fhf/pALmW4JD7Yv1
HKZxkUEN4K2GVeOzbYuZIqlXrkmTOMyJx4IugIXCm26cM3/4H/uL57L7i2/l
tY/L5D5/3apiMUA9eacAs+FJTGbGmDEruc/Pny0kBpg2y7p84fbrzD11G38P
7vPvbTMJAtwiO6RrtEkqU3kp4sP3U5x/8MYJj7za7+nMnLzkSRbc5++daKQI
yFyp3Hh7WhbjrqjyjucYh5GbH/YG8FV7WP5yiWxma1rTh+uHOcyEOI86wM3H
5ght7b/FHCnWKU+15DCLL2x4AmgrWDNPRuYe83WZvs0scQ7jsrx9PeCXutww
lWePGD6rM0ej5zQyEs+PBgKKcRZnTFN/xcwlqYaS3Ofp7J64FHD9mCzB3uLr
jPChzmdq3OdxnGxTAbjKyFJIuiCVadlKxA9zn2fjqFBRwNqKtK+PdDKYD28c
32Se5DDHb5VUAa5Iz//pEpLF3C/S4PsdxNUHFvkXvuyvjMpmUpLiq6t8OMzs
URKImUdjJc7ev83cHC4j2zOcw9h5uMoAyhVYS99ZVs7M3C/ruKelgXkhUrgN
cIFAxGq/ZVXMx/ZVI95x/cW91M+8gP6ui6Imq6cx1pscfUW448uMDPQGPC/j
m5XrlcHMPf/GYSR3fOanH9gCxsU1lU38lsXoznfrbQ7kMGd0fv0BzJRVs7JR
yGHiI/KHd3lx9eChtwCgfsHeSzdD8hj1VnulK9ENjMe7DZMB3awff5ezqWE0
2PnYrex8rDs7H/uJ3Tdqx+4bbWf3jfqniYE+k9syGaDPRFE4YTPos9SGIrmr
cE74xSAFQM07YX1X72cweyt/FG46wZVHdc89wJd8RjefGt9gHkTG368M4Ppl
s4YHgDZ8h6xqEnKYu3cVdgoc4jDrNn1GPJ+1e2GJ2R1G+PhKxSnd9/7BEI5h
4HD5FsaJjYu32Dhpy8bHFOXz+fbRjSTAacgdwGA1kWd6jRX/sY+Sn92vcf6W
Qh/XP5Kjje9/Aw7JdhECP7mlzgH8LTGsUgB/S6b0G0eAv83QDv0J/np8gxD6
75B8A/TbCzwnbAb/O2GIO/rjI4XmZ8APux5cLQZ+VrKzXBwwPC33OPjbwfsr
t7D7K8U3WFdz/SChmLE6aB/4w6xbhTO5fpNsXMED/pM8Gra9DfxnSucQ6wnz
OMTnWI05YP2ccS9WvnnAZLHr2xex69vXs+vbX+VqSnDHQfpCu0UB/ba5BsN4
Fs8cDeMm8pvD4DlImNmycBj/ly59eE6SaO8Ez00qPnw7Ds97TEAa49AoI2uM
S60L2jEe6ZVcx3hzRm42xp87XjMx7lx7kIVxReyC21rA/b0fX0N8Gbw/0ZTu
f1/zaMXBN41kZH7KKsBM+5UjOSHPmM9tgdNPLuIQacsURNk9d7KG1txnvCZ/
EOBz4pBJefXDAYuq5zoe2ljELD90yY2rTyRG2sMVcI7saQb0asdKvjKu/hFi
GFoCaCGtYQF6aGsrUsLVV2J4uQn0lwQy5zJAb7+Z5Shy9ZuYVkdMAOQYfOkB
PdcLmqAE/r1l+FY1wMae7a5gF7M5ydXg37Pu8b0D7NPrlgQ///CW1g7w7zPe
jXEDbHc1SgM/f4Hd3yfH7u9rY/f3kUeev64YcUjIIssOQM8zDaPNqkqYmaNs
Vmxy4RBtFqf0tt1xryhkRrZL8XPtn4xicV5PXwz4ASmNoD6uvyD682p+I8Zu
tga/cfnrZfAzpIIZYQf4Za5OKfgZ5tU28EtEPjkM/BJJtC1LA79U/MVQgOu/
iJvzz6GAM2NOnQc/1v+5pgz8e1PX8eeAkgk8DPj54BfECvy7+sTpGwGddOae
AT//KGjFEfDvl3b7BgF+tJ6fDX7+uU9hTYwbh4zoVKkE1L4WuWTtkkKm+Jhm
Ddf/kkdXz1QBTnkXLwZ+mPXXhPXfpE9vwG9X9kwGP0+mpY6sBrSabdAOft7M
eJEENx4QqaMiEBeIuJBBM8QFAVPBF9z4QbaoGEE8IfZ2R8dAHJEedd6IG28I
r9+cJYBzj27mh7iz2WOXFPh9onZnAuDWlbly4P+nex9B/++uOnIr4IoWKXPw
/4PPyQxiz8kMODYf4iV5waeMWPvdZBzEzUuCZW+58ZVstepAdFm8/A7E2Xq+
XojHpI7F9lhNjMuvBuI3YeM4SWHjuOM5gwBuvCcPh9gFAvaMVeqGuF8z+eo4
bn5AmjwPCAM6aD5/AnnCx5dzRLn5BKm56CMMqGZs5Qd5xc8pGxQhfrTIiKsA
2lmUtkAcGc2+j4hj30ccZ99HDN4XtozdF+Zp8g3jiPfrl2A3xE/MdwvYy3T2
fMv5g863fMmrBfkWyX6TCfkXOVR9txfyrkO+XpCnkVvxP/UAnxhdmQl5WpCh
OuR1hCdNGfHtBj9tyOvmfPGEPJAUF9yAPJB0jXPbCHlg1sJwZW6+SD41HlEF
tO/svwl5Y3KKxRFufkk0pzj6A9YKO+7CPDOuBfJSstEzeysgEXDEvHRKxdGd
atz49DD6dDRglfjWMxCn6tn69DNbn/5g61ODXL5ciE+uoZfvAt5zXvII4tTg
fWHH2H1hc3+u/gPxSfdhWS/gotSbo8CvVhjIYnyKC3LGeMVbvhTj1OBzLB3Z
cyz3h8yA+oQ0erVCvUJO8S29CHWKkccaUW6dQ66d0JECzLNq2wb1zmKH7jRu
vUSYAw+hbiK9PuLroG6KWcuB+ovMm1keAhhuZ3EX6q/mk5ehfiPyd1dDPUd0
4/sqoI5Tzpskxa0DSXvkellAFRG1GVAPmheWQD1JfDSjECuXR3+HunJ/s18l
xL9bI95+AHzY5+UKcXDGTjkdiH+bIrdgPNxv/PQzxEGzaWug7iABm15JAmrF
2DtD3eF6ZmIdt24hDxZ1NAGqzpCfB/WL0YflIhD/TCK/SwI+fZYRAHEwsnUo
1FFkQV60I2BM0OMwiIMVzuEY/7ScpTEeNqwQDoE4OPgcyy/sOZZXf4pAfUiu
ykVDvUgEwhq2QJ1Y4LRSmVtnkjYl8cmAXpKrfkC96RmfyXDrVWJ6a44eIN81
7x6oWx1aVKDuJSkGijyAjgui06H+zZbdBvUzuTy7HeppUqkeHgl1dIBmrQu3
DidlsT1Ql5N5HWaxUI+/OPBlJ9TnFE8G78U6PWaZiYU29/qVkLM5oGjFTDki
H8/cOOXkuoVbd0V4KLsAPlzwyiA6L4FZeqnYdwu33pBWyjgCmFCsm/YtNIm5
9UZn+mRuXm7YE6EBmCY//eaalOvM+F75mrPcvPy87tUXgIo8ntfzZVOZfZz6
nTHcuuvTT14XQFGLk6crPNL/o15+zNbL4zNWFm3l5lUVLu13AGds5rzWNc1l
RuqYkNvcvGqfUMctwOuPKowcqu4wv3W8nYx2cOtqng/OgHGrfVythxT9x7md
u9lzOzdWDtvWw33OiWNStgPyLTlrXRsez9zbtO+zDHwXhsWMljVbrfUTmbUP
VQVGcJ/f49RUxLPjdT0maV9j4hInPk88x+WFRVEZ82UKe5MZw8XfrT5z837x
El8bwADxRNcc2TQmZxlfTzw376844NgHmFB5+EjAhAxmw72Cwlxu3fVrWSDi
WM1gnV/tmf8xP1DAzg9IOc1abLqPw9xNDtQDzA9/F7J3UgGTXruaA3X7hiaH
j4AWexfqg/43HjtlEMFwmN9lfQsBnaqibhiaPWCmFfk9e8F9nhbe5y8BP/qN
zxItS2Sc7kxiErhyvWDrvgQw/3aZh+Xra4woEfumDM/JYleovMM3vRSmcGHU
DB3uc/rNltIG3Msj2vxyTDozjil+AnXC88u25YA23QWaOtw8Kirx3nJ1bp2j
u7jPEHByUWvu2uos5kaRSbdPMDevev/tF+D1ctdx6lbcuuy5ZdTpdRzGsiwY
cfZX/YpjJ4uZqUOyfkeochgVxZI/gEnZuonbnpUxbeu1pi/hjvtgh/40wN/D
XHyD9l9n7p8zP3yVq5ch6YlHASP31edmCaYy2rof7Q5x9bLX4jii0LIMmYcn
0hmVubM+wvwOxQodv+LaHZnMudbmc2FceZxnMeaEpFhCwQ1GxvSAUzW3zpHf
orIV8MzBKkW5+BzmjJaAra0Qhxkm/XIToAK/85V2w8eMP7ufUYTdzziL3c94
eOypc9JnQX+STgPuCp7I2f0ylfmx7lFTAVdv1O8M/wS44MVdzu0xGcyQtljG
h6s314OV5gM2GOZvPSSWxfz5WpZcz63bdW6uQ9Tw+Kj8+epNxn6fwLqR3Dye
4p/Z5oWtbbnMhCBnzGOWreIg8h3jXQX5zHl2/+M6dv/jYXb/42qTr3d/c+XK
761eArg3NoUTfyKDGeG35d1Grlwfb3v+AfB3YI6+aH4W47/g7nF5rlxnyNYc
A5TfsYqMD8pm3pwMeSt+mMO0ZfdWA5Y3PV4YxdxmPDpnqns5P/8HDZa94TkQ
+I0xY/f7ebP7/+zYfX872XMS77PnJjaz5yVWn/FZxLUT8i1m90JA/5ldR8Be
pFT0S2dy61VZvoRHgHVTRfdd3nKDCcr4NseEW287+InpAj6XccnScclh7OK7
f/7h1tuWzz51Ao6wl/gtdTyP0WTP21Flz9uZy563s0QtQODY9npC0Xj8Zc7t
c/XMkBsD+xLF2H2Kduz+RP+FhnZc/SDaa59uBNw9NvAS6Mng80jT2XMpw531
C7h+kMwLnJAHONRW0AD8YXXyCvCfpMxXIB9Q58bCF+A/qT+l/pX61ROn/qA/
vXnJEP3rm65d6Fe1xV6jP50nfQD9a8XeUzvBrw4+BzWUPQe12eQLzPuRV8mv
MV6v0R2oW+UsJ/dw7ZNoOrwHeyVd/rExYKd3VhhGc+2Z9EunXgAMvVT1DOx6
8Pk5r9nzc35W+P3i8k7iO7eBHMhP/o2/gP9mo9vzuXIiFzLM5gLWyZxPB3nl
qKc95sqVXH6i/wBw7djYPSDfNK0HDPjNLwmt6Ed9rzmeBH2gfpP60bWs/3x5
YOMi8Juf6+SXAG66f+km+M+K1DK4JseuzYG/kysOH1Kg/bnTjwbIPyimfeFn
oJ/MeRY472A6pgDnIeaYfh0Ned0nkwO1XL0nS+rEQP/JvP2BeqD/IYLzQrh2
Ql6pOIG9kMkONXfAXsZP0azn2hX5FjuuFnDqkjUM2NeMutH3uXZIynaJgl0S
Xmv9BrDHjx8sz4PfVJHaeAlw/rtNlcDzlJ0nu8Bvqmvw9AFeOvs+HuRiJHzM
hStvMrpGaDtgi/z27SB3uS1iWFeXRvPtAhz6IWsB1NdbBvwIodjM+hPV3ZdT
uH6HLJbyvw4Y+i0O/c+Irfv1uH6KOAusmQe4U18V/RWvbyH4NxIbIwP+jQzX
kvkI/i32/PXzXD9I0oefCQd0uGL5Efyh9RIFsBPm64VDYDdM7+3tcWAv79h9
uMbsPtzv7D5cruOHeT3yO0cO8dicAhGoK3dnxW/n+mvypVBwGyDnQfhE8NsR
A/6dsP6enGb9PBsPCMVHbFywHXpoMzd+EIVlnbaAI7p3SEMc6Y4p8OPGG7L5
5eIjgP0JBTch7vjVrtbkxieiVK00BbBsx15viFNDK045gP9d5XNjO6BItTL6
4UZ2n28bu8+3jt3nO7jeDGDrzYNXrbu4cZRYbmhGLJUzHQPx9PCfRUbcuEsc
PgZD/CVy1cduQvyd23UF4jR5MfYkxG2i9SVsGsTrooH4To4MxHfixsZ3fnnn
r9w8gMiZFkI+QOQjN9tDPiCS90ePmzeQ7GvnFwEuqhHxhPyhSuHqC26eQfLN
s58DRsblpkG+4cZZIQr+/XdB+Uj08zGFI8HPq7L7jjex+44t2X3HVux5sLns
ebBD2fNgd3Q6gD2T6wuDIS8ipY+z/cCuB9ebGmy96RTM7YOrf3dSHYoAZVSH
zIS8a1/lkt/c/IzoNqoOSeCi8F7tw5CnBZRqWHPzOVLduhzyOnLPYqoj5HVZ
Z5Ug/yOeewbwkPJFPcgD5aeN4efmi2SF8DJBwK/LLDBv1Div1MTNL8mmP+XN
gFbGGfaQZ2bLzIW8lJju9IS8lCh4fbWCvLRyicUoiB8nU93GAm5M/1MLccSE
3U+tx+6nnsTup244aQT5BnGtUUQsMDeOBLsYfJ5tC3uerblhJMYP5ezafMBj
QjYLwf/T+EHjCY0jg+tNB7beLJ6ZvCMG6nC/hW6A2xW1wyHPf1l07zW3HiDV
fnyvAA/2uCZCXfBrx51p3PqB3EkR0wLsaVybBXWEzy2hw9x6g0xtc4K6g7j1
bEiAumNBmgnUJ8QgahnUK6SwrlQf6pTfIhJrufUM0RS5agnYNXM71jV/O7ff
w/v0BvAXVbr6mwGv/MzHfCwx3hvP8b5VPgHPxxZ2FMNz0XvY/YGP2f2Cpew+
wb+tJyzf4IVxkX/qUoyTd7LG4LnWqux5/nvY8/wt2fP8OzafsAc7L+JNwfcI
3gJzLcDe5WOH4frYFetacJ2O8MoDA+tU2X2JD9h9iqHs/sQd7L5Ej0H70yWW
qOB47MOjcTxaO7owXl9yzsHztYXO2CAKSK5c+m/n/FsxFtPAPtsk7dBe+80f
DQc7zcT9mWsLvrD7WHvZ+6ax+x7fs/sgDdn9j39bH3j73UE8h791TCB+l8bq
pKgmjGfwdxtj2e+O2TZvwnPjsxMC8dz4R8JxeG78374/KBWsj+ezz29Zh8+b
WyiA8n1tIIhyfD/lC8pRY1oxylGaPadbadB3BD4KTRwDdugsYS0KOIlYvwZ7
1GMu4HN9C7+Ez/XYfhJ+Z6Ge3f8ez+5/V2P3v2/etxHPnb6s+gOf10NUfg6M
J1v6hD3YbWHt/PWAs49XngX9bBqbiN878Swwxu+ftHg0YB5YMP/iDsjP5hx+
AfGaORo0xgXiteYrU3z+17nH8dxyp1Dm2H/Hz0WWn9erliI/bxd5IT8VC8zx
e1h/+86g+LK0uf1SqwvGsfh/+37B5UztWZAX8q/Zi3mi0ej2b5AfViReQz++
LmM3+nVHQzM8j13NyhnzxrycZ5g3rjqdfBHykwQxHfRjy4+/QT+mazxw3viz
gXzrHyRs3uXeVoh6sni3OOrJ3eNvkYdVch2LIZ+bpZKJ+d3exeuzIH+TfpeN
z+u1dSI+7xm+43iOOsOzAeW6r+cDrsP04CTgPoXBdccPtu6oVHDC/PDh/gDM
D4flvU+F/uNln2I+H2yhi/n8Op6VA99lOHsqEvIzvpBFFwHPdk5+AXnaA7vF
OP62hDgcf01fFOr5nj/eWPfWKygi/lzREgf8aD08guNP0l2P4z8cKIPjHymy
ZOC7DD2P8Zzz2Glf//V7BzJsnr+AzfOD2Ty/dGkL5l1xN2Oxrp0u3o9514my
bvSfzrEBeN8OWVvUEyv23IBD7LkBKey5AX9bJ1kq9wf1IfbkYuTT6l492kX7
9Bco9+HX8PsGRM3RCnmTXB+J+j2xTBH1+Y/RwZB/+95BQspTzK8upfVgfhXt
tckE/G3oKjf0s+cr+XE95MmpYTieVr6B8wR42fMEktjzBFzZ8wJWDzo34M3Q
AORXvzgD+fZ5rIn6sJX9HtwX9ntweez34I4dtkH+vxvHI//NgcOQ/x5Nf+S/
QNcY+R+apIn8M3NfoXybflggHo6RNPi37yM8qotVBn89KWCFJvrv/Rt4wW+L
snYrNch+NdjzBWaxGM6eM/C39ZPmAYoop+DvH1FuAub28/+7573BPi9v7HKU
Y9j7xyjHtZ5haL9/+/6ChkvoMnj+rNHTVgJerYpA+W61acXvcdvsCMK4Os4r
F+W7hOcsxq3UT7guldlRNRq/dzCP9eMnB31/4UjEsRHgx9UnmGGeNezG80bw
547bJuM6zISRb/F53+eOxHWng883OM2ebyDdoYvPu29aBz7vGa1dA99rCBKC
eR8SPrMX8zGNJp4YsJdftvz4vO9UuvB5RxtI4/OmJAWjHX2UlEa9Pfe5CL93
c46Nr6P8BuItjbNy7PcafNnvNXxhv9fg33YG/exWyYnod0U+FKG/Vc6ZhvJ6
+7UL5XW5dwj6gfzIvG7ws3zh83sBt7zdcBn8SY9ZNI5T+8EOHOeILjO0uwNZ
v9Ef3rnpjH6+U/HKdcwTBuXn/Gx+3j19HfhbUif2GPFeb/J18IcnX+N3NUhJ
TQbqRVSJFX4P0ZnvLvbzouMM9iM8qXz2v32XYbodwe+qT8nLxe8ybO+1wO8y
3E/Jw/N244S+Yv5gLKWB54gKn1N8FePGYd6QY9WAvw5FL4f3j4Pzxp1s3lh6
aLo0vP8LM1uE7wHDo47IwHtA91YjW/AjAc0SroBGufNMwZ/sEfhVYB/dyNR0
HIT3P4ykMaca3vucfLP3XXZMDXPQ3eMXoHHTNusX7z8z0ew+lE3sPpSn7D6U
vC9pOK+kltmC80xJ5VenwviXjfoJ74MZ55EBxoAXntYWwXthi8sCXVeMOEyR
i9lPwCnly8XgPfLg/HMjm3/O5/PH9SLmYT8V8L1ffWcHvO8Ty6v6tTOsjjHg
1/0GOCdmcs0rtQYmZ2qJgFtYHfkdodfPbSe2a6tuQ/tCdl+QIrtPyJ3dH3Tp
Zqwat19y1+uxKuDxZwkvoP/B66lK2fVUx/ZMw3Nfh0sG4PMq5XJwPu1v3++W
WRcqyOfEYQxKx8B6AKY5T2Y7rAcY/PsY9vdKO2donlzEzRNc46YBHrzpfAvW
FYwZxbvy4JtGxsBE2gQw5pCHMKxDEBrbrpsTU0NGxDYKAuYqVs8HecV4EFx/
kifqj1gY7lwK8vUNdXfm6gERyNeDfJ5ETGvSA33I9m+R5+oNudBwVBJwxEab
caA/M/rfwntu5vr5d7juKEZLXBLmJTg+rTjuH1YFqL8l2l9U/7vvDtD1JCuu
zq0CPVZL834NeFEq2RD0eendX5YT5nGYlgxPC8D9HrrVsG5kcB54ns0DtxvU
wfwdE6OxXAvwt+2c3+A3pitdwfUo7S8k8L1c77lU9CffJV7C+i2iZDrJH3DF
kM4UeL9/LljVBtapGA9vXwvYpWvwFO6r5VUC68CIwkXjdYCWNff9YZ3Ai9su
MTAPuJ7HJwLwwtK9zyH/iak+id9DDZcc+C6qwRpPPIe2W3khrPdg4oLLYF6K
UXmZj+uIUnVl0F78E2IH7N47E+VeuvyzKaxHiclVRjSQdsJ1j9+lJpqA/fBd
OIF2dOhSaD7Y0eDvBRxizzm/R9bAOg3G/LUBrNNgrtzyEgL7Mq0dC3rAhAcI
5gEqlH19BfowOH8ezebPR9l9QyvZfUPP2X1D89j82ZLNn1PY/PmE9WTQT7JN
+xriXkNfAdDPJjMG9Jlc1ZZWB/T1CMgAfT6tPmdn0iQOyayNhXWGpP2DcAKs
P1lU6wn2QkrkzXD9TNyGtQ5gL8cNA2Dek0z6tgHmQUnK6/sLIH9ep1GO5/8r
pw3D8/9XJx7Ec2s7p1TCfCbjPUYR5jOZ2I92IjCf2RPdh3Z7KRK/G8DYdz5D
/uWb7N7A+ph1Z1zeAm5LTRGHdTKZtYqwnoeR2blvBOCQtRZov3ohR3CdpLbL
E1wnqdzjkgrjH6KfDOuBmO9CMxBvyvKj/Q7+LsAs9nzCtVEj0a4pGsuZjQbe
EtyLf4Jfs3DuaAc87vfnFfixlew+4cUsTmH3Cz8Y8w39V/iZkkmAaU8vN4If
G5z/f2Pz/y+9LzthHc+XqN+4nkcgedQY0JP7y4pA38hliQ4jQOner7ieZxQ7
30rnX3+w867+v1fhObBPnpzAc2FXrlWXBz4Hv3eYwb53GNyuw7YXTpPF9Znv
Nm/F9Zl+n9vmw7od29sZYIdMYmABYvqcpyfAHrtMemCdGaM2/poV4Iafyq/A
fmXvxgXAOh6NoGJcv3nizrcssPf8mhBc9+ty1Rf9R0tRTQf4h6HsOf4Z7Ln+
cux5/mHD+OTBn3qNfqEAaPVBYQH41SEVD9FvbuV5jXgtYPQy8J96ByUg7pL1
ptEQh0nz5vXjwX8Orl8yaf3y8j6uKzo4cQKuM3o2tR/XF/3tfP4Fwn/Q37Yb
X0K/YRJ+ahp+b+iXHfpV+VVz0K/eU15kDP0Mro9C2PrIRuk65gn6v71w3ahc
8HdcL/T2XR+uF6oNPIfzPIKnpFbCc1knr0J/4RnSDusYmS8W09Bv6O6rEeLy
8g/qGDsaAD8+7D4yPnYf2Vd2H1k1ew5/EHsO/xL2HP5l7rrol3WS5dBPh+5Y
lg7yus/uK6Nox+4vO77tLfpnj6G1sG6X2ORMOwb68HB4zFOu3hAlxWGPAWdN
KZoL+nNn3I6B88HT96F+luySHTi/vaYS9dAn5CHqoWOMN+YtmrkTMW+p0zNH
nHJj5l3QfxONOMxXRswtR/96ZFefCNjL4DpuAVvHaYTfnoTrk+6UKwNWh2z9
Cvaoe2b1D7Dn1j7BNkDB9vg3YNctO807IV+xOaveDXjm6tjn0P6RPddlxLeB
c13a2XNdBp+Hn8ieh/+kbibcj/jYZCPGhX5rgPvOzDsN6/1I4z1JWO9HLny5
lAT+anAdlMPWQdXfO8EfkhoWc8llUfCH521+IJ+NAR/Q7+5KSkJ/u0X/E/L5
Juwu8mn58xl+31xrSzL6zRVFn/kBv+55hf7zqAkvxAPmj22+BqDArcbb4Cc7
jt3E/EbB6yPiuqDvY8EfBoi+mwF26F/3Ux2wUEVNB/TNd3QT6Cex3CcO+SyZ
p77kCeingbc22ufoto+Iiqs+GYI+d7Pnz4ez588fZ8+f33hsIqyfJm0T/MEu
yN7rIlJgF0y/EMRj8kBimhlgpEVnJcTlwfUgfe9Z0b4V33c0n/DG9x1PDl/C
9x1/+z71N2cDzHt2e4uiH3tjF1IDfiwsJ1wT/NTnX6WQzzB7XhrjPoVgy3eY
5xR6Daw7esj7qwXaf5TUov0ss/qD9tTbeP4a2NHCb2ehf5IdPRP6J+IrWnBd
rqr3O7Sf6S8r0Z4inFzQjug6Xbpul67XFdm1C+Z/yKtfnjD/Q+qeXsb85/iX
FwPf3zkrhPE3P10F7etm3NLb4C/IkkOYd0h0uFeBXFay+/4esvv+frL7/iay
deJhtk5sZOvE/FwN0ANyVdgS198+Mu4RBH24Fbsd84nly7+A/hCpuU8xr3jZ
+MMZ9Lvh0RPU8/N5FxNBz0sUjUH/yLGsIERhxyx70MPF56ZgXvHtRyXmFUdN
0+ZDXhGTo47PZdlSjM/1tPEpnvf+o+fFF7BbNf3aRsC2FSO/gJ2msufqXGbP
1Ylkz9Vx368O6xTJsKsPMD57L3F6A/Y4uA7lY+tQPYWNGJeFn19FfDXjviD4
mRk/TmFcNrFfYIzoGnEb/FLjTFxXRPp3FMJ7cBKRKo1xWaMqHMdvIWuG4xdy
46C+/VlwbRrYT32brSbgmY8Ks8COWmLVncBOjPYYwPoK0l6SgHHtwdLRaA/X
p3ahfTx8Fy0GdjG4zv3B1rkPvndDvUpUjVoxvu2sCsa45nnWAdZ7kSJZdzdA
Qe39A+vBvs7G7x3zlC9IRfR+hHWxWdDIXT6wb07X1h3wz53IjlfGVxnTgXZm
20A708u2j5HfUAF+X7l9Jqz/JT++teL+Do7wJdjnQqbenwv7XMjI9SKY10n5
HkK71up+i/h5Z9OL/86uabzWjHiJcUVAowTyE+IacAz7P6Cujf6x8ts1yBtJ
hGamGPRv/f3eSui3aEegBSDHrOEl9D+4znVk69y57P4aT3Z/jTa7v6bk9YD9
q63JQ39Qu9C/C+zdrWg3/o4/vgbfI6+/vxfnLYPZ9yM/2Pcj+9n3I3/7bt3f
zi1/q8I//P/0duZhObXd30clSjKEMhRJQkiUTG1DhjI1KCJDoRTJlFlUMpQp
RBSZx0ITido0kCKilLGEKKRUlFLvtZa1nuN+r+d33cfxe/94//oe976zr3Pv
fZ7rHNZanxXgVijc0JnaGHTr+WE/4NzpeooVxtm0fFGO9dpcbp1Th/tM2VQr
d/SIfeKogWu/wTlWBfNLZdRr8yrC+haC1+A+uB7WjXuo8G88c63jfhZeS7LE
Ns9KR4OufxNWu37HN+G3fFvkew5vswH9OFGdDiG3djjtU+xpn3Ke9inSeSU/
Ka/EuCQU/db7PbTwPWXYK6r+G+e817QvOF7sckpg3SQuUbUfD+MlTycZ7zv3
xCH8ncuDmuC8/L/lmU+e/Q6v7xa08frXlSvxuh2tN27TesOM1huy6vIs+PoY
+824wZewH6l53MD+YzCpAevF/FRahNzTxbYz8bsfoHPacDqnjaJzWln1YmRx
xY/uXvnLX9JvjpQNU4L+oxOX8wv6T7rxIAfkJy8ahrzZkXqmmlh3kvoN9yPu
P+VUJ2UT1Um5QHVS5F3uIrdaxSUS+5HxwF6K/8Yb71cRNhv6zdjgwwLopuuT
aqD/9K5vgzzo9T9+4nnyzTYav4FH2o3mI1+aj/JpPpJVZyRVzn0Z/F73T5Pw
99sNs+7yb3zyyIBtaGdvLI51B71gpyZA/zl1fzb64Q5NG4zc8iwxHut3vOr/
HP+9VrAFvDfx49rVjf5fuOXhzYIb4Lv4htviuDa6FFQN36XT/tlYhzF0hTb6
byviU7BeSYbaxckVZu6J5lMGGJRrrE7Mpu8y6KGWIpzX52+Z3xF0wsEAjIvw
2ToMv4vlEHf8LhH9A5T+jWe+euTQseAX3vtxgyX4hYvp/i+bLt0C3ymoKn4D
qNKTiV/ge108fj4Inn++whGsKxL36sIX+F6Obv74vQ0f5SOntuuKLljnKGTA
BTv49/v8RvYAzZptXA/3uUD+3zzy/04j/29o+qyl8D2Gyju74ffRdjSG73K2
ti/ycI/cscJ19zHjR/ieb5NdPU52dRnZ1TZyBmjvygdexPGuO6VDE4t/4Y13
zTfXgvd43klTF7S32Uj0Xyu8bYbn+ClKVvidw9fEIY9X+txGjc5tyqXqRAyg
cwZn8gPNlPIHbWvdZMBRyX+vJ22g9//H9Qjmx7Lau/XF/bJuXDLevyjHB+8/
I/oYzjutiXvC2pf4J81ofx1H++v2tL+WxbveP8zcDL4Ta9DQGXXwvST/fy79
3dx//v2vb3/vf57ur0/3l8UD36hsifMaa1Fsw1fo//9bTris+E9tPZV4+DtW
/vsc2v/60f53Eu1/K75p43hpN/Uytvfy9JMK/8YJ5++0Tep77XC5OQ7e1+Ks
8DGgOcPb4nsb/Oc9/m71uEz83frnJ/B379O+mtWB9tey6qzdGlGF9SccOqvg
+1H30sQ6Jo/fChPw90hdv+rjvMz1wthfd4z8dKGTfHA/dqZoF46vtw4Hx8H4
snjTHX9XvvgU/u5y5f7ICU+leceZ5p3G+//OO0VP2uFzvayb+7duVMKQf+V7
V42f0wm+U9Pz+/VA74WtwfHVaskj/N2PLwZiPYuAAV+wrtBailNxl+Jp+6K9
ckysdj8iwHW2V65kHx+RvWQ7uWX/yqXwXu73W2oNuqSVUiW8n+FHRoVBfs4M
56NXQBsdSN4PeToGZCefkJ30ITupqXsto09Ninh1kc0QfYma3N3kCX9vS7zR
M8QfjSXuqFO6mgKcy3SOX1YNfpynVkMtYZ2feanzKGi3QfzICf+0tx5laVXQ
jqfrBhSAagxqthvu/4C4qyJxWHOJv/q00ZQ90J4Ok1vZgS6fd9Yb/r76+FV5
yI9t9sNADjTTvNQfrgfo+lWAX/Od4oiP/1wfPiVO6z7itqYTr/U0rQOdaR3o
SevAlE07POD31Ewa1oEeuuWOv9u5+Q48H2hfcasXqOmYYNzXyDqnUiEuIWtf
4hO+XN/1CIxbVh6/svJ/a8j/3oLGaSiNU4N3I2ZB+1i7KBz0hb/PIN7vUeL9
niXe79bcRw3wneoX3m4O7fRI0J4M7dRe0K4VjPN+pDzenwkhjaEdyV818D1H
rGoVAPd3JT7vUtJlxOn94+e6FtoRkfHDHXRl0V58b8FJA5rDv9ee7J0O3/1a
Slf87jn0nQ7Qd+PvFUm8XAfi5ZoTL7eY1l0/ad31ktZdRUGtNsPvec9uOh9U
uTwBf1e/wXocfCcXQd0Q1Dk3xACet06loD08f6+i48XwPjLcVk+F69dGZ36F
/XZ+Sic8N9uZtC0f9t2HDlq6wb9P/lPRE9THtqoX/L0J7afW0H5qJO+naL4+
T/O1E83XwqR+4BcTNt4JwvgLoxlKE8Eu1f/4Xgft+BSq3gTadSrhObZnHO1r
JtK+Ron2NbOJR3qDeKQC8Uhn0PUouj6Drs+i67F03ZyuN+xJVAF/v33cbfT/
hykP/QDzlKZXD4xH2V6zC+dZ98gM5BkentMZ/k74fVavGegmI8cS+HvP1rbP
gWcRbOKJXIt7Nae2Qv4a9ydtqX4lizu6mK53pesX6fpE4oux1hFnTFb/l8UN
K3DuiPPC7HYOOC9oNj6N5w87bIai/4M1tqoyD777OuJ4suoTz9N3aroO9IPd
bmV4ft/+4IIR8L2k85praH/0mOaXZTS/VNK+RkwfPx/6wU9bTewXlTHnMH/2
fGfdL9Afrh862AH6g6vV+ylw/2rap2ylfcox2qd4EVexPXEWBxNfcQNdb0vX
zei6NIdzOF2f8/5LO+gHr0cqKIOqNC/Ig++7/4cm/p1RazPsRw1d/ZPg7weO
lK+GdX6fgvgm0B9um8TWw99nPPDPhn6gNP/3Y9DDjqtCoD98wHnBMVH3tP+I
f85rX4ifmUT8zAvEz/xK15Pp+im6PjfbtBa+964+cjhfjRurvRa++x6KRy2k
eFR/ikfdR9c/0PX1dP3u+TbYj1NfN8b231f3+w7tX55wEvvz6LfrnoF2cIze
De3v1WyWGrRDv1QZ+GZivyWnMd4jppmCBryvjo9HYPxMVHZwNtwnnNb/r2n9
P5nW/7vp/KSSzk8W0/mJNfEk+xJPciXxJGdQvOgLihedSvGiNcQRCyCu2Gni
iaVNn/0Hzve7Lc1qCnEKr86qitCf7d6WvYTnqR2wHb9L8cPHu+C5HsYdQH9B
a5OxGOew6GwQ2r2l5sdxn3JP8w3YK/GgU/go6J9DDIfAfcTpkT1fg2Zrb8Z8
1TLiQ54lPmQV8SE3TQtCvsPP2BN5oOp9766Dv5fFM/xO+wsP2l+MoP2FGv8d
qSb9vaz7xMsdQz/TCNtZmM8lZKVNhvb/UXZAO8WqFWbvA+1xpHi8RIrH20rx
eAvo+l267knXZdmZ17QO30Xr8NG0Dp8yt0wB+ln7md6oxwf1KYV+Ig5eg/2s
190z8J6EcS0tt0F7MsMr8HsX/VDHeMs5WYPx/gfqeuH4tDdrDf1X7HB0FeZV
9aV18CDSQ7QePkTnLVfpvOU0nbfMJU6gAnECZxEnUKA4N0OKc6u78zfObQFx
Ah8QJ3AUcQK/XmoD86Wo0zgN42FmKig+hv7j9KBvJjxPYc/YV6D7Xpvugeea
lPqxEPpZ/8aXfoNOmx9TAH8fUr4H7fIEu25op79GvsLzrkC5FMyPbj5XDvtd
7vOEzXAfXeL+3SDuXylx/5yH9cD+Jjf6B/yu2K3i4gr4ezOaT81pPlWl+TT9
49g6aPeSu+5VoDlNemH7q8jeepO9PUn21ur6hWYwrsynW6If7eOqujvw99rH
DryD39ueeAPsn2irHYPjwprO9zbR+Z4Lne+tSh0J8UUi684r5eiP60t8NNa3
xEmLeWODz1N7eTD0W/HJzVLkpejR+c9cOv+ZRec/O88oNYF2au9MqIX7h7Q8
nQL332N3FLlmCz4mo7YqOfkD8tAnv+qJ594xfqPw3PvIlUM1cO7NXCrmVDGf
qvtzy7bAY4oX5qPWz1H3B36C6qHqccAtipuZixyj71l+yC96d2G7PPCAZivG
NAXN09sSAjyN0GfHu0F+7P41V7qChnzK+QO8EebOMIeG+TPPojcgh0VeveYZ
aOHiNseAA8BcEuaUMJ+EuWzMaWM+21zfRchxq1rkjly344EhF8BfwLwt5m8x
d2uS2oDWwJnSUChFXZHijhyJdeeGZQGPKTxIBblMOgVbOwBPI1Nr/RbgHE3y
W4n6ynp0DHBFTt87kQycIA976yRQF3XVGOCuOLZvtQB4Ore0Vi8EdbL/eRjy
8bfku2B8iZ6aD8abnKls3R7iTPI9zTcBP+7HywtbQC3dvz4D/sDAooHrgDfX
76nOZtCgH8PDIF++vWo7XeCFlV9s1Af02wQH5IapRZwFboYQ0EMeuBmCVcxQ
5GU9Sr3YDnhSmaTuKTO+AD/EWPf6QuA0iWu+A0dFyPs6GHlNSVXTkXM0pasR
aneF3zOAM3O/JAS5QAZ3NiIXyCtNcQ/wB+rDS5FfEBDSFnkGa+v3LAWOwUMr
FeAsCIc8TqC23jr8PvAWhkR2b+glec5n3XrIAx9Pw/RBNPABqh459gDe2WOT
jN6gAV2vzAPexbWhRe+A83VOwywfVEkuNQE4IY4POr4EHpYTafQljx/ASxk5
MAx5U8/j7iNv6qjZTuRNMaeJuU3Ma6o0Dy8Gf96JleMLQDvcSBgBfj3m7jGH
j/l74UpLgHsgRLVZD9wD4UO/N42VZ18SVAatRS6bf9Nc5LQtXvnIGDge8u/q
dIFHltf4e1fQ2OGz5gP/RP3OHDngdpmtbKoAatGmuB44MMTDEVRILYiHsyhp
AfrFx8zvh3rDSW0x+CVLbeoxLk7z1zH0D8clJmJ8C8dhcFwGx2M0PaaEft/N
XZv7g3bYdvMi+H8td4SgHzStT0/0/2+L8UF/aD/HbPRL9bTwRD/VHsM+6Ndm
DgVzKZhH0eboROQP+rgMaQ86/sQ05BCGTX8F/Ahh2sHNqMtbh9YAR6LVnuPI
rUv1e4C6cViVCXBR1AKi84HXpvSk0UvQwadfJAJPplHMylyIL9RNsH4FGp+f
iVydbkVpGPfmEpiN8RgbPRqJ4PfsN88T4wbUrwVjHEHvA/2vg/93R7sNeF6Z
fGkl6sZ5G37CueWCAd9w/rIxuoP+mpwVM3B/1yrQEP3fmbcPYLzfzbqd/uAH
PxC4B/2Gc5uPRb/hpxPb0G/I3BPmoDD/hDkdzO1gXsfMs2EDID+/2NhrEGiP
qj5hwDlhbiNzHJnfuPZBii9w/Wp2tNsBevbW1kbxgbH/4dkx3465dtW5PzBO
2DDoIcYBLVs5DOMqdcekYvxfVbuz4EcWlvX3UQM/spODB8aZlWVnYnzFo0nb
WoA/Xda6S9Y+juNLON6E40w4foLjKTiOQu9jIPpNX0QoQJyX+CEtCv2n3waa
IIfHpcUy5Lk9nSe4wrzAHBnmyjBPhrknzEFh/glzKJhLwbxK5lQyt5J5lcz1
YM4H8zC7T8nH+Sw1J/kX6OL3f/bC/f/UNnSEOGC5kPEYD9z44vgmEA+8S+63
DsxnycP24vxmpv0N+Yoc18txvhzfO23SKsyXiR28FvNlOh5agfkyWibTMK7+
2pXF6Nd7oHsY85tkratlnVPJipvi+B6O9+E4H1nxaUYbAjF+IGjgUIwfuDMr
VQfab5AbWgh8KLsdafmgS8JLVKEfcv4q57MyN2msfsN24CWljS2Bfi0OqdpX
B9wkzs/kfE3mAnmefgPjRJyXOQHGjXjYJCAUxgtzbZhzw3ybiNma/sC1MTXx
3QCq0emKG4wj5o0yf5S5ozpnGiMfb3z+TuTjRRvEI6f0ZuluzLuuSTdE/TOr
CfIVNyX9BnslVmXEvwAdNSwA7ZWv53jkPinP7A/2TTS/unMQ2Df9ceuRW7Ru
pipyjNZfuo38oh9b7PoAZ6egXF4btOqXIdrJpx36gJ0Vaofkgd0VXv7W3Q/2
lrlpylL8NOaL3ZfijF2Jvwzzkai6YFw30LN5fo4wH80LOon8KaMtsTCPiQGJ
3ZFDpe+WGQscpVaby66ABmp8mgvzYPM7r0YD9ye3tuUI0HnBn/4A/ydFbyNy
VyOj/nJYV7t3QP5qo+gG5No939QV8+//VKwbAfOvm3FsHfDdFpG+/XBlBszX
NK+LrOE0vx+SPwvrAfHn9Z2wHhDDzCbfhvXAKPk45GXtaeaJvKzAvRdx/fA9
a+Ze4D2FtrcLAH2XFJgC65CjBffkgE/0p34rrEfEMu3vyCk68Pop5jk8aPMS
8x463nyH8UgvlzmoAR92jvX2dqAH3yV4wTrHTeiA8VS93o6GeFJRS3lLOMyn
t8ctx3n0eqANzqtDPyzE+ZTjSDiuhONJzvVag5zDK1dTkXN41EMZ59O5hzOA
PynmnkmG9ZhYpLAG12MjmmctAP6dhv3b+aC5wqp7sH572s8Z1nmiVk4FqmfU
kGJY79H6UPT/uz4UzWl9aPehAtaT4iiPrr1Bp0ZvuwHryaatuiMP68uGLORj
dfZ6nQXr0rrMQV7Ab1pgprsetODYi1BYl3KeAOcNcL7A0XsNOG8K1UNw3owz
erwV5s3nFC/4hlSkuMGlE97gvDm9ZijOmzGbZyNfgjmPzH1k3uPPaDNYf4uL
3kTBelys6vMsCtbhIwx8Yb0uGtR6ohYf9r8G6/aMXrHIyxMWnoJ1vjjgcX0L
WOerVs6D/YC4baGIqvNuIXJoZ95ojFw155YJyFVz37EWuWpbQ3A/ImZ9x/2I
mHC1yhD2I8yxYq4V86zYH8P+GfbLWBqtA96p2OV4VF9QVdVTuTA/Vtb2bg/z
4gnb0O6gclf91WF+3Bjlmg7z4toxQ4BbKC62+4zxq8w5Ze4p806ZB8p8UOaC
Mh+TeZnMybSfOBX2b+Kxvo2Bjyre3fMMuZF7nPc3AX7iiIbwZqDb7Z8Ew75v
4/5s2CeK2+zkLUAHjBsiB/vEgzrKyOXb8CcCuXy+Djv9YF8Zc6urM3DoFvfw
cwNto3cG96HMU2O+GnPV0jULML5rntxu1C/HDDCOa/9Nb+ReKTiPRg7WvWob
c+AMNNjXPAUOlJnlbtTcE77bgM8Q5lavDxwllyPfkatUmGygCZyKyK5NgoBP
ZOI2PBi0+Kd1L+ByvLN4hTygx+2MU0Bb5HQbCxySXbf7PQLOztmCBw9AXQeu
DDuxIEao7PPWDjgsXrOWW4EOWDL52zKdRGHUHN1XkAd7a0TXHNACvwAL373J
goV/R+R9fPj0E/P4K1Y7hEM+HfMymJ/B3AzmSjBngvkSzFNgvgJzFbJMrUcD
92pl2wuon+d00QF+xTanU8DxEHaQzg/STYlSuiLERocXA4/pVGUA6o/2Ufdu
towUwpZcfg/8o7aWq1AnqOY3tE6IFgxbVIwCrtDy8BZmoJ88WmkMXHpDWLx5
wJSQXpL9f07iBNDlO0dr9H7yQPh+1gXrJW+L6ANxDYLPryL0szAHhLkgzANR
eJ+J5zt/OnfG+ufNjyr9gfgNh0/l6H/V2tkL/b+KxQMqwA/7s/l54JYI+r4K
C0CfVtjbP9hzTXjx2W4M8KRM9jYfBbr7RdP89e2ihRYHph0BftPNP+aoDzuu
Nm2787rw69iH9nWSfdcsx9aohT0jr6nsuiV8vngfeUZt+yYi30hh5aCj8L3S
OxXHAJfqIemwBssnH07HCsaLNJp2kKy/u+3TlgP1Mo3b7i/EC5OdJ2Ncvm3b
kRj/vE/7XX9YLyl0n4XcgMT9Zx0xr3FDFK67Bu1YieuuVrabcN2lq6SH68Bx
njnhwLnY3fzAJVAL8fSHJXm3/4uPNIj4SCfuzcR+Wef7E/tp6+k1X6F//kwf
mwf9cuTMDqhfpn6fAP2zeNJA5Hyl1MZifvQOr+cn4Xk/vdDDc9j0VavxXLYq
vxbzjmXFOcjiR0WmVPc9JEjsv/wJfdCKRjfW75x2X7i21mkIxKfuuDBsMGg/
i2l/nBrdFepf7sX1lpXhaNTIhXOQe1O9cEoBcGHaKPV/DWooWs8eZn9dSNAZ
eRt4KEM0PsWBBjVzevq7IkrQnu7nCVyPX43znUGNdF8ve7b62n9xk5g7N9rN
ciL0430dD6PahdzC/lx86DbGY0yX98Bzbh27mc2gPx+3DUC/vPPSFhi3Vqgy
DuNDmPPF3C/mfTE/i3lazNHSG+m9ENZJS72WLQL9UFCi/ECyXrpr4Dse+D6d
150cBTqrULvQ4NwNYZSRlQAcHIVzh01BVUz1Bju8iBasUzv9AQ5MP60NP0FP
n+mcslMzUlj9QusFcEyWZv16Cvrz3YVviV2uCMztYo4X87tsg00DkR+0OHQP
qP2AqiWXE2OE8umlGTBP/G4ipIFOCxh/00QyXzQJGIp8GaeXXaeDhg3qEH6z
y1UhrIc7clKKirz0QXvZ9/CwibgscN4R5yEx92zb2bEYN+y9ORXjiNv5LcT4
4eX1HZDn82rfakPQ4jNa4Tktrwklm8yQXzPqRPpj0M1rHIZ1XxMurP8i7wcc
lllj5baAzrgwWLV030WhNOiOInBtToYMRL6N+uuidODbHHzReRnwWZZ7WLiD
7p7osww4LXfmtY2A8RZUZYXjLt5i1EcYdy1+zAcepVikNw74lKKPd2Z/4Leo
3piLeTWnettgns3hI1P2IO+C8uE5P57z4mPG3AQ7IGx8dBHjftO63B4D7yG7
rgT3gc1G5SInoLn5eMwfD5isjfvB721LML7LIusoxgkPOj4d6/gUjqjEOoE2
++dkwP6O85w575nznUMPHsD9nuvFYcjzONBl/UC4j+7987gP/bReEX9fKW4X
tn902hJs5+ZyAeyVYDxlBeZ3P/owFvkDpSsaYf2gScnmmXB/zlcfJsUhSaD6
hgOl6htK28P3Muxhb7KHVnWdXoL9Ops37Dnoti2W5mDHXvRRxrxQgwH38b35
Fhvie/b8+gvt24d2+1Dvhx08B/2cuQ/MgWD+w7eCSojjFZLzNHFe3uTihn6o
ifX56JdM0TBCv7z7uudY54g5BcwtYF5BJ+IUtJPiFaTNvw7xr2K0eR5qWLYu
+vGleSPmxBuxcDqF+QAXXu3BcTM0ZzuOFw2ftv3Anr7OTUC7WlY+fQ3Y1Zwg
zI8Vf9f1xPE0aNUJzE/v6rXzL3fmx2L8zvEHX+C+fkzGSbR3xfrTUZcUZqiD
3avpj3n3Qqdd8/A93duYjfwZo6RQtIOBvarR37czbzLGU8mqf7p2/ymMh3mn
fx7n/19eX1TQL0Nxhx5S8YfrPtWgH7bBdB3a0XL7ixi/HTNAGeO3dBpnYJzk
pXbGjTGeudoSn1dIvYLP+0SuFz7XEuUl+JylzpPwuSsNv+M4yintgc/zNf0h
Pt+YKdYj4Lkmqsch76D6lRXyD7LjTJF7IH1uwzwf4xhDvH/Gkut4f++z4f/j
uU0SndtMFB/juHui4Ip2z4s4G9LnMMydSNrZFp+r2q0Un8tASQ6fi7lIzEli
PlKuwoG/8Z/PFPD5fq2zxe91lrgkzCmZSXyS39vrcHzpVLTH8XUp9DlyLZgD
xVwo5kGZvwnG57pbH4j377bJFDkeccF56K9UqOyB4+Nnn4vor3dM2YZ2Z1FY
CPpDtU/WIH8mhXguzHc5RVwXWTwNxwcGOK53mCB3QTgi13wvXJ+SemIOtGNN
m3NuoCUR9WZwH1sbK6y/tbP/Maw/fHFJ1D34XeYidZLiaXi2+4HtC3R4jP7T
hWtTkZshPU+Vy5inNGie2heRhev8qBUqyJvxGW+LnK7eCz2wH1xZNhvfn6Wd
HPYH5mcxT4s5WszPYp4Wc7SYY8VcK+ZZMccq2vf/5mxMWfmjI9iX5V3/2ptG
rQZhnENjFQHfv49PIj5Xv/XPsb/pt1ZEO2KvdRjtypYDC3Cdxtwf5gAx/4f5
YswbY86YrPqtzP9iHhhzwFbLiKtkDhdzuZjHNU3DG+OeWw16ifHXTpujMP5Z
sXMGtnPtB2tsp+dIbezPhfJtHWA8zw9RcgZVNzDHdY6c7Wbkb2yaWYX8DZ8v
1hshz4jzFTl/kfMWuX4A1xPgOgKcx8h5jZzPmLz/hhbk0xZ/rAd+gpCxeE4P
2NdfVZmK/hvzVaXoz9n1c8xr8OMYv9iMXIvLTYMxT/TT9uIyOB/gfDnOn+O8
ufimLTD+I9Q58TPoiBnrPoG/mPO4OK+L87lqswV8LrVnC3Bf8tYtAbkiXAeC
60JwPQjOd+X8V8575XoJXD+B6yb00LZA/4tezlL0v8RpzrkF/heuN8D1B7ju
QIqYj/4Yz75GmIcd8eM8chs4D5DzAjkfkPPoOK+O8+n6hpngfDntyQUTUC89
hc9wH5sO2xdiXnaffIyLye22aCz8rlXj68f+8ima4Ht4ukHAfPOtp02w/scT
n+9YD2RE7hWsA9J0jBbyVoqvHUO/SoPSCvSnjBj/CvP9v3SejPn+Q1cevwbn
fpHT3DEfOK+0HvOD44uc0M/C9SS4vgTXlegfdw7qiQhWaunoh/mumtwK/C8c
T8bxZRxXxnEMHNfA8Qy2mwffgXzX3w39MP/1fnLOfegnnGfIeYecb2imdQDq
RIgKR4Kgn4qtV/1sC/1zCu1b7Wjf6k/7VlkcD+m/301/b51YhHn7igP8IU9O
SEx1NMW6G1RPheurcF0V6fWnCq8/KS+d89Q5P726sC3anXJSt8/RLcD+SK9X
R9B6tb5jCLwH4dy9VVgvoqv5nRLkIVCcH8f9cbzf1Yh9uH/bWx/oDfoipxDj
NK5NL8f1R3l8IObjVH5OxLyPRFrfDqL17Xha31q/0cI8Veu5bpi36n+lEvNV
3zRNKIR8Y4/PnV6DHjPq9hTeg/R6OJ/Ww6F7/2D+57fhDchnaHmhtzL0q6LN
HUxg/5y1NwT1os/RWthHc54n531yvmesX6Si3LoiYaCmlwLoDD/PcZcLE/7D
v2AeBnMwdDxuIf9i4pdeyMNI/maK+Yw6k4OQv6A35SLqXe1xWCeLeQHMD2Bu
wJqjHTE/eVFENuYrh5XuK4dx2qhwAebrbo35jfm79fEmmLe72O5vuy17WuNz
lI6ejnnEzElhbgrzUg533gT52MKSXqesQa0m2OfB+F2+rAzHqZ2hI47ThjMr
kcvxvbsz+Mf/o+4J43A8yooP5zx8zsvnfPw7M9ORp2MRn4Pj7r1T1WMYd67F
ZWDfxZJDuZhv3ex4n2yw8/LBkciF6eakjTrQwALz5VcZTUKeTtbStaiXY/u3
h3MPWfWYmPPC3BfmvTBPhPkizBVhngXzLZhrwfwF5jEwh4HzPTj/g3kCJ+U7
voP++ih6Lvy++MN1eS78rizu9/GgRvicTbQzUU1PD0W/obT/VI78p7HfZmD/
GzRlInKVjsU/wXkqJX0N8kCiXNugXZHfeAJ5IJt2X0eOUkHwG+SyfL/SgPMv
1z/jemhcB+1+8zzkhPhuP4359Zrh5/Lgu7R5PR7rkWkfrMF5+OG0cd/APjAf
h3k5zMlZmpaHcedvd63GOOTea9u9gP7AfBDmhTAnZN1ub6wb5b9Z3grUMF0J
60Z5L1BDfxJr/+RWWFcu0McU6yuFJK3B8W7udEkVxrvFtTzk4zx2xrp8YtYO
f+Q2KO8PBX+/OHGYAXA/xKaC2gSYp04bVCKf4YfDexxPC2+c04b3yXwu5nUx
p4vr/3E9QK4DyNwu5ngxv6ufwXEc/37NbqIOd1LZB3bAT1ELeVVlm5ORXzXP
+HkcjOtUnWFoH2pzi9E+1EWdxHPvrP1uuA7Y96EK1wUr5xkh30CJ6jgvozrO
LaiOM/Nupkpxb7gOGdcl43pkzGdhXgtzWvZ6+mK9rmYTU1FnxIRGQTuZJ8J8
EeaKcF0rI6n6Vop1LdBOub7Oxffs32o82iu3y3Px/UbtNEO7FVSehf2Z61ly
fUuua8l8N+a9MeftjKMb1udaW+ALnCTBc2l4NHx35qYxR435ac/UgpB7czD6
Dtq3vtsWIEdFZaE9rjdMz73F9UafzNLW0A9N77UCXphQYTuhBvNO9sbjeoPj
LDnukuMtExPbYB07s7Ef0f69r3JCzoZO23r0c/3+rYfrjaen7D7BOMqJVEV7
GOf6DjXLIDMLxh3zcZiXw5yc80mZyGXQsq+AdbV4MdMC66adu38KuS3JDyf+
5bi09ke+VnDPSWgPn10PRXtYF7ctH+yS9P4xlPaPuxakIRfvs+pxrJdltUK9
C/zuQ2Em2s3grSKe+zqln8PzXun9ZjntN5lDx1w65tHVHgrB846U0bNwffFd
uwmeD3M8K8e3clzrzoZgtLd7LDAPXvTe7VwL9nY17U/30/50Lu1P1yx1x/VE
ceFQXF80f2KL6wquI8h1BbmeoPR+9j/cJ+I9Mf+JuU+yuB9f21wzhnXGlIhy
PL9/91oRz+3DG13E/q8R+ZeTMWvUCbQzLU9owvpbKFo1zQm0qbEi8gZNzEqG
wPhcMmQ25KOLe2ZVl8A4zaw8D3ZD9H91CTlhhq8bcD2g+rIAv3v+TFX87oev
CfjdmUvInELmE+650oD2pOPc9WhPVF79zXP3zm5dDf24ZfLLFrB+Vp7olgj9
eYqdDeyvxOAz7riOHjYyIx3682m1xdhf/bRfo86amf4Q+i3z3Zj3xpy3h2MN
YT8pKq0aiypH/Arp80w9Os/8Im8I41wc8iwWORlxbuJfPsa8LOR7NF5cgtyt
n/PXoZ35+HQ0jofq9GCsK7hWbzhyS2TVVby9wQf2NeKHN+lgb8RzW/9yJ5jj
80KK52N4+ALGY9ntqUT9HTsV47Kkzz060LlHlyWK2H6zDo+x/XZfRoxHe9Xn
KdpHW4cK5JPcunTxFrSfOW7MdWOeG+ftcx4/5+/7rg5ygfHTf89vPDdwOzQR
/Yac98558Jz/Lu1/3ED+R87/Zx4AcwCakP/xN/kfVWX4H5XI/7hieSe87/Pf
i5GXYP78SVO4/63gVZiXEtCyVS3k2YxZ+rMWufeaFZgnW7rbZg6od45xN/hd
5g4wh4D5A8wdYA4B8weYC8CcAOYDOJs8xnPR2ZZqeC7ifdatGto5ivZBXrQP
GkP7IOY1ML+BuQ2XaL/jT/udfNrviLSvMaJ9zSja10jvg37RPoj5HczzYI7H
vpS3uO40NtFHvXfn7/pTFgdjgMoKtIOsXl6/8XzpC/nj7Mkfp07+uCvkj1tN
/rgM8scxp4O5HczrYL4G8zaYsxFdkoHcCvWobZgn6NnUDfPE7U4sQT5CZs0o
zAf5cacQ+SeC90PkPAxpYoT8E695kfg+mUvCnBLmkzCXhDklzCcRuuA5idht
zFTkiIwrk0M+1bUDlfhdazbswP54ssoN+SSTaT5aTfPRL5qPmhz+O+9k0LxT
RPMO81aYv8LclTU0vxyg+cWe5hfp+WgrzUect8x5zJy/zOd3a6V4/pwXzXnS
fJ3zrjkPm/OvOa+b87w5v5vz4Tk/nvPiOf+c89E5D31Ng+9IaJ9neOuxoNWK
DzD/PWKaH+QRiwsPGKI+VO+PeSJ7NXvg+73ukI/Pe2r5G8z7NiZ/x37yd2wk
f8cO8muUk1+jgPwaK8h/UU3+izryX0ST/6I7+S8iyX9hI1eJ92Vt+cxQ4f8H
l4C5AMwJYD4AcwGYE8B8AM7P53x9ztO/P2op9pNjN9rhe2tpOxn7pyb5Qa6S
H+Qx+UGY+8AciH/wH/5HngNzHJjrwDwHWVwI5ikwX4G5CrL4BtL7XOYbMBfD
Wco/1XL0Szx/9229Vhv0mN4ZeXifP2i9d4vG3R8ad8w9YQ4K80+YS8KcEuaT
MJeEOSXMJ0md8QjnhS3Tu6J93vXrKM53D6dPxnbvXOOC/TfzgyHyYZjzwtwX
5r0wb4X5K8xdYe4Jc1CYf2JD5+2qdN7uSuftzIthfgxzY5gXw/wY5sbYEA8h
Q4qHwLwY5scwN4Y5L8x9Yd5L+9WWaDfN1DoeBnXYcvUbzI9vvRIxjn994tDl
oFa/TxpB/yzrPAjb/3pJHHJWhpb8xnmc66FyfVSui8p1PbnOJ9f35PxVzmfl
PFauL8v1ZrnOLOfNch4t589yXj3n2XN+Pee9cx48579znjznzXO+POfzu0rl
9XP+P/MAmAPA+fmcr895+pzPnyPFYWDuAHMImD/AnALmFjCvgDkCzBVgnoA3
2ckSspPFZCdl5ZtznjbnbXO+tqz8blkcBll5Cnup/c+l2j+E2jFbqj3MrWCO
BfMrmCvBnAnmSzCHgrkUzKNgXgbzM/7DzSC+BvM2mLPB/AvmYTAHg3kZAVIc
BuZ6MOeD+R7MAWEuCPNAmNPB3A7mdTBnhLkjzBthPgjzQrg/M2eBuQvMW7Cy
Wv83b2S++SPQytUvj2JeNnEcmOvAPAfmRDA3gnkRE8/fxXGdN8gF443z84fh
vMO8VOanMjd1cFydLrRjX6TfYFAnu3H4XRrP2o3rnGS5AvRL2zp3R3805w9z
PjHnEV9a9FYVzpta1bZCjoF+WOOvcO4kq79NkcFhbp95G/N+S2Y3Rz/s6v2f
MS5OVh50aXkS+stYy7bZ4Pm5LD4J5y1zHjPnL8u6P+dpc94252vLOvc+T+tq
D1pXZ9O6WueXPq5X31wIwn1J1IPrGAfO/H3m8TOHn3n0zKdnLj3nyXPePOfL
MxeAOQHMB+B6A1x/gOsOMDeHOTrMz2G+P/P+mfNfZ5QM63hx9oB+nUGvDyrE
ukjMTWCOAvMTmI/AvATmJDDHgbkOzHNgjgNzHZjnwBwH5jowz2HMulntMQ6h
pjnEL4i33pch98OMru+n67F0fWCPbmXwfmuzF38Cvfe67CO8ZxvtaRhX3H7k
ngWgKoruM+C7bLtkAvn/gtWkxpjnvfTCIuQkMD+CeRLMkeB8bM7P5rzs5uGZ
HeH9F/2Y2BTUffKzL/D+f5Efrox0GfnjMihO7CvFiU2nOLEo2m/up/1mDu03
OT+c88U5T7zFk8XII8g/7Ipq3b/HJmhPdckpzFdP6zf2KahTsD3yTBRsetfD
Oc+r/Cd4frkvXP8RvJ+tRwKQezD1tCXWP9/gfuEj3J95AcwPYG6ALN7Ialrn
19E6v4rW+bL4Jz0DnuP9L1sa4f3VLR7ieFzfOA3t5LkCddScwVXe0H5ZvIKQ
3hdw/c0qf0AX94nb2vrge87Xd8R6QMHvFuA+zoeuv6Lr0XTdj66/peun6fog
N6xDI16Y1hn3/UpFbvi7g+n6Zbre8PHv9WELx+B4f3W8D9phyy/lyKOoe3cD
4+fOtSjGeLrHK3wxv3LWikAcR988byLfoqDCFPvhlWOn0U42nmaEnJsvZm/e
Qz9MzT+OHAG/ifPxuw+6kb4G/v6k7SeMD+jxMxR4GsJn74QyeM/S57eudH5r
Q3FB2ykuKJrigpjXw/we5vacCDusAv3DtWgQcjve5bz5BPef4nMiH9ox81hj
bI/B4kVLoD3MH2EeCXNIWr9uh+eMpVM7Yl5/L9flt+H9MAeEuSDMA2HuCXNQ
mH/CnCPmHjHviHklzC9hbglzBJgrwDwBeTrvqqPzrhZ03rVZqRg5Ba6dTfF9
Gz77iNwPWXwDWTwE5iYwR4H5Cc2nusB3F1vEJn8AnaVYtgruP3mnI9gTsf0H
RXXQa00mvID7t58zE+0Oa6TVTuQn3Kx8iO1YHDET+RaODmORa3HJuRbqKgq5
LhFYNz67jfYAiMt9Ub8M4ngFh10PLoK+bBL8DeJ4Iyn+ey7Fg9tRHPhlh4gl
UFc+zug6xAULzpeUV0E8cIqqSVOopz5oRqIyqMKC+jSIHx7ycQGcgwuH3/WA
OHah9d2v9XAefsflJMS9S+bvAIirErZe1PGGeKojlquxTv37j3uxTn358F+t
ID75Tb+ITKjLvqB49lPQee93m0I88+zNWhD3LFi1dMe65fZDsjH+WTpeojXF
S5yfNxPr3Sub7kY9VpG0AuKuXx5wh3qgQozTJ4jTFqbsTboGcdrfrvmnA8fh
2ImwB6BvZprGQ1z3bquEfVAvXNWu417QQrl8d4gD1+g/GOpiCu5Wr3JAFWJ3
lEM8efTNEKhDKqR2q6oG3dK84z2IPy9cvAni1QUb1zkQry4EBL4aCvHq2p4t
IL5dqPFvNxq035hUjG+fF3N/yYmDRYLKuXMeoB/K3N0hbv/90O43od58d6fa
W6Dd/CqyIc6/8vxwyAcQOp8YAPkBgq56D0fIC3BUibeFuqoRza5bg77QHv4J
8iBk1ZuWzv99SPm/0nnEXNdeOh82kfJhpfNeuX6rdH4r1yFd/9AA++XkIXJX
QNtavSmF/pnm4jIppFeRqFHSBuJyxcjql60hLrfFqxKI8xB+9vTH/hagGddo
vqS/jZiY1xv6mUt39/6g+3KvbIb+9jl3G+R7iGeif+eChm21HQfx0tXbl8nL
rSsS6+xym4EqLPo0CuJApP1lJ8hfJu13SyC/m5nRWMh/EY0sVSD/RVwfWugD
+S+UJyNmkA6gfJlFjnUd6ryKxNu727QDrck5chnybrLPHIT8HPFrdCtUhWYp
wyFPZ8LDUsjnEe+s2jgaVPnm81eQ1/Prbx6Q2OdvHpD4kPKAjCs7jsb62nE1
Y0APpDdVw3ylvM5Yh1r/qOJH0B5e2+ohv0nphn4J1G9OGK8B+VDi1DETkiAf
6pmlBdZBTuii6AeaOelkPORPKfYJGgV1gn3aLMR6wd7P+mG+VZP0kTbQzxTu
TMJ+16o88R30t+mOhyB/THRovhTyycQpN/uHQh6Z/ctDkG8mGm3cBPln4qMh
/cwg76yvjukBqBvd9IbcUVBh80ddyFN7dbtdX6i7bKleCHlt4nBzzfaQ12b8
VQPrFPccsRzy4MSWda4+kAf3tfaLC9TlPV2Uuxh0dodAzJvLivfG87jp74OR
G/2qUzXG8SpTnbbDUnVR19b8Pf/vfHwxrs+dw4rjkEc38+9+6i7tpxxpP3W+
2Br9i7s1KjHONKfpXow3vvLpPvbnrWfDLEBDMl63gf4c/GAE9uP6+5PQjq7W
KUf7ufupEtrP5iUDUJ9vHbgF41Gpbh/X8VOi+n0cf7KS4k9iKf5EOr++A+XX
S1/XpOtcT5Tri3JdUek47Vsy8uU5bllVRvz/BxeFVvC+Tq+xxnVdp04VF/6n
+nftqf4d153lOrRcf3bAjK34HrKGqP2tY1hWYgTtCftWhvZigcpd1C32b1vC
e27q0BvyTMRuXZuAv0B8bpiI/t/ThqlQr1BMUh4D9QrFF8Jh9OtpenaCvCQh
umka5CUJK2aILSEv6TTZkWKyK2xPzt/Vx/gGzbhdGO/w/YoCxlVK28kkspPS
cfVcH63dYWPInxT1FlhDPqX4ePOjsWivpOL95tP+Io32F8W0v3Cm/cUjWgce
oXWgA60DrWgd6EfrwGRaB2bSueQqKa41c5OZo8z85Da0r2btR/trWefw+4hn
vZb41nx+skRYhOf7ljou6Fcqcc/8BuvecY6PcXyNfvke+0mUyeDr/8YxYy5e
EnHymI9Xo+cC3DrR9M1a5Jdbzm90Df5+5Z1H+Lv9lcx/wvltoTC/Dv4+c6oO
ciPDHD9heyq7BqHf4XPPwNyOknXVLCe/56DDlje/f8T2nNC3/4U13SXrJLvm
OatBnbY+r+9qfEEoH1J++6Nk/WHocz4RtOL6qWfW7peEBV5v7ptJ1jd3Nr5P
B1UzdRxhohYhfJ5wNamtZF0SOSMlGbRgQecxv3WvCZUr/EUlyXw8d/LIRFC7
mze2OOpG/Rdvag/xpqbNfFLhuL5I8KjaWgqq7/Lhxp7ZCULPts/mlSV8FC62
d5wNalmil+wtGV9ZWsFGryXtU1yTiWpiNz/p6KZLwlTTe/OMJe2bOkTBEfTm
lJun9veOEIztnnytk6xLrpTqfQNt46nTq9j4mnBs+y2bD4FFwqakM6iD32zv
ZGQaJVwekdnTXdK+4bqtUZ+9v7doydP/5kfNJ36UB+0fRtJ+QpP2Eac8+4yB
flMwdc6kf54nL9M43/AReET7FRoVSXSb7QuLvHHXhHFlHa4nSNrxyeZ6DOiz
1TaKze2ihL5zluXpStox5sbd56BprfU3z66OEepTTM30Je1odr56DKjzItOx
/TzihG17A+ULdhUJ20nLXdIaWWrGCrPGTzoa6lckBHX6eBg0OUo/oEVknBBh
MeGj5L2LVb2+FIKOzu8Qd0Dy/qXzVQdSvmqTp6vwO9UrFOJ3uzj9CH4vm5Pb
58B3CjzXHb9b7sGCO/C9SqJndQFuwsnjIahOR1Su3umUIGikve8vabc484C3
PmhoP+85JpL2G+tO15G8dzGpeE1X0O4K87U9nsLzrroj6U/ift2Jt0Bbnhzd
3UnSr24T30+X+H62xPfrb/wWuFhiG49HyENyV3nYErgNnQoDN0meX/x6efs6
UJWOGfIdJe8hbeeAJ5L3K/5IiXkIavLSxc1J8p4L05dYS/qH6LFl41TQ52eH
PTSW9JN33RNTJf1ejJs9RwQ9tk7pFvT/6j5rGvJ3FYny2bP+gFbqmFrYSN5/
sdl6+K7isfhO10B/Dp9YriT5vjOU30P/FFv6RZaAul5bWw/980bA7IeS8Sba
7L2aCprWUesBjLusLr7Qf0QdE996UP+CaW+g/3i/OA79X4xfMhK13aFL9gck
/b97XIooGc/i87tbboG+U87uaCMZ18y1iCCuRTBxLZRXGA2SjCvx7ZQiY9BW
64c0CZGMr+TAu2A3RDnHo2A3RLV2RV26SezGn0bLsf/4dhOx/5zbE4/9R5oL
sZe4EFrem8EeiTfGBYB9EgtXlz0FuyTNPcgi7kGvHxZovz6HJqI9u6vYNxv+
PrnzR/hdwWWTJvyucEp/5F343fBL8zzBrj0JqF4LmvR0ZVdoZ+nGj4ZgL2YY
m5iA3nTY1wiea/MP3QSwd0kRndDuzZYz6wLvx6WV3hywI6bdY51Ad+8aOwve
56OWL+C9C08je+M4PjJq6Ft4/3oec9E+Ki+7hPby+IhTGfC95p1++wXsTvD5
K6g7Mho1LpF832qH1GgY5x3mPoT+IJRqhPyA/mAS/bFe0m+ERSO/QP8Rlmml
Y/+xWb0M7Wwv6/N3QT07RN6G/va9RNcK7FffmOuWoHmFuY+hf6a96Q79WSj5
Ew/9WRi2d9ES6M9+A/duxPE/yn896IrEJ9j/LyolIkfu4Zw3yLFZt6y0NfSH
tRQH7kpx4KEUB1712P022PfGyyahvQ8pUegB47HGcSmMW6HB3wbGsaB2prwH
jF+bho19wU6Zy73tB7ru+Pt5MN5jlJ90ht+z7NleE9SualYU2Ifl7x6BHRE7
+pWAXRGXLYq7BfZEOk5bgeK0NW48+wH9b8XME99Bb59uHAV2Sdb+kechnpd4
PjJdp4l8Ic1GK5Ev5HfHLgj67bKNVvh+NH4+Qs5e0NW4XfB+pOO9nSnem+NZ
Ob41jeJaI342mgnt3hLwEuKaxfwhrbCel3Q82CyKB3seNwDHaf2+Ghynvq4e
/vC7PK54nO2j8cXjh8cTj6ODs9a/g3HyY4FPEahy0t4kGC+JRV+PgB38WWUZ
DPrMbdoOmBd2/J0/RJpHxCKaR7R7NYV5R4zxHIz66MaTMTDvZAU1gnlKvGQw
NBc06E3ORpinctN1YsHe3VoRhXp96z55mNeW/50HRZoHxS00D3Kc4WKKM/Sn
OMOsiChdmA+CQwfqgbbc+9kZ5uVOWcNh/hY3fdefBup65Kg6zOP+3R6hXTVu
NhTmfbGH8hQdsKv180LQPhrEm8A6Qew4o1korBN2ep1Cu6c+JQXtXudVRriu
iHbZ5wD9L/tnyXzQhtraG9APpeMM7SnOsF9ShzLof1/er8L+2G/N5Ajsh5M/
JcC8lRv/CcaLeKnAaTOsixbt+XoH5o/OR/xxPhnQ890oGNdG5opgR8TmLncy
QPNG9TEBe6I+cwrYK7FB1RrslXj/YutHsE7Lzn6Fdvni0TNopwuE57Wwrrsz
bGYO2Nl7l2/ngeYpX74H9jPm8LmhNcZFEvu0aAjo3pqJG8/Ypv1XPV8vqucr
Xbf3D9XtbTHjnMpCZ8m4dRzcAjSubN3dyR2T/ot/mED8Q+m8aQvKm57ivWOY
pB3imSA9aI/48pnqSmjP3b0rC39L2tf39dx3oDPKl3ZZJbmuudEBrotfdZ7B
dfGtur46XH9SVjsYnkfPvc1wUI3DM/C5RnVxhnaK3zTOQjvFUZOqEqCd0vX7
8mXU71tL9fuyz98zgfa5+97H9tYUqnjC/fe1mNESnr/zCh9l0Pz8m/gepPMH
Ayl/UPo8k7kWG7aeeQ/PuX3rn3zQPZYju8JzrXx1+cMCyX1vedx6B7qmVb7R
NMn9pfmf3sT/PNX+lCP0V9fZm+eCThj1KAb67XM1/W7wd7aZbVH97FqMFyV/
L50vxnbMgOoyV1Jd5lqqyyxdf7mK6i8HNv39UdI+0XZkYAFom8vtB0I7E536
o31/k3oD7b21vz7a+crwv+vFoON/149VPn/XjSM61OP37fJyEH7fgsjaDvAe
fpqseQ/P/3VkSSHouhHWxnD/nTUTsD9PrXiD/fnQ+/L18F1WED8/iPj5OcTP
l64/60T1ZxOpzqwH1ZmtoDqzVYkl+F1Tp1Zhf3dJnIjfVzo/RZvyU9pu8Yf2
iFqDa7A/a+0/h/2Ev3ekFM9kYa+wAvjeg16o4fc/ljREC55XOj+C5xH7HDl4
j2Jn1Qp4r+Lbl9q4rs6uTMT+sf7kQewvIcYLB8P7+ZRaifPo6Nh6nFfNDx2K
h/fMcf43Kc7/McX5L96QpQ33dbU9qAV6KeymAP1Eun7lfapfKV2nsi3VqZSO
S+d57faH1/D9xPNdouF7ik1/xxlCO5/Ni8X9XuTgGOwXbR5pJ0E7HR8bYj9o
vKgzvB9x8PU57eH9pJF/V5H8vefIz2uR2h/H+cje33DcK607dBu+l5f2a3gv
YoL6JXhP4oa967F/drU7owR/57B0uSro4fk6aB+k814jKe/Vl/yzU8k/u4n8
s0+k8mLWUF7MdPKjFZMf7Tv50Ry+KCyGc4zYm/mm/zzHUK9a5AnnUP1J+VxC
mo+6hfiov4n7ydqf+J+Z4TeHNmpkmcjK93GfFPEdzg1Pp55f+c88dOlzrXZ0
rnWG/m4x/Tv+e25fB6l28r73NO2Def/rTX4rN/Jb6ZHfSlY71cmfxHqe/ErK
5J9SIf/UNPJPNd+6YzC8x3Zbpjv8M26N+wf3F+4nTclvvoj85urkN7chnn81
8fyriec/jPj89sTnTyc+vwr5uwvI3z2B/N1V5O9OJX/3cvJ3byZufzVx+1sS
t7+Wvl+t1HdcQ37nU+R3/kB+5/vkb91O/tbe5G+dS3z4fOLDhxEf/gDx3pWJ
9/6IeO+W5Cd1ID+pLvlJ+VyDzzn4fMOV3he/Pw16b92J076DOO2WxGmX/o4X
6DteJ+76H+Ku3yPu+v8Bl7NtLQ==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{325.1023672003594, 230.19470754156225`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-5, 5}, {-5, 5}, {-8.881784197001252*^-16, 99.99997142857347}},
  
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.9662566175603966`, -0.7838347012994823, 1.4272087583173991`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.712850417318674*^9, 3.712850439680002*^9}, 
   3.712852676281053*^9, 3.713052737875874*^9, 
   3.7130593008010607`*^9},ExpressionUUID->"f64e3eba-7b36-4dbd-a3ea-\
90051463afc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"h", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.712850476920705*^9, 3.712850478764255*^9}, {
  3.712850562015718*^9, 
  3.712850574408545*^9}},ExpressionUUID->"b4d5a919-82bf-4d89-8332-\
e7e6d923f2d0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$6308#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {0., 48.99999714285718}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.712850576014203*^9, 3.712852678370212*^9, 
  3.7130527380119143`*^9, 
  3.713059302576303*^9},ExpressionUUID->"41a9be97-4ac4-419c-9ef8-\
ff6fcec87d3d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "We", " ", "can", " ", "also", " ", "apply", " ", "functions", " ", "to", 
   " ", 
   RowBox[{"lists", ":", "  ", 
    RowBox[{
    "first", " ", "I", " ", "am", " ", "building", " ", "up", " ", "a", " ", 
     "list"}], ":"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712850594731346*^9, 3.71285061171168*^9}, {
  3.713059322204769*^9, 
  3.7130593304078913`*^9}},ExpressionUUID->"c736fd3b-059a-4285-9579-\
6595caf75eaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7128506154013577`*^9, 
  3.712850616871603*^9}},ExpressionUUID->"a36fb7e9-9143-42a5-ad5c-\
48cc7f764081"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", 
    RowBox[{"-", "5"}]}], ",", " ", 
   RowBox[{"i", " ", "\[LessEqual]", " ", "5"}], ",", " ", 
   RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"l", ",", " ", "i"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.712850619201604*^9, 
  3.712850647198352*^9}},ExpressionUUID->"7465bf30-5f9a-4fa6-9d62-\
619d33f8bc40"],

Cell[CellGroupData[{

Cell[BoxData["l"], "Input",
 CellChangeTimes->{
  3.7128506496496*^9},ExpressionUUID->"921a5518-cfc0-4f95-ad3b-a1eeb3bb9a2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5"}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{"-", "3"}], ",", 
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
   "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.712850657032243*^9, 3.712852683821211*^9, 3.713052738086936*^9, {
   3.713059313777596*^9, 
   3.713059343591557*^9}},ExpressionUUID->"36a09101-d265-4b72-a01c-\
7b0395c01790"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "We", " ", "will", " ", "now", " ", "apply", " ", "h", " ", "to", " ", 
   "the", " ", 
   RowBox[{"list", ":"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712850687357328*^9, 
  3.7128506977508802`*^9}},ExpressionUUID->"f13a4f59-539b-4270-a974-\
94821e7629c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", "l", "]"}]], "Input",
 CellChangeTimes->{{3.7128506768329563`*^9, 
  3.712850678525441*^9}},ExpressionUUID->"653aaeb2-cfbb-4fb1-8db4-\
5e7d327c1fe4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "4", ",", "1", ",", "0", ",", "1", ",", "4", ",", "9", ",", "16", 
   ",", "25", ",", "36", ",", "49"}], "}"}]], "Output",
 CellChangeTimes->{3.71285067908644*^9, 3.712852686121811*^9, 
  3.7130527381875153`*^9, 
  3.713059345122554*^9},ExpressionUUID->"16081d0d-1675-4721-8c0a-\
0a2f3ef8598a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"h", "[", "l", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7128506597337923`*^9, 
  3.712850665766903*^9}},ExpressionUUID->"276cea12-6d54-49b0-a040-\
c3a52343d233"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 9.}, {2., 4.}, {3., 1.}, {4., 0.}, {5., 1.}, {6., 4.}, {
      7., 9.}, {8., 16.}, {9., 25.}, {10., 36.}, {11., 
      49.}}]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 11.}, {0, 49.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.71285066733521*^9, 3.7128526881713333`*^9, 
  3.713052738292885*^9, 
  3.713059347281166*^9},ExpressionUUID->"cf444e2d-ca13-4e30-9211-\
e457a1ae4d64"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "will", " ", "Define", " ", "a", " ", "Family", " ", "of", " ", 
    
    RowBox[{"Functions", ":", "  ", 
     RowBox[{
     "This", " ", "will", " ", "be", " ", "useful", " ", "when", " ", "we", 
      " ", "program", " ", "methods", " ", "of", " ", "interpolating", " ", 
      RowBox[{"functions", ".", "\[IndentingNewLine]", "Notice"}], " ", "the",
       " ", "Subscript"}], ":"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plotlist", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
      RowBox[{"i", " ", "\[LessEqual]", " ", "5"}], ",", " ", 
      RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "i"], "[", "x_", "]"}], " ", ":=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"h", "[", "i", "]"}], " ", "*", " ", 
          RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
         RowBox[{"i", " ", "*", " ", "x"}], " ", "+", " ", "i"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"plotlist", ",", " ", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["f", "i"], "[", "x", "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.712850771235095*^9, 3.7128510287891207`*^9}, {
  3.7130593571668987`*^9, 
  3.713059379982698*^9}},ExpressionUUID->"465376b0-f201-44dd-a042-\
d7fd03a3b1e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "plotlist", "]"}]], "Input",
 CellChangeTimes->{{3.712850984156293*^9, 
  3.712850990871113*^9}},ExpressionUUID->"c2fb66a5-e46e-4b8c-a8f3-\
6265a468e13c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
hQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$6432#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/wAZ/+cx
        "]]},
      Annotation[#, "Charting`Private`Tag$6473#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
tufe
        "]]},
      Annotation[#, "Charting`Private`Tag$6514#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$6555#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
sg==
        "]]},
      Annotation[#, "Charting`Private`Tag$6596#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {0., 230.9999907142858}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7128509912408648`*^9, 3.712852691539195*^9, 
  3.71305273854397*^9, 
  3.713059386942494*^9},ExpressionUUID->"e7c33d4f-186d-4332-aec6-\
f47f57e8cc0f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 6. Error", "Section",
 CellChangeTimes->{{3.712848023076098*^9, 3.712848030027891*^9}, {
  3.7128497881032257`*^9, 3.712849804253828*^9}, {3.712851111764839*^9, 
  3.712851114163924*^9}},ExpressionUUID->"3e23f283-87e1-4cbb-a735-\
ff1e058a93ff"],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{
   RowBox[{
   "When", " ", "Pandora", " ", "opened", " ", "the", " ", "box", " ", "of", 
    " ", "all", " ", "of", " ", "the", " ", "horrible", " ", "computational", 
    " ", "errors", " ", "in", " ", "the", " ", "universe"}], ",", " ", 
   RowBox[{
   "many", " ", "types", " ", "of", " ", "error", " ", "sprang", " ", 
    RowBox[{"out", ".", " ", "To"}], " ", "name", " ", "a", " ", 
    RowBox[{"few", ":", " ", 
     RowBox[{"Type", " ", "1"}]}]}], ",", " ", 
   RowBox[{"Type", " ", "2"}], ",", " ", 
   RowBox[{"systemic", " ", "error"}], ",", " ", 
   RowBox[{"roundoff", " ", "error"}], ",", " ", 
   RowBox[{"compound", " ", 
    RowBox[{"error", ".", " ", "Lets"}], " ", "talk", " ", "about", " ", 
    "some", " ", "of", " ", 
    RowBox[{
    "these", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "When"}], " ",
     "we", " ", "program", " ", "Gauss", " ", "Jordan", " ", 
    RowBox[{"elimination", ":", " ", 
     RowBox[{
     "you", " ", "will", " ", "see", " ", "that", " ", "a", " ", "small", " ",
       "error", " ", "in", " ", "the", " ", "top", " ", "left", " ", "hand", 
      " ", "corner", " ", "of", " ", "the", " ", "matrix", " ", "will", " ", 
      "propagate", " ", "through", " ", "the", " ", "entirety", " ", "of", 
      " ", "our", " ", "comptuations", " ", "compounding", " ", "itself", " ",
       "in", " ", "the", " ", "bottom", " ", 
      RowBox[{"right", ".", " ", "The"}], " ", "larger", " ", "the", " ", 
      "matrix", " ", "the", " ", "larger", " ", "the", " ", 
      RowBox[{"error", ".", "  ", "When"}], " ", "you", " ", "type", " ", 
      "your", " ", "less", " ", "than", " ", "the", " ", "wrong", " ", "way", 
      " ", "in", " ", "the", " ", "test", " ", "condition", " ", "of", " ", 
      "a", " ", "while", " ", "loop", " ", "and", " ", "you", " ", "spiral", 
      " ", "off", " ", "into", " ", "an", " ", "infinite", " ", "oblivion", 
      " ", "of", " ", "Print", " ", "statements", " ", "this", " ", "is", " ",
       "an", " ", "example", " ", "of", " ", "an", " ", "error", " ", "in", 
      " ", "logic", " ", "or", " ", "a", " ", "systemic", " ", 
      RowBox[{"error", ".", " ", "When"}], " ", "we", " ", "approximate", " ",
       "a", " ", "function"}]}]}], ",", " ", 
   RowBox[{"or", " ", "its", " ", "integral"}], ",", " ", 
   RowBox[{
   "or", " ", "its", " ", "derivative", " ", "we", " ", "are", " ", "going", 
    " ", "to", " ", "have", " ", "some", " ", "error", " ", "by", " ", 
    "virtue", " ", "of", " ", "the", " ", "fact", " ", "that", " ", "we", " ",
     "are", " ", "looking", " ", "for", " ", "an", " ", 
    RowBox[{"approximation", ".", " ", "However"}]}], ",", " ", 
   RowBox[{
   "approximations", " ", "wouldnt", " ", "be", " ", "of", " ", "very", " ", 
    "much", " ", "use", " ", "to", " ", "us", " ", "unless", " ", "we", " ", 
    "had", " ", "some", " ", "method", " ", "for", " ", "bounding", " ", 
    "the", " ", 
    RowBox[{"error", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712851137511951*^9, 3.712851281562551*^9}, {
  3.7128513172099648`*^9, 
  3.712851535920617*^9}},ExpressionUUID->"b2d05d51-8cea-4870-bff7-\
2d6bfe4ed43d"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "suppose", " ", "we", " ", "know", " ", "the", " ", "function", " ", "f", 
     
     RowBox[{"(", "1", ")"}]}], " ", "=", " ", "1"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"and", " ", "f", 
      RowBox[{"(", "1.1", ")"}]}], " ", "=", " ", "1.21"}], ";", " ", 
    RowBox[{"We", " ", "could", " ", "then", " ", "use", " ", 
     RowBox[{"Newton", "'"}], "s", " ", "quotient", " ", "to", " ", 
     "estimate", " ", "the", " ", "value", " ", "of", " ", "the", " ", 
     "derivative", " ", "at", " ", "the", " ", "point", " ", "1."}]}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.712851545916524*^9, 
  3.712851627126156*^9}},ExpressionUUID->"3b5b3ae5-74e2-47c7-94a9-\
04f68fff3ef9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.712851644309671*^9, 
  3.7128516481309633`*^9}},ExpressionUUID->"934a515f-407f-485a-8693-\
79ce1d0e546d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", "1.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fa", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fb", " ", "=", " ", "1.21"}], ";"}]}], "Input",
 CellChangeTimes->{{3.712851629194154*^9, 
  3.712851659291589*^9}},ExpressionUUID->"c50f5635-9a9e-4d27-8227-\
1af55650d18a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"estd", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"fb", " ", "-", " ", "fa"}], ")"}], "/", " ", 
    RowBox[{"(", 
     RowBox[{"b", " ", "-", "a"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.712851662735587*^9, 
  3.712851687810212*^9}},ExpressionUUID->"091d27bb-2ff8-4519-a6dc-\
9314f0614434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", "estd", "]"}]], "Input",
 CellChangeTimes->{{3.7128516927362843`*^9, 
  3.712851697250918*^9}},ExpressionUUID->"a41e0d56-60d7-4509-b88d-\
9b452ccb9f88"],

Cell[BoxData["2.099999999999998`"], "Print",
 CellChangeTimes->{3.712851697753923*^9, 3.712852478337377*^9, 
  3.712852696730748*^9, 3.713052738668652*^9, 
  3.713059393088317*^9},ExpressionUUID->"28d1f2d0-c78d-417b-8a67-\
e42a24867c8d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "this", " ", "is", " ", "our", " ", "estimate", " ", "for", " ", "the", " ",
    "derivative", " ", "of", " ", "the", " ", "function", " ", "at", " ", 
   "1."}], "*)"}]], "Input",
 CellChangeTimes->{{3.712851705609743*^9, 
  3.7128517180498877`*^9}},ExpressionUUID->"501cf91f-e31f-41b2-8ae3-\
5d505a42a60d"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"In", " ", "fact"}], ",", " ", 
   RowBox[{"our", " ", "function", " ", "is"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712851721245796*^9, 
  3.712851732033658*^9}},ExpressionUUID->"92f5aba6-b50a-40dc-9a45-\
98d3b19c3603"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", "^", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7128517345028687`*^9, 
  3.7128517419305964`*^9}},ExpressionUUID->"edb482da-b30b-485d-ba5a-\
7147b95a983c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "y_", "]"}], " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"f", "[", "y", "]"}], ",", "y"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.712851748958956*^9, 3.712851919015008*^9}, {
  3.7128524997814417`*^9, 3.712852517889503*^9}, {3.7128525682929707`*^9, 
  3.712852599496335*^9}},ExpressionUUID->"fd2f9dc3-934e-443f-a129-\
8bc688b015e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.712851831394189*^9, 3.712851833128325*^9}, {
  3.712852575296752*^9, 
  3.7128525753917427`*^9}},ExpressionUUID->"edfdaa5b-4bc8-4a15-b87f-\
97af936fba65"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.712851833609684*^9, 3.7128518583565598`*^9}, 
   3.71285190322113*^9, 3.712852484643889*^9, 3.71285253022757*^9, {
   3.7128525723255863`*^9, 3.712852601347233*^9}, 3.712852702397444*^9, 
   3.713052738835456*^9, 
   3.713059398060405*^9},ExpressionUUID->"2e6ca4fe-f2cd-4959-9400-\
34628a8dfc51"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "to", " ", "do", " ", "this", " ", "correctly", " ", "we", " ", "omit", " ",
    "the", " ", "second", " ", "colon", " ", "in", " ", "the", " ", 
   "definition", " ", "of", " ", "g"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.712852584008917*^9, 
  3.712852625854617*^9}},ExpressionUUID->"603d8f90-68e6-4160-bdf1-\
29e9a6d2382d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"See", " ", "the", " ", "definition", " ", "of", " ", "error"}], 
    ",", " ", 
    RowBox[{"absolute", " ", "error"}], ",", " ", 
    RowBox[{"relative", " ", "error"}], " ", ",", 
    RowBox[{"relative", " ", "absolute", " ", 
     RowBox[{"error", ".", " ", "from"}], " ", "class", " ", "notes"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7128527142536907`*^9, 3.712852808338126*^9}, {
  3.712852846971026*^9, 
  3.712852849306398*^9}},ExpressionUUID->"1e1254e6-68ac-46d3-a440-\
228af35a920e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e", " ", "=", 
  RowBox[{
   RowBox[{"g", "[", "1", "]"}], " ", "-", " ", "estd"}]}]], "Input",
 CellChangeTimes->{{3.712852534041436*^9, 3.7128525660605297`*^9}, {
  3.712852811075746*^9, 3.712852822308185*^9}, {3.712852857098727*^9, 
  3.7128528795047626`*^9}},ExpressionUUID->"187132e1-6336-4561-abe1-\
33439d1547ef"],

Cell[BoxData[
 RowBox[{"-", "0.09999999999999787`"}]], "Output",
 CellChangeTimes->{{3.7128525482715893`*^9, 3.7128525579982653`*^9}, {
   3.712852868572393*^9, 3.712852879810417*^9}, 3.713052739001099*^9, 
   3.713059400124873*^9},ExpressionUUID->"6579ab09-acc7-4137-b588-\
253464806111"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"absoluteError", " ", "=", " ", 
  RowBox[{"Abs", "[", "e", "]"}]}]], "Input",
 CellChangeTimes->{{3.712852882735087*^9, 
  3.71285289508033*^9}},ExpressionUUID->"982107af-803a-4d0f-9da3-\
5636b7dc5695"],

Cell[BoxData["0.09999999999999787`"], "Output",
 CellChangeTimes->{{3.712852891515376*^9, 3.7128528954262733`*^9}, 
   3.7130527390297823`*^9, 
   3.713059401788838*^9},ExpressionUUID->"0746a1e7-97cd-40bc-8ce4-\
11226c1dd501"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"relativeError", " ", "=", " ", 
  RowBox[{"e", "/", 
   RowBox[{"g", "[", "1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.712852899011147*^9, 
  3.712852911135845*^9}},ExpressionUUID->"d5b7889e-3976-4f61-84bc-\
c678cd331318"],

Cell[BoxData[
 RowBox[{"-", "0.049999999999998934`"}]], "Output",
 CellChangeTimes->{3.712852911611714*^9, 3.713052739066782*^9, 
  3.713059403481701*^9},ExpressionUUID->"cde8348b-8b20-4e98-9ba0-\
9fc55070ec78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"relativeAbsError", " ", "=", " ", 
  RowBox[{"Abs", "[", "relativeError", "]"}]}]], "Input",
 CellChangeTimes->{{3.712852915515615*^9, 
  3.712852929023356*^9}},ExpressionUUID->"63c67b16-9150-47fa-bfc9-\
2020a87867e4"],

Cell[BoxData["0.049999999999998934`"], "Output",
 CellChangeTimes->{3.7128529301747723`*^9, 3.713052739117902*^9, 
  3.713059405132505*^9},ExpressionUUID->"330049ee-e0d8-4ba8-af57-\
e22547c8004b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Homework Due Wednesday September 6th:

For these exercises you will need to define functions f and g. 

If you can: Use a For loop to compute the error for each value of x. You will \
have an expression like 10^(-i) somewhere in the body of the For loop. Append \
the error to a list, then print the list and plot the list using ListPlot.
\
\>", "Subsubsection",
 CellChangeTimes->{{3.712848667146677*^9, 3.712848683665944*^9}, {
  3.712848714378438*^9, 3.712848724841958*^9}, {3.712848946263383*^9, 
  3.712849022419422*^9}, {3.7128490654733887`*^9, 3.712849309788837*^9}, {
  3.712853045494484*^9, 3.7128530484144278`*^9}, {3.712853676255618*^9, 
  3.712853732222664*^9}, {3.7128540733941317`*^9, 3.7128540838061943`*^9}, {
  3.713059180798992*^9, 3.713059181145005*^9}, {3.713059222438115*^9, 
  3.713059230902321*^9}},ExpressionUUID->"9264fa6e-7995-45f4-a262-\
e865fe92602f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvc+r/Uy3JxR04kjEP0DamQPJ2GlmOgq0OsukW28aJ9dwu0ECjkIjBHpg
JhrE7jiJKLEHASH0IMINdHe0CULoS2gJTRDyNkTIC/UOapDBsdaqSnZ+7+x9
9j7nfJ+nPvA833P2ya4fK1VrVa1VtT7/7t/8L/+6+a8pivK3/w32v7/+N/4r
7S/+4m/Y//G/xX75T//8b/8Xf+vP/+w//4/+/O/82d/6s7/4D/7mv84+/BP7
76+x5+HnDwkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQmJ
t4P23TF68pVN6ao8zSv6lVVKSEhISLwJJNeUExjlV6n7oU14lVbcfFGVEhIS
EhJvRuEbqNr1vBefDH0dWMzy6MVX7WCGJub2xYzqL6pSQkJCQuLNKEf7IqwJ
6XvYttSmovjl17nIwD+WVV/qkpOQkJCQeCdG+8K9YUOgKTbsZOAHj5kc0qRJ
mmVZmqZVN3wMXZYk8GuS1qMx6Os89D3HcbwgrvsBSumrJI6jMEzrvq9S3/Pj
dHK2DU2R+J7rul4QxmULpXQVKzWJo7jsBv5MnSe+6zquF8ZREKST3dnWBaBd
Fgf4eAC1ZtzJRoo0ycr2K4QoISEhIbHBaF8UN8mz0GE/eAV6ygbQ3rSOjSlI
45RMaTv8Z9WIYbcxpC5+XXfTPLHwL2FFaBWJL6m6On7bTpmqb3ltquUngTnt
m+rIEm1AJ13msm8bUZYXeWKzH1WPN2i3LmavbDCPXl4UWeyx6lS3YE/XES9f
zfqT3ktISEhIvAuTfVE1jdsCYV9myD2dK/YsC9kzTiqi8H3uweeaJ75AMnjO
CHEnVPJyg7ov8Otu1hU+lmOGuB+p8AEtJ7dmYNW9B8Efr+rIwMvU/f64rj9h
7EZz057C421s6d7cvmjSvkhISEh8C6b4S4nq2Rk3ER9dalnh6JgikSU2IkZY
Td/lhgPC8ik40LIsgrL4doMW+DerRocZgaBO7+OuRvdLUWjX1C2ZNwPtCxWW
QWyArLjozuoSFY3bKjsYozikzKR/TEJCQuLbMNkX3EfQ1HMTjKx0qa2o/i3g
3oojXpqbbb/r+gJBGEZJAfsXWhhoS2Yhe8K3L0ZQHjVDbJ1IE7kzG6MocTOc
1NVXqW3MjlprvtyySEhISHw7pvh+sbjtQgKdbQ4K8dtQ27A3sAzcxFjjFqYK
uIvLn321i6P8yL6E/HE3nz6q0zhv6dQMHw6xEV9TI9h2sF1Pm4UQXfHy/qiu
PzWRqrpgUAbat5VvqtwnNjQpa61qeM3wISEhISHxtaB936WucC9FVdd3Xd/3
TZU5aEictKWk75rCHYPstPT4w15aQ7iDVjzOboUFngZoYIei+pSSrk50tCV1
15PRJJAy4F8P0OXVFT4GaNjjPW+GHVd0wG0O+yJaJlJF8ExFjur6/7AQ00ej
9jHg2QCnBX8a39Goafc9wpWQkJD4/YIUp/f3Qas3sS1+0QPQ920MB7RU3Mbw
OD6pA9u4xT9MvybjfUlVPBjVtz1HX8bWrVbNh7PEhMdl+MNB9f+yX1VtOnem
WEEutiB7ddE6hIJujxtRCRaF1niGTXNquX+RkJCQ+HUxUMRVVQ6Pk8OnRTnD
QYmbuobTxyUkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQk
fgJI2/SvTCA6dO37iOBo25LVR69u/x2w6tYtAOq83Hcdx/GS3zCzKmki1knb
CdKSZ04froiesOFA7z2zLlnitw5SZrHvua7rxXmDvydpvZ1YrwVt6qosirp7
6SijXQWllp/SQkOXhr7jBsVr2/aFIFXK3meYLKZwmzqKYr+UrI1GhqLvkZm+
oGSTlVzNP3pD+++giS1FdRfsQ10MjOF06GvguXDS36SJaVm3o5oMfeVgJ+Gz
LlWBhfZsRmTAl3s+GPZKvg+2jGk7RNs0OCmZtRs/acVcpz0+xP5HZA7212Jo
ikhXjPxxm9CXEWc89uM0zxNHV1Td1BTFLV61Lu2Ra2zDd0wrFwmRVbfY/dp1
zFP60zrmBJ3e0+1Hok/dQW4zzX+hlR1IPx/4dQxka+cT9kmQgoncwPd6GxJt
wvpTvL621gZpv3g1UoeGYkQLNfGu9t9B4amKfVODpGA2zuJGpWR/cvKjL15B
mwc6Z1hSdT+tP9fS14HkMDJb5AAEOkKXz6UBeJrMQzKmoTbuUgEelHwHtHZ1
daKMStgKo8vM2wec33aYaBZNP7tb5Hfhl+MfIWUAfGHIH/boLO+ROFK1k/ms
LQLzU/p5jc6F9rl7424INEXzPmlfOs9cGq+h1D/RflKwYa+xdXMVum5c3f/C
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
+aVDMQ5tsSfFsIQE7LDDEvNxkzL9HEsxfpI/nRZ7bzpMJoMC2U0vpgaaVfe4
GI+fORNjn6oitzwPql6eLzf7ImZb6IQYxYlCmES0yuLA98M4H3NtkbosCzBq
tCnSJC32qKagnCKJfN+Ps5vDcyBNGgV+EGbVyqQOdZ5ALUnOTxtB4mt4sySP
4zjJmoM6SNc2EDASd5Z5vrW2hZb2dR5CVUk9/+6NtoBgjCfnC0UCC9lFxGfo
KjYcWIvyk9vjpIXu+EFSNGMH+7oAPk07Lppm/5ukKeKI/Rly8eZJkuZfdejm
K/mgMYe27mcd6YvQdi4H+Ffz5VLth5ToZxiAhlXhAWnMKrlDGrKPlRgv1X5J
1Ns29hAS7QhpXJUphOsTem1f3idGUthMffKfE1PRLjKhbBXjO8XIGib4ioZC
fcRlvRTjW+eL8Hs86jJ6RozPzRfIZBWOI7C1VOv6ETduX9ysBbXKBDIFPoYG
km3rXlFXMZAa6inkSO8jDC1ohqGh+28nARrBlNpmUFY5/hChEof1mBEWFeag
1m8ZMFrooGImRYn8NSZbEnC5GZrmhEmEVe95/GjmC4+4HUN3eaZ0RXX+yf8O
PyRVleID4STMSTnQ2sOdHk+IB1u/WciJJ6K3o7xMkRd7z3lCqgi7mNZVBtkE
jQAa2BeOyYVjmqa7tRwtM/2ak6Y++k4120U2r/hLjgF8IR90taBz0q6fH1vb
lyu1n1KiH6MPTM30wjiCaJl3fb+/a1/u1H5J1AdoQxuTm+tWcln5rO3LG8XY
+qbhRnHoGIruXteOD/HaTx8+Kca+MNlEjyLH0Kwgf9ZMv5k/nT5m+0SbnhDj
ky+axLaumfxV6278wAlqbl/4+TjUB0KGQLA1y5aMzMYuXweEoERtpqZjx47K
tfQSJEYQn/apguQdPNMpdyMjZ5IgIULebfFGKuSzYUJe8EKix/soKD8jZeN1
QYMLDOnxBR8Ys2nbvpDtMOc2HSZPJjokJwpUdLpuPHVDbU5UOwCgUdNFiqdK
XwWzJkDtfF/ZQwOtlHYJ+9f/mqOnvwIf9Ll9ubrwvkyJzva7dd08lrnq7v5l
p/ZLon4hzu3Ly8XYNXVzL6naCk/x2n9GjJS96UdzlF2wL6+cL3378FWxZ8T4
iRdNe5gvjx4sXvhjQeNxMjhg+JrvTZB0j99lOM3bjKcs2Co9SZOE/YfkL3BC
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
YmPiBB+barL+drHtsLfTZaxAwxdfLD1Ndbd7igOJ9fDdsJrtdzaf3Hnj8wuh
aHMV43l2ewkJid8PqtjlB7d0VbECrrWGAsMTBp7O0uwItB7FML0KbiDVCrPQ
wt/Yr1qQpbYq/mSBHeGKDkMSeJbMDotpwUuqGMq0bFODOrlTCePj/IiUqqmq
sHdDG5hQvm1bbFuQHNAy8kNTmqZqDqzAUVViW1Q7y0NNNBJOjUFgO7L5qTeD
dTbchMihm5WDJ9IsS1cNx3d0HrQZQKsbuu1ZmmracKxKNX3cHZQ8/GLYDvuG
onu8mayb8AyTIPxjZS1dChD1M6k9OHZn2pahCveaovPAPcWjbiprisUNGqkT
qEgHwamGv8/du5EYKQNlrFR3UjhhsPnk8I0PNYpCyG88h1DDITk7kTsYCQmJ
Sxho13Vrr8dAdj68BHSqgJ4kbdftFMBKbluIK7AnCKHD7Qnad/zz2yeEfdTd
WS1T1tTLR5t4v05LZJWyBooDAnT1KGWN78nsphAEcYa+Yz1axUSGHiV43pwe
ZQGav2elzgNC8PWl9LDATeRl2/j7EtvF829cQkJC4msgg8ISEhISEq+GcKrg
dTw7ll56CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJ
CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJ
CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJ
CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJiW8DaSLfdWwnSEv6E8r5
TpA88h3H8YK0fUMfSJMzCbHik7L9CeVISEg8A9K1/fC64gZW3OtKW4O0zSsb
e4xhp6bWUtSoJkNfOaqiOOn+N0Ge5wr3WjnfCdo23bmYE0sx43oY+gT78GLd
3cWKYtV06OsYJbRffN825LyV18qReCmGrmFo27YRaLs7r+lr0ber9kELn1oi
0aaqiqLYUUm0q6uyyIt3LL3eD9rw1tef1uSk0BUlrF8oBRoZih6UryvwhjZ1
FMVuvmasdinTSHEzkwzJFfZJC9XT0lMUd1f6ma2o/mn3r5XzjaAVtIqcPdK7
imImqK5poSpqfvr0oyAFe9EWNwalpypOvvdUYyhKelrvtXLWoF3LtE8HYEqo
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
xE8Dj8B6CfAZR7sHTlz92lGxzlEvjc9HIe2LhMRLwD11uuvDJVPVXF63hqsQ
Ud3fSypCfE17Q9bEgVKSOpq0L78x8Osn4DY8yGLEtDvkZqV3RlTlG9ujoZ8H
q7fBYffykiUkfoegfQeJddqtGoerEODVj14/iy80q+CxB3/j+Zf41cHdkEd/
xev2BydG3g4aW+qJ7ZOQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQ
kJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQ
kJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQ
kJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJA4QZPFeUu/uxUSEhISX4KB
FHGQNt+m9EiT+67jOF5Stt/SgIHUceC5jhvEBXlnRX3uqmZ8XdB9EXpJ88YG
HaNJwzDJq7rKoiCp3yqVE9A88l0X3os0yRISvxxondimoSiKW/Tf04IuVhSr
pkNfx6qiOOnXmxjqK4oes3r7QFNUv3xXPUNtKmb9QLsKTVFUr3hXe05ReKxy
gGZH3fAtTeh9XTHD8oOWbGBE7fc04rsxdA1D27aNQNuRHyeJTSPZL/0zaxLa
NWVZ5EW97SL7U1UWRdn8uN5L3MHA9Op32RdSOMy+cKNSeqri5F/eBJo4dozD
NrOV9zWgDgzdry4/TkLLtE1V+yb7kntO/l27FkSbWIoZ44+0LstvsnGfxtCn
vq0xqIqq22n12CwbmtQydGHoDdOyTF2Fn0037t7U4D1Qeib9TSMZYMmq6E7+
4Kqgjh34ouptxST+pOz86VWgXeUZbMK9rIahTdkqzQivz/qfgl1RDG1mspej
wbI3yK8PQML0+uP2ZWiKSFeMpRbqI4vtAdhkUgwvveTTGHq21uHN8FVFe2T7
8EIh9E2ZBBZr9WMOMtrnoa3o/vJL+0LIHN0vr5ZeBRbrVx1oqvuYfdmVSZ24
MPeZSDSnutaEwmUvw3IdSze9x9xjj8jkBLkLzbUc1zF1O8x/UfNSB6zHagWt
J6EJOvcJq12xjZyil6MI+iL4/9u7fl1ZeSTfT8Q78AS8ADExKSkZ2ZCRERGs
2ISIiGBIFmkXzQwJ0ooArcQEBIzkCRw4OOsqGxpo6IZzu2/3vde/4Ptu96FN
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
8A==
    "], {{0, 243}, {544, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVeQVY1M23/3w3Wdilu7u7Q7pLulFYllrapREkRQEVLFRAkRKREgwQEQEJ
UQQJAcEAFBVExUBB6n7BeH//93/vc587zzOznz1z5sw5c87E2RXwCbf3RwAA
Iqngxp4Yq0+hEOMd6OEvTmGR5IAwP1/zsCi/AD+Kug8EE/FccAO48MSIiBAE
zBUaFkWxNzXgd3Vz58fOAAggAQGoAQKRFBmhb2trBf7H8n0MbAsEIzLbsv5n
vv+2MPj6RZIAgGxh7OMbSQqF8XUAULSkCEoUAOgumC4UGxWxjd/BmJkCKwjj
9W0csIMx2zYy+/zCwjs8jvaGMFYHgApPJFICAKA1gun8MaQAWA6tL9zHGOZL
DoNZ42CsQwokwjTOZphHOjQ0fBu/hrG4z3/ICfh/ZPr8lUkkBvzFv2zZKVRG
5MiIEGL8/3E5/vcSGhL9Zw4BuOIDKWb22zbD61YUHG65jfEwvhrms9sGxoww
biX77vBv44HAaDOn3/zTpEhDeM0AK4y/+RKNLGHMDQCCOjrYSf83FiVSdsbC
/AgDcpS542/sTAm3/y0fERQWstvqlxxEYqCf+R98wi/S2OEPjz/ZxBzGsK8Q
lxMCHV1+6YlojiE774YxLYy7IoMdLH+PHU4INNz9h4cSbb+tM+xbxDt/ion9
Lx4kPjTyj11IQRJxZy52GCtHBTqa/RqLtPL1MzL+NS/S1S/M6bc+yMCIKAP7
3/wJESE78b1NP+EXYrpNF4RxeWSMw5+xPVFwUP2yHTkWRLSw/aUzciEiytbx
tz4rwAoYAiPAD6Lh6gPCQRAgDyw2LcLffvWYACKggADgB2R+U/6McNnpCYNb
B5AAPsDID0T+HWew0+sHYmD6xl/qr1YG+O/0xuyMCAZvYByK4kTpoLRQVnCr
B1dFlDpK4884fro/s2KMMUYYM4wJRuKvHiRY6xC4UgD5v6FZwp9+sHXbuoT9
seEfeeg36CH0LPoJehr9FDiD1ztSfnN5kdMo/9KcH1iDaViayW/rfGCZ8394
UKKw1iooA5Q2rD+sO4oVxQlkUMqwJfooXdg2FZj6nxpG/9Xtn7X893zbWv+n
Pb/ptJK0Kr+18PnrGcO/XP+WYvgfa+QLf1r+mxN5GHkN2YvsQPYhW5FNgB95
F9mM7Efe2cZ/I+H1TiT8mc1+R7dgWA75D498tfy8/Pr/NzvxtwaUHX+DKL+4
qO1NYBgeEU8hBwRG8evDp7Afv3kYSVaaX1FeQQ2A7TP915Hx1X7nrIZYB/+h
kccAUG2AiRP/0ALgmG6ZBQBn9Q9NpAYOefjMvI8jRVNiftFQ2w0aUAM6eGdw
AF4gBMRhmxSBKtACesAYWAAb4AjcwF541QNBKKx1LEgEqSAT5IA8cBoUgGJQ
Bi6DWtAImkAr6AA94CF4DJ6AKTg25sB7sAS+gzUIgrAQAWKCOCA+SASSghQh
dUgHMoasIHvIDfKGAqAwKBpKhNKhHOgEVACVQFVQA3QL6oD6oCHoKTQDzUNf
oJ8IJAKPYEbwIEQRcgh1hD7CEuGI2IMIQOxDJCAyEMcQZxGliBrETUQH4iHi
CWIa8R6xjARIGiQrUgApg1RHGiJtkO5IfyQFeQCZjcxHliLrkC2wr0eQ08hF
5CoKg2JC8aNk4Pg0QzmhSKh9qAOoI6gC1GXUTVQXagQ1g1pCbaIJaG60FFoT
bY52RQegY9GZ6Hz0JfQNdDe8d+bQ3zEYDCtGDKMG7003TBBmP+YI5jymHtOO
GcK8wixjsVgOrBRWG2uDJWKjsJnYc9ga7F3sMHYOu0JFQ8VHpUhlQuVOFUaV
RpVPdYWqjWqY6i3VGo4eJ4LTxNngfHHxuFxcOa4FN4ibw61RM1CLUWtTO1IH
UadSn6Wuo+6mfkb9lYaGRpBGg8aOhkyTQnOW5irNfZoZmlU8I14Sb4j3xEfj
j+Er8e34p/ivBAJBlKBHcCdEEY4Rqgj3CC8IK7RMtLK05rS+tMm0hbQ3aYdp
P9Lh6ETo9On20iXQ5dNdoxukW6TH0YvSG9IT6Q/QF9Lfoh+nX2ZgYlBgsGEI
ZTjCcIWhj+EdI5ZRlNGY0Zcxg7GM8R7jKyYkkxCTIROJKZ2pnKmbaY4ZwyzG
bM4cxJzDXMs8wLzEwsiizOLMEsdSyHKHZZoVySrKas4awprL2sg6xvqTjYdN
n82PLYutjm2Y7Qc7F7seux97Nns9+xP2nxz8HMYcwRzHOZo4nnOiOCU57Thj
OS9wdnMucjFzaXGRuLK5GrkmuRHcktz23Pu5y7j7uZd5eHlMeSJ4zvHc41nk
ZeXV4w3iPcXbxjvPx8Snw0fmO8V3l2+Bn4Vfnz+E/yx/F/+SALeAmUC0QInA
gMCaoJigk2CaYL3gcyFqIXUhf6FTQp1CS8J8wtbCicLVwpMiOBF1kUCRMyK9
Ij9ExURdRA+JNom+E2MXMxdLEKsWeyZOENcV3ydeKj4qgZFQlwiWOC/xWBIh
qSIZKFkoOSiFkFKVIkudlxqSRktrSIdJl0qPy+Bl9GViZKplZmRZZa1k02Sb
ZD/KCcu5yx2X65XblFeRD5Evl59SYFSwUEhTaFH4oiipSFIsVBxVIiiZKCUr
NSt9VpZS9lO+oDyhwqRirXJIpVNlQ1VNlaJapzqvJqzmrVakNq7OrG6rfkT9
vgZaw0AjWaNVY1VTVTNKs1Hzk5aMVrDWFa13u8R2+e0q3/VKW1CbqF2iPa3D
r+Otc1FnWldAl6hbqjurJ6Tnq3dJ762+hH6Qfo3+RwN5A4rBDYMfhpqGSYbt
RkgjU6NsowFjRmMn4wLjFyaCJgEm1SZLpiqm+03bzdBmlmbHzcbNecxJ5lXm
SxZqFkkWXZZ4SwfLAstZK0krilWLNcLawvqk9bPdIrvDdjfZABtzm5M2z23F
bPfZ3rbD2NnaFdq9sVewT7TvdWBy8HK44vDd0cAx13HKSdwp2qnTmc7Z07nK
+YeLkcsJl2lXOdck14dunG5kt2Z3rLuz+yX3ZQ9jj9Mec54qnpmeY3vE9sTt
6dvLuTdk7x0vOi+i1zVvtLeL9xXvdaINsZS47GPuU+SzRDIknSG999XzPeU7
76ftd8Lvrb+2/wn/dwHaAScD5gN1A/MDF8mG5ALy5yCzoOKgH8E2wZXBWyEu
IfWhVKHeobfCGMOCw7rCecPjwocipCIyI6b3ae47vW+JYkm5FAlF7olsjmKG
H8/90eLRB6NnYnRiCmNWYp1jr8UxxIXF9cdLxmfFv00wSajYj9pP2t+ZKJCY
mjiTpJ9UcgA64HOgM1koOSN5LsU05XIqdWpw6qM0+bQTad/SXdJbMngyUjJe
HTQ9WJ1Jm0nJHD+kdaj4MOow+fBAllLWuazNbN/sBznyOfk560dIRx4cVTh6
9ujWMf9jA7mquRfyMHlheWPHdY9fPsFwIuHEq5PWJ2+e4j+Vferbaa/TffnK
+cVnqM9En5k+a3W2+Zzwubxz6wWBBU8KDQrri7iLsop+nPc9P3xB70JdMU9x
TvHPi+SLEyWmJTdLRUvzyzBlMWVvyp3LeyvUK6oucV7KubRRGVY5fdn+cleV
WlXVFe4rudWI6ujq+RrPmse1RrXNdTJ1JfWs9TlXwdXoqwsN3g1jjZaNndfU
r9VdF7ledIPpRvZN6Gb8zaWmwKbpZrfmoVsWtzpbtFpu3Ja9Xdkq0Fp4h+VO
bht1W0bb1t2Eu8vtEe2LHQEdrzq9Oqfuud4b7bLrGui27L7fY9Jzr1e/9+59
7futfZp9tx6oP2h6qPrwZr9K/41HKo9uDKgO3BxUG2x+rPG4ZWjXUNuw7nDH
iNFIz6j56MMnu58MjTmNTYx7jk9P+E68exry9PNkzOTaVMoz9LPs5/TP819w
vyh9KfGyflp1+s6M0Uz/rMPs1CvSq/evI1+vz2W8IbzJf8v3tuqd4rvWeZP5
xwseC3PvI96vLWZ+YPhQ9FH84/VPep/6l1yX5j5TPm99OfKV42vlN+Vvncu2
yy++h35f+5G9wrFyeVV9tfeny8+3a7Hr2PWzGxIbLZuWm8+2Qre2IogU4s5T
AAlXhL8/AF8qASC4AcD0GABq2l851++ChB8f2zmqMyQLvUd0ISNRIqgFdAnG
CyuAnaIqxQVRK1Kv0wziiwlRtLvpJOgx9LMM3YyXmLKYw1mcWY3ZXNhDOTI5
L3K1cA/zLPLh+IUF9AW9hZKEC0VuiU6K/ZTgktSR8pFOl6mSHZT7qsCuqKtE
Us5RaVAdUvuoQdCU1DLZ5aN9QKdA97regP5bg00jdmNZEyNTF7Ng80SLY5YX
rOqs7+zut5m0fWP3zQFyxDuxOXO78LkKuYm5S3soemruMdxr6eXkTSKG+xwg
HfUt9mvw7w6YDFwKogrmD9EIdQgLD8+OqNjXQXkRuRbNHqMS6xi3Lz4voX7/
YOKnA/TJSilOqXFpRekdGW8y8YeUDrtnpWVX5YwcWT8mmmuTF3+8/MSjk59O
0+UrnHE6G3euqKCj8O15wgWVYs+L6SVXSofKflRwX9Kv9Lt8qOryld7q1zVb
dez18ldNGzwbKdeyrl+4cfVma9O95p5b91pu365tLbiT2ka6q9fO1r7Qcasz
9Z5pF67rQXdmj37PWu/1+8F9gn2TD44/tOrH9w89yh9wH+QdnH1cPuQ/LD48
P3JlNOiJ5JP3Y9XjwRPSEx+e1k/um1KeWnnW+jz1hclLwsvR6YKZvbOCs/Ov
brw+NOf1Rvut0Dv6efQC4j31ItcHtY8enw4ttXz+9lX5W9xy2w/sit1q0c83
67Ib0ZstW1s7/heCriLckAzIRpQHmhpdi3GFXzX1VEQcO+4hdQaNAR6Nv0c4
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
3/+r/BeKcNpL
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "Comments" -> 
      Association[
       "XML:com.adobe.xmp" -> 
        "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core 5.4.0> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:exif=http://ns.adobe.com/exif/1.0/> \
<exif:PixelXDimension>544</exif:PixelXDimension> \
<exif:PixelYDimension>243</exif:PixelYDimension></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{544, 243},
  PlotRange->{{0, 544}, {0, 243}}]], "Input",ExpressionUUID->"dcc42f45-9f54-\
4cef-891a-dc1ca9215c66"]
}, Open  ]],

Cell["\<\
Additionally: 

Write a program that plots the iteration counts for each number from 1 to a \
few thousand (of your choice). Some number high enough that it doesn\
\[CloseCurlyQuote]t take forever to run but so that you get something \
interesting.   

Begin by writing a while loop that plays the game for a single number. Once \
this code works, use a For loop to make your program run this while loop a \
number of times. 

You can find the rules here: 
https://en.wikipedia.org/wiki/Collatz_conjecture

The final structure of the program should look something like this:

list = {};

For[i = 1, i <= 1000, ++i,
n = i;
count = 0;

Play the Collatz game starting with n, counting the number of steps it takes \
to finish, use a while loop

append count to list
];

ListPlot[list];

IntegerQ may be a helpful function...
\
\>", "Subsubsection",
 CellChangeTimes->{{3.712848667146677*^9, 3.712848683665944*^9}, {
  3.712848714378438*^9, 3.712848724841958*^9}, {3.712848946263383*^9, 
  3.712849022419422*^9}, {3.7128490654733887`*^9, 3.712849309788837*^9}, {
  3.712853045494484*^9, 3.7128530484144278`*^9}, {3.712853676255618*^9, 
  3.712853810275051*^9}, {3.712853989257224*^9, 3.7128540274380493`*^9}, {
  3.712854216689344*^9, 3.712854273541957*^9}, {3.7128543302981167`*^9, 
  3.7128543357760572`*^9}, {3.713061010304871*^9, 
  3.713061022700391*^9}},ExpressionUUID->"f07d94f7-c0b1-4866-b340-\
927bb9b180f0"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 696},
WindowMargins->{{27, Automatic}, {Automatic, 120}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 204, 8, 260, "Title", "ExpressionUUID" -> \
"5d0f5b30-2099-4844-89a3-ec0cdbcd7e31"],
Cell[CellGroupData[{
Cell[809, 34, 258, 7, 99, "Section", "ExpressionUUID" -> \
"0272b320-a4e0-4e50-97f6-bf5c0bef0817"],
Cell[1070, 43, 567, 11, 54, "Input", "ExpressionUUID" -> \
"1319050f-711b-4b4e-9ff5-bd035f2df9c3"],
Cell[1640, 56, 2815, 53, 201, "Input", "ExpressionUUID" -> \
"2c6fbe91-a25e-4429-9340-e8ceacf88174"],
Cell[4458, 111, 299, 6, 32, "Input", "ExpressionUUID" -> \
"6077afb1-ddb3-4737-8444-46a9b43969c1"],
Cell[4760, 119, 633, 13, 32, "Input", "ExpressionUUID" -> \
"15715a52-0407-471f-8a63-f8eb9fa9865d"],
Cell[5396, 134, 900, 16, 54, "Input", "ExpressionUUID" -> \
"db16ad43-e3f4-4bbe-b3b4-108721b770a5"],
Cell[CellGroupData[{
Cell[6321, 154, 207, 5, 32, "Input", "ExpressionUUID" -> \
"866814a7-8e29-4b66-86b7-33f639840d13"],
Cell[6531, 161, 367, 9, 24, "Message", "ExpressionUUID" -> \
"edbfd6c2-4b6a-4cb2-862b-4107981d3568"]
}, Open  ]],
Cell[6913, 173, 1632, 31, 117, "Input", "ExpressionUUID" -> \
"898d5493-2f47-4ad0-85e5-4f1c8eb567e9"],
Cell[CellGroupData[{
Cell[8570, 208, 224, 5, 32, "Input", "ExpressionUUID" -> \
"a9e2158a-1208-4c61-b21c-8423e599c70e"],
Cell[8797, 215, 227, 5, 24, "Print", "ExpressionUUID" -> \
"0f6a5b4a-291c-48c1-9850-8ceb752153a5"]
}, Open  ]],
Cell[9039, 223, 1321, 30, 75, "Input", "ExpressionUUID" -> \
"f443ecc6-fab5-4fc5-98dc-364c3fe40d06"],
Cell[CellGroupData[{
Cell[10385, 257, 129, 3, 32, "Input", "ExpressionUUID" -> \
"1b0ce429-0950-4495-a644-bd0b43c5efec"],
Cell[10517, 262, 152, 3, 32, "Output", "ExpressionUUID" -> \
"bf0acc16-4d85-4a68-84bd-24ec0649f5c0"]
}, Open  ]],
Cell[10684, 268, 688, 14, 54, "Input", "ExpressionUUID" -> \
"05e23510-745e-458a-9c59-46d7207b35a6"],
Cell[CellGroupData[{
Cell[11397, 286, 288, 7, 32, "Input", "ExpressionUUID" -> \
"545d47b7-e0c6-4ded-bd25-d6a7a64c6781"],
Cell[11688, 295, 174, 2, 24, "Print", "ExpressionUUID" -> \
"9522c64f-e78f-49c3-a8b3-dc2d15c3d400"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11899, 302, 236, 5, 32, "Input", "ExpressionUUID" -> \
"911fba58-6c9f-40c7-8307-f68d263b01da"],
Cell[12138, 309, 177, 3, 32, "Output", "ExpressionUUID" -> \
"ed242efe-a314-4a8c-9d81-450274f6669c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12352, 317, 219, 5, 32, "Input", "ExpressionUUID" -> \
"12b1e2b9-9d62-4be2-80df-8c0cf8f5268b"],
Cell[12574, 324, 151, 3, 24, "Print", "ExpressionUUID" -> \
"c6fee4ed-108c-4b15-867c-0c6fdf6d3769"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12762, 332, 266, 7, 32, "Input", "ExpressionUUID" -> \
"0add1bea-668b-4ec2-8480-e236f097f1b3"],
Cell[13031, 341, 154, 3, 24, "Print", "ExpressionUUID" -> \
"eb18d7b9-3bf8-4ec5-9bc3-bd33533dd60a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13222, 349, 216, 5, 32, "Input", "ExpressionUUID" -> \
"cee55851-f727-4aaa-a024-df8f9c479d56"],
Cell[13441, 356, 151, 3, 24, "Print", "ExpressionUUID" -> \
"0c644b70-aab4-4a74-af8e-99081acaced3"]
}, Open  ]],
Cell[13607, 362, 1764, 32, 96, "Input", "ExpressionUUID" -> \
"d1cf3de0-2a94-4851-bfcc-a8cc148cefb3"],
Cell[CellGroupData[{
Cell[15396, 398, 332, 8, 54, "Input", "ExpressionUUID" -> \
"40f9beaf-2aee-4bb9-812b-d856bff435a2"],
Cell[15731, 408, 175, 3, 24, "Print", "ExpressionUUID" -> \
"4b17bec3-d485-4585-9c65-d02b95cf2846"]
}, Open  ]],
Cell[15921, 414, 466, 10, 32, "Input", "ExpressionUUID" -> \
"4a524d9e-a1c7-4185-802a-718727fb2a2b"],
Cell[CellGroupData[{
Cell[16412, 428, 288, 7, 32, "Input", "ExpressionUUID" -> \
"486e60cf-3e8b-4e82-9fa8-23c8cbc9d0d4"],
Cell[16703, 437, 228, 5, 24, "Print", "ExpressionUUID" -> \
"8f72b950-95d2-4197-bd9c-14b2895710d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16968, 447, 236, 5, 32, "Input", "ExpressionUUID" -> \
"814445a2-ce72-4ae1-aa60-dba47b505c80"],
Cell[17207, 454, 225, 5, 32, "Output", "ExpressionUUID" -> \
"669416ea-4b79-40de-9ac3-0dd3aab97458"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17469, 464, 219, 5, 32, "Input", "ExpressionUUID" -> \
"4bbd32e8-ad39-497b-82da-7965a9c60d30"],
Cell[17691, 471, 200, 4, 25, "Print", "ExpressionUUID" -> \
"a0957db4-ff49-4946-a7b4-ea22a1adb81d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17928, 480, 266, 7, 32, "Input", "ExpressionUUID" -> \
"3a505a2e-41e6-4f6e-907a-9d7192f1abf1"],
Cell[18197, 489, 233, 5, 25, "Print", "ExpressionUUID" -> \
"ff005bfa-8b25-43e5-a4f9-1a90397a1dc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18467, 499, 233, 5, 32, "Input", "ExpressionUUID" -> \
"e6d81b4a-203f-4a3c-9951-9ebf65cbb49b"],
Cell[18703, 506, 175, 4, 32, "Output", "ExpressionUUID" -> \
"7990abc9-d7b9-4922-9088-1292355fae94"]
}, Open  ]],
Cell[18893, 513, 1174, 23, 75, "Input", "ExpressionUUID" -> \
"dc1eb90a-9b7c-4ca5-bd23-acfe6e060ceb"],
Cell[CellGroupData[{
Cell[20092, 540, 230, 6, 32, "Input", "ExpressionUUID" -> \
"c5599b2f-8c07-4702-a6b0-54e7addb7990"],
Cell[20325, 548, 211, 5, 52, "Output", "ExpressionUUID" -> \
"57b19ec4-506b-4bf5-b68a-403a2f1b96f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20573, 558, 182, 4, 32, "Input", "ExpressionUUID" -> \
"d739cee2-5d57-4de2-a257-04b509976977"],
Cell[20758, 564, 154, 3, 32, "Output", "ExpressionUUID" -> \
"b3891d98-f25f-4c48-bb19-fece8861814a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20949, 572, 177, 4, 32, "Input", "ExpressionUUID" -> \
"5d26ff58-7475-4ab7-8183-2134ff852f21"],
Cell[21129, 578, 171, 4, 32, "Output", "ExpressionUUID" -> \
"2cb2b2f6-21f9-4545-a672-0c2240df9337"]
}, Open  ]],
Cell[21315, 585, 880, 17, 75, "Input", "ExpressionUUID" -> \
"48d60430-00a2-499f-b49a-2236a9976b18"],
Cell[CellGroupData[{
Cell[22220, 606, 208, 5, 32, "Input", "ExpressionUUID" -> \
"8412e480-ecfe-4abf-b0e8-75857a5d48e5"],
Cell[22431, 613, 202, 3, 32, "Output", "ExpressionUUID" -> \
"e4374a5f-1074-4814-a840-f670d3344039"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22670, 621, 208, 5, 32, "Input", "ExpressionUUID" -> \
"b79c0263-b900-4694-8dec-f797a4ccfbbf"],
Cell[22881, 628, 175, 3, 32, "Output", "ExpressionUUID" -> \
"bf2b45b5-9170-4494-ae5d-9fa5e74c0737"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23093, 636, 207, 5, 32, "Input", "ExpressionUUID" -> \
"5c6ce930-50bd-4a1f-b6c4-b113a53ff50c"],
Cell[23303, 643, 202, 3, 32, "Output", "ExpressionUUID" -> \
"5acb224a-e3f0-476b-92e8-ff4a5d790842"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23542, 651, 213, 5, 32, "Input", "ExpressionUUID" -> \
"f69ce314-1884-42e8-9719-ea782260bf3c"],
Cell[23758, 658, 195, 3, 32, "Output", "ExpressionUUID" -> \
"b47ed793-32a3-4717-945c-872c6f0838b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23990, 666, 186, 5, 32, "Input", "ExpressionUUID" -> \
"39755c6e-8060-4bf8-b809-8b053b53a105"],
Cell[24179, 673, 277, 5, 32, "Output", "ExpressionUUID" -> \
"ff15b642-214a-492a-be5f-460eebdf357a"]
}, Open  ]],
Cell[24471, 681, 812, 17, 75, "Input", "ExpressionUUID" -> \
"fc6ecd49-1b91-4347-811f-568feee389d6"],
Cell[CellGroupData[{
Cell[25308, 702, 426, 11, 54, "Input", "ExpressionUUID" -> \
"739f4a7e-a90b-41fc-9643-43baddc9ae27"],
Cell[25737, 715, 199, 5, 32, "Output", "ExpressionUUID" -> \
"684c596b-9d28-40fa-9392-e411501da06d"]
}, Open  ]],
Cell[25951, 723, 1912, 34, 159, "Input", "ExpressionUUID" -> \
"0430d948-65fb-4bb3-8abe-de2371ac32f4"],
Cell[CellGroupData[{
Cell[27888, 761, 457, 12, 75, "Input", "ExpressionUUID" -> \
"69d891af-2e60-44b7-92a7-9479a7f263c3"],
Cell[28348, 775, 321, 7, 24, "Message", "ExpressionUUID" -> \
"b8e2539c-d825-42e7-9886-bbd820a97647"],
Cell[28672, 784, 206, 5, 32, "Output", "ExpressionUUID" -> \
"6e736927-d544-49c2-bbd6-65d4314fc6d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28915, 794, 157, 3, 44, "Subsection", "ExpressionUUID" -> \
"2ca35a84-5440-47ce-825a-49690588c63e"],
Cell[29075, 799, 1922, 35, 138, "Input", "ExpressionUUID" -> \
"a1a9a6c3-8b13-497d-9b07-1608ba277683"],
Cell[CellGroupData[{
Cell[31022, 838, 206, 5, 32, "Input", "ExpressionUUID" -> \
"8227a2b3-2288-46b8-9b40-e41cdb4deff0"],
Cell[31231, 845, 324, 8, 24, "Message", "ExpressionUUID" -> \
"bcb40f6a-c865-4482-ac5c-ecdeb38c089c"],
Cell[31558, 855, 202, 5, 32, "Output", "ExpressionUUID" -> \
"dbb568fd-5aef-4e1a-89e9-9e36bf981d23"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31809, 866, 213, 4, 44, "Subsection", "ExpressionUUID" -> \
"6569bdcf-82ee-4edf-9807-b414c16530df"],
Cell[CellGroupData[{
Cell[32047, 874, 1686, 29, 117, "Input", "ExpressionUUID" -> \
"5df38de1-a7e4-4ed5-83f2-2ba5965208fa"],
Cell[33736, 905, 155, 2, 32, "Output", "ExpressionUUID" -> \
"82c3dadd-9df1-4939-bd32-4818fe84b14f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33928, 912, 206, 5, 32, "Input", "ExpressionUUID" -> \
"2d4ff59d-572f-43c4-b242-44f5e12f7709"],
Cell[34137, 919, 159, 3, 32, "Output", "ExpressionUUID" -> \
"d8b31909-81dc-403d-b551-5abb164c21c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34333, 927, 184, 4, 32, "Input", "ExpressionUUID" -> \
"b402aa6d-b131-4996-9620-cc0264f3d21d"],
Cell[34520, 933, 157, 3, 32, "Output", "ExpressionUUID" -> \
"2f8cd01f-60f4-46c9-b7b7-2329dbbc23ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34714, 941, 230, 6, 32, "Input", "ExpressionUUID" -> \
"c44bcdd7-1eba-499d-8f41-c6725e3db5f4"],
Cell[34947, 949, 160, 3, 32, "Output", "ExpressionUUID" -> \
"6f2fbb1c-81a5-4934-a936-01932283ac6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35144, 957, 206, 5, 32, "Input", "ExpressionUUID" -> \
"b1dde261-e7c1-4235-bbeb-a83ea0d07dba"],
Cell[35353, 964, 185, 3, 32, "Output", "ExpressionUUID" -> \
"aa9d8930-4c99-41ec-b524-8aee0741aaa8"]
}, Open  ]],
Cell[35553, 970, 2451, 53, 180, "Input", "ExpressionUUID" -> \
"e7610343-0dce-41e5-9555-7d7bfeadab57"],
Cell[38007, 1025, 966, 23, 54, "Input", "ExpressionUUID" -> \
"ef60db1f-30c3-4b38-afec-0c4ce02696b9"],
Cell[38976, 1050, 207, 5, 32, "Input", "ExpressionUUID" -> \
"05a27c56-8cfc-4baf-9e4d-e269b3dee601"],
Cell[CellGroupData[{
Cell[39208, 1059, 202, 5, 32, "Input", "ExpressionUUID" -> \
"8741a064-949a-4f8a-9cbe-a0fbfc3b8c5a"],
Cell[39413, 1066, 178, 3, 24, "Print", "ExpressionUUID" -> \
"5f0343fb-7500-490d-a1ea-e3ce8043f561"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39628, 1074, 183, 4, 32, "Input", "ExpressionUUID" -> \
"0b316738-91f0-48e4-a4f4-0b09c07ec34e"],
Cell[39814, 1080, 158, 3, 32, "Output", "ExpressionUUID" -> \
"423cb3a1-2c48-44a0-a674-832213970ea0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40009, 1088, 212, 5, 32, "Input", "ExpressionUUID" -> \
"2fe50cb6-7fa7-410a-8e6e-30e3623c6ba5"],
Cell[40224, 1095, 161, 3, 24, "Print", "ExpressionUUID" -> \
"8eaecb7b-290c-47ae-9098-422f3ff004fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40422, 1103, 190, 4, 32, "Input", "ExpressionUUID" -> \
"74def726-c2c3-43e2-983b-ddba9b60aa5b"],
Cell[40615, 1109, 159, 3, 32, "Output", "ExpressionUUID" -> \
"a4b2166d-f220-4e0f-8874-b154d0980eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40811, 1117, 242, 5, 32, "Input", "ExpressionUUID" -> \
"23f0409e-ab0b-4bc3-bd50-28558e4e5d03"],
Cell[41056, 1124, 157, 3, 32, "Output", "ExpressionUUID" -> \
"d0004758-200a-4dc1-8fbf-9f31213ff933"]
}, Open  ]],
Cell[41228, 1130, 154, 3, 32, "Input", "ExpressionUUID" -> \
"8ed1974a-1dfa-4b5c-bca5-6effc7b88fc4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41431, 1139, 440, 9, 99, "Section", "ExpressionUUID" -> \
"f140666a-e7da-4291-8751-de3a531f6d36"],
Cell[41874, 1150, 1487, 27, 75, "Input", "ExpressionUUID" -> \
"bea4afe8-e927-4058-932a-9679654517b5"],
Cell[CellGroupData[{
Cell[43386, 1181, 236, 5, 32, "Input", "ExpressionUUID" -> \
"fac4382f-2c92-417a-b251-71323e048a55"],
Cell[43625, 1188, 157, 3, 32, "Output", "ExpressionUUID" -> \
"0a8fb271-5f88-4c67-b112-734c772da0f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43819, 1196, 184, 4, 32, "Input", "ExpressionUUID" -> \
"2cf8ee85-e560-46be-9568-cecfca91211b"],
Cell[44006, 1202, 158, 3, 32, "Output", "ExpressionUUID" -> \
"7e74cb57-5e64-43f3-a40c-8d9a88a9872a"]
}, Open  ]],
Cell[44179, 1208, 309, 8, 32, "Input", "ExpressionUUID" -> \
"378b73f0-7f33-4555-a205-9f7afabf9f85"],
Cell[CellGroupData[{
Cell[44513, 1220, 442, 12, 54, "Input", "ExpressionUUID" -> \
"6d989d71-e5ac-4869-baa9-39fa1dfd7845"],
Cell[44958, 1234, 211, 4, 32, "Output", "ExpressionUUID" -> \
"1bc7550e-0920-4ac6-b137-00fa100da0c8"]
}, Open  ]],
Cell[45184, 1241, 686, 16, 32, "Input", "ExpressionUUID" -> \
"8024345b-2958-4bce-9741-860dfc13ab22"],
Cell[CellGroupData[{
Cell[45895, 1261, 282, 9, 54, "Input", "ExpressionUUID" -> \
"3e8ee19d-df6e-40b1-89a5-52cb087c12d0"],
Cell[46180, 1272, 206, 4, 32, "Output", "ExpressionUUID" -> \
"26c8964e-844d-4657-8c5b-a4d8fd78ed8d"]
}, Open  ]],
Cell[46401, 1279, 436, 10, 32, "Input", "ExpressionUUID" -> \
"26f9a485-6bd9-42c4-b16a-3b27d82b4a61"],
Cell[46840, 1291, 239, 6, 32, "Input", "ExpressionUUID" -> \
"2a9b7523-5c8e-4f28-b2b4-c7029fa62a26"],
Cell[47082, 1299, 238, 6, 32, "Input", "ExpressionUUID" -> \
"7c1331ba-2cab-4ed1-b5ed-30b57d1f63a9"],
Cell[CellGroupData[{
Cell[47345, 1309, 186, 4, 32, "Input", "ExpressionUUID" -> \
"29f57b65-9512-4e41-b47b-032102548e5d"],
Cell[47534, 1315, 175, 3, 24, "Print", "ExpressionUUID" -> \
"377b4cd1-9e99-4164-8422-4b6bdfb0fc99"]
}, Open  ]],
Cell[47724, 1321, 537, 15, 32, "Input", "ExpressionUUID" -> \
"63fbe010-06cf-40a7-87f4-a5f09b8b3919"],
Cell[CellGroupData[{
Cell[48286, 1340, 258, 5, 32, "Input", "ExpressionUUID" -> \
"6ea52a36-1ec7-4617-8e41-ece99b7c8a7a"],
Cell[48547, 1347, 234, 4, 32, "Output", "ExpressionUUID" -> \
"37845a28-a941-4cba-937c-225ca0224172"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48818, 1356, 188, 4, 32, "Input", "ExpressionUUID" -> \
"6f2b2e23-0969-40a4-8941-dfcd944f3b72"],
Cell[49009, 1362, 156, 3, 32, "Output", "ExpressionUUID" -> \
"b6e3215d-2398-46e2-8e11-b04f3cd7487f"]
}, Open  ]],
Cell[49180, 1368, 214, 5, 32, "Input", "ExpressionUUID" -> \
"43435f38-b0ee-4d76-9f19-a4782a0c2b09"],
Cell[CellGroupData[{
Cell[49419, 1377, 172, 4, 32, "Input", "ExpressionUUID" -> \
"a032cd74-5c23-4032-afff-a78bc8f9e991"],
Cell[49594, 1383, 158, 3, 32, "Output", "ExpressionUUID" -> \
"b6a0c7fb-8cc1-4eb8-be94-bf336dc50a0f"]
}, Open  ]],
Cell[49767, 1389, 215, 5, 32, "Input", "ExpressionUUID" -> \
"7c9d7c81-0d5d-41d5-9b70-b90a95246b81"],
Cell[CellGroupData[{
Cell[50007, 1398, 174, 4, 32, "Input", "ExpressionUUID" -> \
"edb202b1-7a90-458e-9bb9-f54aa3f4439f"],
Cell[50184, 1404, 155, 3, 32, "Output", "ExpressionUUID" -> \
"560ef216-400b-4c15-b8ce-e7efa2ee4d59"]
}, Open  ]],
Cell[50354, 1410, 661, 15, 54, "Input", "ExpressionUUID" -> \
"235ae638-3904-4db8-b5d4-24b7eb069b30"],
Cell[CellGroupData[{
Cell[51040, 1429, 238, 5, 32, "Input", "ExpressionUUID" -> \
"44878cb9-d91a-400b-aad7-166c20e92c55"],
Cell[51281, 1436, 178, 3, 32, "Output", "ExpressionUUID" -> \
"f9ede91f-4a61-4553-b65f-ecee0ac1fbd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51496, 1444, 192, 4, 32, "Input", "ExpressionUUID" -> \
"ae95c7df-6358-449c-85db-32ef869d1eed"],
Cell[51691, 1450, 157, 3, 32, "Output", "ExpressionUUID" -> \
"aed2f419-304c-4ab8-8462-3dd49caa3a50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51885, 1458, 214, 5, 32, "Input", "ExpressionUUID" -> \
"2fb4bf8c-d5ea-491d-bff6-22cf1ac1f1af"],
Cell[52102, 1465, 157, 3, 32, "Output", "ExpressionUUID" -> \
"bea9b75c-e2a8-4843-b006-b1b5d84291df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52296, 1473, 161, 3, 44, "Subsection", "ExpressionUUID" -> \
"8477cc39-6122-4890-ade2-de5874d43c09"],
Cell[52460, 1478, 1514, 31, 96, "Input", "ExpressionUUID" -> \
"7f7d85ab-81a6-4311-b286-685b143bbc6b"],
Cell[CellGroupData[{
Cell[53999, 1513, 1016, 28, 117, "Input", "ExpressionUUID" -> \
"b8e85070-68c5-4eaa-8e7c-a786021bde3c"],
Cell[55018, 1543, 153, 3, 24, "Print", "ExpressionUUID" -> \
"7077408a-9db1-4c4e-b0e5-3d15c8a41f52"]
}, Open  ]],
Cell[55186, 1549, 2494, 46, 159, "Input", "ExpressionUUID" -> \
"e61885c4-0102-4084-b201-475b10c2d829"],
Cell[CellGroupData[{
Cell[57705, 1599, 443, 11, 32, "Input", "ExpressionUUID" -> \
"9f3b1d91-21c3-4c98-add1-f930010d37e3"],
Cell[58151, 1612, 175, 3, 24, "Print", "ExpressionUUID" -> \
"476ee6be-dd29-49fa-93dd-5d62221c7e29"]
}, Open  ]],
Cell[58341, 1618, 725, 15, 54, "Input", "ExpressionUUID" -> \
"130980b6-a2ae-44bc-a3bd-54106498a2ed"],
Cell[CellGroupData[{
Cell[59091, 1637, 399, 9, 96, "Input", "ExpressionUUID" -> \
"088f87b0-e7a4-45fe-ae49-0f2f7ad18b96"],
Cell[59493, 1648, 177, 3, 24, "Print", "ExpressionUUID" -> \
"8b6e00b5-4a6d-4568-9701-6cf3d40ca6f9"]
}, Open  ]],
Cell[59685, 1654, 417, 8, 32, "Input", "ExpressionUUID" -> \
"515b7757-bdec-4722-8b6d-f19067e04cdc"],
Cell[CellGroupData[{
Cell[60127, 1666, 744, 18, 75, "Input", "ExpressionUUID" -> \
"e8000dc8-bc00-4408-b33c-94826931baa2"],
Cell[60874, 1686, 158, 3, 32, "Output", "ExpressionUUID" -> \
"6b800704-cadf-49e5-840f-84f65af55cf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61069, 1694, 156, 3, 32, "Input", "ExpressionUUID" -> \
"a93392a1-a1d1-49bc-9a30-53a9a4eb4e4b"],
Cell[61228, 1699, 157, 3, 32, "Output", "ExpressionUUID" -> \
"06eda23f-4364-4eff-807e-f77a28484b9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61422, 1707, 445, 10, 96, "Input", "ExpressionUUID" -> \
"e7260c74-aaae-4797-832f-d7cad2599762"],
Cell[61870, 1719, 177, 3, 24, "Print", "ExpressionUUID" -> \
"4203c031-cc0b-4a39-bd5c-076750f8490a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62084, 1727, 442, 10, 96, "Input", "ExpressionUUID" -> \
"da70f635-7392-492d-a97c-bc6086b1e93d"],
Cell[62529, 1739, 176, 3, 24, "Print", "ExpressionUUID" -> \
"c38b793b-035d-40c6-95c7-3f770398d98a"]
}, Open  ]],
Cell[62720, 1745, 488, 12, 32, "Input", "ExpressionUUID" -> \
"9d570563-5aaa-4ef0-8d98-c51f98121825"],
Cell[CellGroupData[{
Cell[63233, 1761, 541, 13, 117, "Input", "ExpressionUUID" -> \
"17164330-14d7-453a-b72d-d24015ec6741"],
Cell[63777, 1776, 176, 3, 24, "Print", "ExpressionUUID" -> \
"3c95f89d-e064-4a80-ba25-750ec9b4c8bf"]
}, Open  ]],
Cell[63968, 1782, 941, 18, 75, "Input", "ExpressionUUID" -> \
"f154a24b-c03d-4446-b5f4-ebf0fbecd2c6"],
Cell[64912, 1802, 203, 5, 32, "Input", "ExpressionUUID" -> \
"3face885-cb17-4df8-930e-b13944eef182"],
Cell[65118, 1809, 380, 10, 75, "Input", "ExpressionUUID" -> \
"cd9d8917-4ca2-4f34-a168-10001829723b"],
Cell[CellGroupData[{
Cell[65523, 1823, 201, 5, 32, "Input", "ExpressionUUID" -> \
"816ee41d-1433-47f0-92e5-8879445d6b33"],
Cell[65727, 1830, 153, 3, 24, "Print", "ExpressionUUID" -> \
"b1718481-c764-4502-93ad-4e2a0629484e"]
}, Open  ]],
Cell[65895, 1836, 764, 15, 75, "Input", "ExpressionUUID" -> \
"bb1271a0-7310-4e55-957f-971aec6e9b52"],
Cell[66662, 1853, 203, 5, 32, "Input", "ExpressionUUID" -> \
"63dd2e50-cf15-4b2a-a612-e8cfda19f1a7"],
Cell[CellGroupData[{
Cell[66890, 1862, 518, 13, 96, "Input", "ExpressionUUID" -> \
"6faaf41f-57e9-43fd-b0b0-f98118fc0980"],
Cell[67411, 1877, 151, 3, 24, "Print", "ExpressionUUID" -> \
"39f8c814-af7c-40bb-baa8-61b6092a18f0"]
}, Open  ]],
Cell[67577, 1883, 900, 17, 54, "Input", "ExpressionUUID" -> \
"8cdc593c-97ba-4c67-8e7f-429cabd006a6"],
Cell[68480, 1902, 203, 5, 32, "Input", "ExpressionUUID" -> \
"82b94d46-93e5-4fbc-bc76-07b2b60c14cb"],
Cell[CellGroupData[{
Cell[68708, 1911, 583, 14, 96, "Input", "ExpressionUUID" -> \
"69b80804-d0a5-4ecf-b1ff-9e333c30ac0d"],
Cell[69294, 1927, 151, 3, 24, "Print", "ExpressionUUID" -> \
"3ebdb7e0-5624-4e72-acd4-0f513ae8dc5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69482, 1935, 186, 4, 32, "Input", "ExpressionUUID" -> \
"23ffd564-bf42-40b5-a458-aba8f08637d7"],
Cell[69671, 1941, 194, 4, 24, "Print", "ExpressionUUID" -> \
"0a0c57ca-1f51-4c09-a035-e17a120c56ef"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69914, 1951, 157, 3, 44, "Subsection", "ExpressionUUID" -> \
"56427af0-606e-4a8c-b4f3-ad6455d41bb3"],
Cell[70074, 1956, 3762, 79, 537, "Input", "ExpressionUUID" -> \
"884149bc-45dd-4aea-bf79-236f393dbcad"],
Cell[73839, 2037, 405, 9, 54, "Input", "ExpressionUUID" -> \
"f5eafab1-51de-4be2-8c0c-09442348c245"],
Cell[CellGroupData[{
Cell[74269, 2050, 1909, 44, 264, "Input", "ExpressionUUID" -> \
"6bdde454-eaf4-4105-950f-018b3302ef89"],
Cell[76181, 2096, 260, 5, 24, "Print", "ExpressionUUID" -> \
"ba72ef83-949b-47bc-a67c-a7008647978d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76478, 2106, 4319, 88, 537, "Input", "ExpressionUUID" -> \
"12780fd2-1bb4-479a-89b9-fcd475b1ed7f"],
Cell[80800, 2196, 234, 4, 24, "Print", "ExpressionUUID" -> \
"eb4bbc53-bcdf-440c-afbe-4c1cac9245e0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81095, 2207, 533, 10, 99, "Section", "ExpressionUUID" -> \
"8ab0c0e3-33bd-4a79-a211-91af762d2bcf"],
Cell[81631, 2219, 378, 9, 32, "Input", "ExpressionUUID" -> \
"699bc770-997d-4e55-9dba-c2259e53605a"],
Cell[82012, 2230, 328, 9, 32, "Input", "ExpressionUUID" -> \
"c6e5721c-c0b7-4cd7-b02b-69af7fe1f475"],
Cell[82343, 2241, 547, 10, 54, "Input", "ExpressionUUID" -> \
"bc72a728-1815-4fad-9d82-e13ef90a609c"],
Cell[CellGroupData[{
Cell[82915, 2255, 253, 6, 32, "Input", "ExpressionUUID" -> \
"a0c0f80b-13bc-41da-9e4e-1719c3d21cac"],
Cell[83171, 2263, 178, 3, 32, "Output", "ExpressionUUID" -> \
"abffb564-3db6-497e-9979-35efe802b657"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83386, 2271, 238, 5, 32, "Input", "ExpressionUUID" -> \
"4dbceeeb-03fa-470f-9202-44d1ba24c52c"],
Cell[83627, 2278, 174, 3, 32, "Output", "ExpressionUUID" -> \
"7d07ad80-dde5-46eb-8bb2-c2bdbc5c174e"]
}, Open  ]],
Cell[83816, 2284, 560, 13, 32, "Input", "ExpressionUUID" -> \
"8bc46b66-88c6-480c-86db-e7f77c09e01c"],
Cell[CellGroupData[{
Cell[84401, 2301, 185, 4, 32, "Input", "ExpressionUUID" -> \
"38cf8555-668f-4945-a609-7ee17cb0f8b8"],
Cell[84589, 2307, 158, 3, 32, "Output", "ExpressionUUID" -> \
"852fff62-333f-44f5-ad0c-7fa72bc6009b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84784, 2315, 186, 4, 32, "Input", "ExpressionUUID" -> \
"be73c114-3bc2-4670-8836-6729ab60a9d6"],
Cell[84973, 2321, 157, 3, 32, "Output", "ExpressionUUID" -> \
"7923939d-29fe-47f6-88dc-0e50b7e30116"]
}, Open  ]],
Cell[85145, 2327, 385, 8, 32, "Input", "ExpressionUUID" -> \
"92474977-2532-4ae3-b247-636d60d11f8f"],
Cell[85533, 2337, 203, 5, 32, "Input", "ExpressionUUID" -> \
"b2a8a125-406a-4116-af33-3251a71e79b0"],
Cell[85739, 2344, 239, 6, 32, "Input", "ExpressionUUID" -> \
"a6f7c550-7857-4665-a929-71431c5dac47"],
Cell[CellGroupData[{
Cell[86003, 2354, 131, 3, 32, "Input", "ExpressionUUID" -> \
"07cc00cd-99b9-44ad-81ed-e9406d42972e"],
Cell[86137, 2359, 179, 3, 32, "Output", "ExpressionUUID" -> \
"074701c4-00d7-4070-a6d9-54c5d6ad7817"]
}, Open  ]],
Cell[86331, 2365, 270, 7, 32, "Input", "ExpressionUUID" -> \
"77f33b2d-c6e8-4f51-8b21-4e5db091ffe2"],
Cell[86604, 2374, 297, 8, 32, "Input", "ExpressionUUID" -> \
"8123b280-968c-4a39-942b-c0e2e6abf191"],
Cell[86904, 2384, 282, 7, 32, "Input", "ExpressionUUID" -> \
"b757053f-f242-4a4a-a889-0579403b73f4"],
Cell[CellGroupData[{
Cell[87211, 2395, 83, 0, 32, "Input", "ExpressionUUID" -> \
"284d9e7f-77ed-4fbc-8191-878bf0db4778"],
Cell[87297, 2397, 266, 7, 32, "Output", "ExpressionUUID" -> \
"7ef9e7f1-3d52-4f7c-a070-2d9a3f0752bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87600, 2409, 1206, 24, 117, "Input", "ExpressionUUID" -> \
"c203fb68-041b-4149-b093-8fd7b4b4d815"],
Cell[88809, 2435, 159, 3, 32, "Output", "ExpressionUUID" -> \
"70299c10-21f5-4a7d-9206-e0f378eaa3d6"]
}, Open  ]],
Cell[88983, 2441, 1033, 17, 75, "Input", "ExpressionUUID" -> \
"c53d571b-d2af-480b-9d68-b015bf733243"],
Cell[CellGroupData[{
Cell[90041, 2462, 265, 6, 32, "Input", "ExpressionUUID" -> \
"1427136d-adc6-4c5c-bbd4-47c8a7c06834"],
Cell[90309, 2470, 282, 7, 32, "Output", "ExpressionUUID" -> \
"32e0f057-c13f-4747-a4f6-273e411fe762"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90628, 2482, 883, 18, 244, "Subsection", "ExpressionUUID" -> \
"8c4f2f46-0780-4618-8102-be73de04abb6"],
Cell[CellGroupData[{
Cell[91536, 2504, 366, 9, 32, "Input", "ExpressionUUID" -> \
"b1600b8d-b797-4459-b0fe-5810a55575bb"],
Cell[91905, 2515, 178, 3, 32, "Output", "ExpressionUUID" -> \
"279b6844-06c4-4bbf-a7f5-aa8c66bd6097"]
}, Open  ]],
Cell[92098, 2521, 707, 20, 96, "Input", "ExpressionUUID" -> \
"a4f2960e-d760-41fc-9b7d-4399d44a0474"],
Cell[CellGroupData[{
Cell[92830, 2545, 156, 3, 32, "Input", "ExpressionUUID" -> \
"95d46b7a-10a7-4dee-9345-0d7cd0e72cc0"],
Cell[92989, 2550, 259, 6, 32, "Output", "ExpressionUUID" -> \
"a3d94245-e229-47c9-92d0-66a4f6d89064"]
}, Open  ]],
Cell[93263, 2559, 232, 6, 32, "Input", "ExpressionUUID" -> \
"bd73e5c3-194f-45f5-896d-a8de1fdbde91"],
Cell[CellGroupData[{
Cell[93520, 2569, 158, 3, 32, "Input", "ExpressionUUID" -> \
"7ec62b65-c764-46b8-9ea7-0c51979bd4f7"],
Cell[93681, 2574, 323, 9, 32, "Output", "ExpressionUUID" -> \
"0fa69dfe-f20b-4b56-96bd-bf0733b5105a"]
}, Open  ]],
Cell[94019, 2586, 232, 6, 32, "Input", "ExpressionUUID" -> \
"0644b870-e901-49d7-94e7-ddafeb58076f"],
Cell[CellGroupData[{
Cell[94276, 2596, 158, 3, 32, "Input", "ExpressionUUID" -> \
"36d08b8b-c09d-4b52-949b-eb26f501d944"],
Cell[94437, 2601, 393, 11, 32, "Output", "ExpressionUUID" -> \
"87af9d9b-e582-473e-ac3e-0fc8e3cb9d48"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94879, 2618, 796, 13, 94, "Subsection", "ExpressionUUID" -> \
"bc1564ba-4f67-4240-9c86-73f82ab1e7e3"],
Cell[CellGroupData[{
Cell[95700, 2635, 1094, 23, 96, "Input", "ExpressionUUID" -> \
"a957dc8b-a741-4c04-a088-e700fae0f42a"],
Cell[96797, 2660, 750, 21, 74, "Output", "ExpressionUUID" -> \
"892d6792-419c-461a-98aa-2a0f6d059494"]
}, Open  ]],
Cell[97562, 2684, 325, 8, 32, "Input", "ExpressionUUID" -> \
"3739741d-39e1-4e17-9088-ae827e871163"],
Cell[CellGroupData[{
Cell[97912, 2696, 158, 3, 32, "Input", "ExpressionUUID" -> \
"539a878e-74bd-4618-9e88-2b0a1fd622e1"],
Cell[98073, 2701, 393, 11, 32, "Output", "ExpressionUUID" -> \
"a8bec8c7-77cb-4123-8571-931329a82b2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98503, 2717, 1264, 26, 96, "Input", "ExpressionUUID" -> \
"3fa050d0-0d26-47a2-9833-22fcb0f0be39"],
Cell[99770, 2745, 212, 5, 32, "Output", "ExpressionUUID" -> \
"7c4106cb-fe6f-4b5f-bc21-b49417e7c9ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100019, 2755, 880, 21, 117, "Input", "ExpressionUUID" -> \
"529ad12e-ebfd-4863-891d-555340c5c69f"],
Cell[100902, 2778, 177, 3, 32, "Output", "ExpressionUUID" -> \
"2fe62984-327d-4263-b438-762485c6315c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101128, 2787, 646, 11, 94, "Subsection", "ExpressionUUID" -> \
"1db51564-ca45-4136-81ea-0caeda2708d9"],
Cell[CellGroupData[{
Cell[101799, 2802, 798, 18, 96, "Input", "ExpressionUUID" -> \
"927649a2-db41-4319-8445-23a2d4f70e79"],
Cell[102600, 2822, 204, 4, 32, "Output", "ExpressionUUID" -> \
"04f1ae73-9309-4423-b232-9f6e8d78c235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102841, 2831, 798, 17, 75, "Input", "ExpressionUUID" -> \
"e3a36c89-8b2b-4fd2-9ae1-9590c7bd4f0f"],
Cell[103642, 2850, 231, 5, 32, "Output", "ExpressionUUID" -> \
"51366f2a-b947-49f2-8bb8-a3dadd8e59ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103910, 2860, 258, 7, 32, "Input", "ExpressionUUID" -> \
"36e31858-aaa3-4023-9e8a-4867e03a3c47"],
Cell[104171, 2869, 153, 3, 32, "Output", "ExpressionUUID" -> \
"aa751883-8e53-49d4-bcdc-8c97d5c8fef8"]
}, Open  ]],
Cell[104339, 2875, 538, 13, 32, "Input", "ExpressionUUID" -> \
"5aee5d26-3db6-4116-8fd2-5fa2f8daff26"],
Cell[CellGroupData[{
Cell[104902, 2892, 359, 10, 32, "Input", "ExpressionUUID" -> \
"b08a1843-b9be-4726-a468-b6dd1a4c4acc"],
Cell[105264, 2904, 230, 5, 32, "Output", "ExpressionUUID" -> \
"023f5948-5ac9-45c5-a5be-342cb861735d"]
}, Open  ]],
Cell[105509, 2912, 340, 8, 32, "Input", "ExpressionUUID" -> \
"9aade44e-b114-4279-a817-0a3cde0c8182"],
Cell[CellGroupData[{
Cell[105874, 2924, 413, 12, 32, "Input", "ExpressionUUID" -> \
"2db22195-c4f3-4c70-b97d-7268a018f652"],
Cell[106290, 2938, 395, 10, 32, "Output", "ExpressionUUID" -> \
"64c3443c-c9d1-40ae-a8b5-73209996069d"]
}, Open  ]],
Cell[106700, 2951, 243, 6, 32, "Input", "ExpressionUUID" -> \
"cfeb9ea2-e456-49c8-88ad-555669fda487"],
Cell[CellGroupData[{
Cell[106968, 2961, 343, 10, 32, "Input", "ExpressionUUID" -> \
"6d6867b7-fa99-4487-b2d2-7bf6debbb4e4"],
Cell[107314, 2973, 328, 9, 32, "Output", "ExpressionUUID" -> \
"ef5318c2-26ee-4207-a052-ff3ba1db6a15"]
}, Open  ]],
Cell[107657, 2985, 187, 4, 32, "Input", "ExpressionUUID" -> \
"3facc0a9-47c5-43af-9c9d-52b71a83c7f1"],
Cell[CellGroupData[{
Cell[107869, 2993, 156, 3, 32, "Input", "ExpressionUUID" -> \
"40e9c67e-e7d2-497a-b9b0-30f489a63329"],
Cell[108028, 2998, 268, 7, 32, "Output", "ExpressionUUID" -> \
"2c3fa0da-b59e-4d18-937a-ad00f749ece9"]
}, Open  ]],
Cell[108311, 3008, 244, 6, 32, "Input", "ExpressionUUID" -> \
"654af71c-8f7d-4821-b31b-c141a0c066dc"],
Cell[CellGroupData[{
Cell[108580, 3018, 275, 7, 32, "Input", "ExpressionUUID" -> \
"570ab83d-c1fd-4e54-897e-f8361406e6ee"],
Cell[108858, 3027, 251, 6, 32, "Output", "ExpressionUUID" -> \
"01714943-1f54-4bb4-a454-09d412322a17"]
}, Open  ]],
Cell[109124, 3036, 228, 5, 32, "Input", "ExpressionUUID" -> \
"2b8119d5-9a11-40aa-b192-b04e281bf22c"],
Cell[CellGroupData[{
Cell[109377, 3045, 230, 6, 32, "Input", "ExpressionUUID" -> \
"1a8f0476-6dc3-4fb4-9afa-ee3e2a194cca"],
Cell[109610, 3053, 223, 4, 32, "Output", "ExpressionUUID" -> \
"16be0c6a-61c3-42b7-b5a6-fc1edc8cecf7"]
}, Open  ]],
Cell[109848, 3060, 229, 5, 32, "Input", "ExpressionUUID" -> \
"a3098ca3-0f70-47ec-a16e-0681b55d33bc"],
Cell[CellGroupData[{
Cell[110102, 3069, 228, 6, 32, "Input", "ExpressionUUID" -> \
"d244e0db-36ad-4513-bf9a-9571f864a84e"],
Cell[110333, 3077, 212, 5, 32, "Output", "ExpressionUUID" -> \
"a321c222-cb29-487e-9fd4-bbe13c4eef4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110606, 3089, 528, 11, 99, "Section", "ExpressionUUID" -> \
"ac98b2f6-b29d-4d07-956c-c73c83922e7e"],
Cell[111137, 3102, 911, 18, 54, "Input", "ExpressionUUID" -> \
"88574636-ec94-46ab-a06f-38f458138295"],
Cell[CellGroupData[{
Cell[112073, 3124, 494, 12, 32, "Input", "ExpressionUUID" -> \
"84cd1210-867a-4906-8437-9e4fce80e855"],
Cell[CellGroupData[{
Cell[112592, 3140, 202, 4, 24, "Print", "ExpressionUUID" -> \
"bd82d9c4-cbb6-47e2-9f9d-179d6f4cf2cc"],
Cell[112797, 3146, 202, 4, 24, "Print", "ExpressionUUID" -> \
"c4c808c8-9e9d-4ae2-9686-1cf996b03794"],
Cell[113002, 3152, 201, 4, 24, "Print", "ExpressionUUID" -> \
"eb51100f-1526-42ec-990d-f8aa818f58b9"],
Cell[113206, 3158, 202, 4, 24, "Print", "ExpressionUUID" -> \
"2897a4a7-3ce4-4ff6-a801-89e8c60c9e39"],
Cell[113411, 3164, 202, 4, 24, "Print", "ExpressionUUID" -> \
"5647d9de-e555-4739-bcca-8bd9a2243d6d"],
Cell[113616, 3170, 204, 4, 24, "Print", "ExpressionUUID" -> \
"84e88151-2d80-4895-b497-6f33359934f6"],
Cell[113823, 3176, 204, 4, 24, "Print", "ExpressionUUID" -> \
"3f4127ee-ec72-445f-a856-d55afdd623e1"],
Cell[114030, 3182, 202, 4, 24, "Print", "ExpressionUUID" -> \
"19feab6f-7ae3-43dd-95d6-b1ec16533742"],
Cell[114235, 3188, 202, 4, 24, "Print", "ExpressionUUID" -> \
"7f667e93-85cb-4042-be22-06b7f597a8f6"],
Cell[114440, 3194, 203, 4, 24, "Print", "ExpressionUUID" -> \
"98cb09c5-d6db-4623-988f-f3f54b4a5f0f"]
}, Open  ]]
}, Open  ]],
Cell[114670, 3202, 7202, 151, 537, "Input", "ExpressionUUID" -> \
"03b26e24-e9ba-4079-a08f-ee233b01bfe2"],
Cell[CellGroupData[{
Cell[121897, 3357, 173, 4, 32, "Input", "ExpressionUUID" -> \
"fba2e8c8-f433-4ec0-a5f6-43f3505b009f"],
Cell[122073, 3363, 157, 3, 32, "Output", "ExpressionUUID" -> \
"9b1e5a4a-287d-4136-bf64-2f35e54acd35"]
}, Open  ]],
Cell[122245, 3369, 298, 7, 32, "Input", "ExpressionUUID" -> \
"b6abecfe-77b1-487e-a0c0-3d6c2de5763b"],
Cell[CellGroupData[{
Cell[122568, 3380, 156, 3, 32, "Input", "ExpressionUUID" -> \
"71625b50-7836-4af4-b605-4ddac4c1404f"],
Cell[122727, 3385, 295, 8, 32, "Output", "ExpressionUUID" -> \
"90c4d778-c92c-470a-90c9-a0c2ab0a2ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123059, 3398, 186, 4, 32, "Input", "ExpressionUUID" -> \
"08233248-f94c-4167-a85c-c95ee200f350"],
Cell[123248, 3404, 184, 4, 32, "Output", "ExpressionUUID" -> \
"57b5f767-c5f5-4ddf-bc1b-ddac02144db2"]
}, Open  ]],
Cell[123447, 3411, 823, 15, 54, "Input", "ExpressionUUID" -> \
"afbd5253-f345-4c79-916f-49e8a99d0a65"],
Cell[CellGroupData[{
Cell[124295, 3430, 805, 18, 117, "Input", "ExpressionUUID" -> \
"ad0795ca-9536-450c-bc6c-b96c710de1b9"],
Cell[CellGroupData[{
Cell[125125, 3452, 229, 4, 24, "Print", "ExpressionUUID" -> \
"52ce8354-3c86-4443-bfb4-9195f0d06bee"],
Cell[125357, 3458, 227, 4, 24, "Print", "ExpressionUUID" -> \
"6a067b4c-5400-47d9-8593-c923ccbb1f3b"],
Cell[125587, 3464, 231, 4, 24, "Print", "ExpressionUUID" -> \
"e7bce28e-ef37-4823-8058-00f183ab2900"],
Cell[125821, 3470, 238, 4, 24, "Print", "ExpressionUUID" -> \
"561922ee-102e-4f9c-9af3-b771e5a8e6bc"],
Cell[126062, 3476, 239, 4, 24, "Print", "ExpressionUUID" -> \
"fcd5a0e9-fe97-428a-af67-31340c198d33"]
}, Open  ]]
}, Open  ]],
Cell[126328, 3484, 282, 7, 32, "Input", "ExpressionUUID" -> \
"a99db6e0-fd2f-48e9-bb72-30a778148f82"],
Cell[126613, 3493, 318, 8, 32, "Input", "ExpressionUUID" -> \
"6004730c-0ac8-41d2-b807-87e16708cf27"],
Cell[126934, 3503, 522, 14, 75, "Input", "ExpressionUUID" -> \
"39bb392c-7839-4137-b665-9eebb124cac2"],
Cell[CellGroupData[{
Cell[127481, 3521, 181, 4, 32, "Input", "ExpressionUUID" -> \
"49d6a22a-0e47-44b5-926a-6cb7da73b1f2"],
Cell[127665, 3527, 319, 7, 32, "Output", "ExpressionUUID" -> \
"47a01464-5052-495d-8337-ea0e64fc38d9"]
}, Open  ]],
Cell[127999, 3537, 317, 8, 32, "Input", "ExpressionUUID" -> \
"11928eab-31c9-4119-9e2f-1f35a91281b1"],
Cell[128319, 3547, 222, 6, 32, "Input", "ExpressionUUID" -> \
"7504b77b-f4c2-45c8-a338-7f05a9e4f417"],
Cell[128544, 3555, 3159, 66, 432, "Input", "ExpressionUUID" -> \
"b390dd17-1f0d-4b6c-84b3-28b34ebe115b"],
Cell[CellGroupData[{
Cell[131728, 3625, 190, 4, 32, "Input", "ExpressionUUID" -> \
"06097b73-a296-4f78-91d3-a6d0aa65ef37"],
Cell[131921, 3631, 1267, 28, 194, "Output", "ExpressionUUID" -> \
"52de4512-9e98-4c30-a524-f0d7ed5990df"]
}, Open  ]],
Cell[133203, 3662, 906, 16, 54, "Input", "ExpressionUUID" -> \
"1b26bd11-dc05-424d-9838-aae2a2687923"],
Cell[CellGroupData[{
Cell[134134, 3682, 526, 14, 117, "Input", "ExpressionUUID" -> \
"f0e66192-90cf-4ead-ba79-ea5edd125de1"],
Cell[CellGroupData[{
Cell[134685, 3700, 204, 4, 24, "Print", "ExpressionUUID" -> \
"5634c74c-0b1c-4a75-9662-19b96e68892f"],
Cell[134892, 3706, 204, 4, 24, "Print", "ExpressionUUID" -> \
"70641f01-94ab-463c-b21e-8607c82f4e47"],
Cell[135099, 3712, 204, 4, 24, "Print", "ExpressionUUID" -> \
"e8754dd0-4a70-478d-a730-7a94ffd81d1d"],
Cell[135306, 3718, 206, 4, 24, "Print", "ExpressionUUID" -> \
"9012749c-3a6b-4f87-bbf7-aab3b5c9d5fa"],
Cell[135515, 3724, 206, 4, 24, "Print", "ExpressionUUID" -> \
"e5629313-475d-46f1-86ea-cdf3fef0299b"]
}, Open  ]]
}, Open  ]],
Cell[135748, 3732, 438, 10, 32, "Input", "ExpressionUUID" -> \
"3291bc2e-4794-40a6-b583-7556b0777129"],
Cell[CellGroupData[{
Cell[136211, 3746, 575, 15, 117, "Input", "ExpressionUUID" -> \
"40c1fbfc-6d37-458b-a51c-8b5a1cf98177"],
Cell[CellGroupData[{
Cell[136811, 3765, 228, 4, 24, "Print", "ExpressionUUID" -> \
"8f61a14c-8057-4499-8a7a-0594435b8d44"],
Cell[137042, 3771, 225, 4, 24, "Print", "ExpressionUUID" -> \
"30466e33-88bb-4ed3-9903-d82b01d569b4"],
Cell[137270, 3777, 226, 4, 24, "Print", "ExpressionUUID" -> \
"be28c458-8e9b-49f7-a3f5-ee9cba4903b8"],
Cell[137499, 3783, 226, 4, 24, "Print", "ExpressionUUID" -> \
"6c588a5e-7acc-45b6-9d3c-d9cd222a0d7d"],
Cell[137728, 3789, 228, 4, 24, "Print", "ExpressionUUID" -> \
"61482f05-97e1-435c-9460-f7c02bdfc25f"]
}, Open  ]]
}, Open  ]],
Cell[137983, 3797, 922, 16, 96, "Input", "ExpressionUUID" -> \
"8923461e-03cd-4068-9bb0-c04f3192d835"],
Cell[138908, 3815, 849, 17, 54, "Input", "ExpressionUUID" -> \
"e4726b48-b97e-4ac1-b044-424d8249da6c"],
Cell[CellGroupData[{
Cell[139782, 3836, 1252, 31, 222, "Input", "ExpressionUUID" -> \
"bc947b4c-8b82-4608-941e-a29f77af6afb"],
Cell[CellGroupData[{
Cell[141059, 3871, 266, 5, 24, "Print", "ExpressionUUID" -> \
"49800451-373c-4e35-96af-190057833b98"],
Cell[141328, 3878, 370, 9, 24, "Print", "ExpressionUUID" -> \
"270ca25e-37fc-46da-bfe1-cb061b968148"],
Cell[141701, 3889, 370, 9, 24, "Print", "ExpressionUUID" -> \
"4c1b13e4-0e28-4455-ae72-df07dbd89e9d"],
Cell[142074, 3900, 380, 9, 24, "Print", "ExpressionUUID" -> \
"0cf98856-ca51-4fb7-9ed9-e0e4582fcb8c"],
Cell[142457, 3911, 266, 5, 24, "Print", "ExpressionUUID" -> \
"41904db1-83c7-4382-bd24-ed18f15cb3cb"],
Cell[142726, 3918, 370, 9, 24, "Print", "ExpressionUUID" -> \
"dec7addb-b6ab-4413-ae86-7a88d0f71792"],
Cell[143099, 3929, 372, 9, 24, "Print", "ExpressionUUID" -> \
"9d3906ec-a77d-47b1-97bc-351e4b4bc112"],
Cell[143474, 3940, 380, 9, 24, "Print", "ExpressionUUID" -> \
"0a11f8b0-3e37-4d3d-8a9c-15cf64c7cb32"],
Cell[143857, 3951, 268, 5, 24, "Print", "ExpressionUUID" -> \
"f989463a-fe5d-4b4c-8436-1c47faa3889a"],
Cell[144128, 3958, 370, 9, 24, "Print", "ExpressionUUID" -> \
"dc9f8c0c-68f1-42dd-9f8e-6f97e778cf20"],
Cell[144501, 3969, 372, 9, 24, "Print", "ExpressionUUID" -> \
"b7040048-7640-41cf-85e5-f674c900bcfe"],
Cell[144876, 3980, 380, 9, 24, "Print", "ExpressionUUID" -> \
"77325f40-fd70-4b99-9251-fda3bda5ccb6"],
Cell[145259, 3991, 262, 4, 24, "Print", "ExpressionUUID" -> \
"d7b40c35-4e17-40bb-8fe8-ceff9d01e1ab"],
Cell[145524, 3997, 370, 9, 24, "Print", "ExpressionUUID" -> \
"9bd63b93-ef14-4d46-8340-dd55ebb53032"],
Cell[145897, 4008, 370, 9, 24, "Print", "ExpressionUUID" -> \
"2ec497e0-c684-4612-bd34-0496489a539e"],
Cell[146270, 4019, 379, 9, 24, "Print", "ExpressionUUID" -> \
"847e3a23-8d2d-4f61-8c16-38c09a532828"],
Cell[146652, 4030, 268, 5, 24, "Print", "ExpressionUUID" -> \
"48b8adea-47e6-41f6-9a16-22c9df74e0c9"],
Cell[146923, 4037, 370, 9, 24, "Print", "ExpressionUUID" -> \
"7d681c9a-c41b-4172-950d-b9788ab3bf73"],
Cell[147296, 4048, 372, 9, 24, "Print", "ExpressionUUID" -> \
"f6f0ef67-0bf1-464a-87c5-ae00d865ae2b"],
Cell[147671, 4059, 380, 9, 24, "Print", "ExpressionUUID" -> \
"51426f2d-49ee-4024-b677-c0157aa2f721"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148100, 4074, 2500, 56, 327, "Input", "ExpressionUUID" -> \
"ee2734aa-b9b6-476f-b630-84a5b9c60417"],
Cell[CellGroupData[{
Cell[150625, 4134, 305, 7, 24, "Print", "ExpressionUUID" -> \
"d9e62d71-1c57-40e1-9d64-a8e308f4b580"],
Cell[150933, 4143, 303, 7, 24, "Print", "ExpressionUUID" -> \
"583ff62b-2afd-4272-9a21-e8833b4a6d64"],
Cell[151239, 4152, 305, 7, 24, "Print", "ExpressionUUID" -> \
"d19515d0-eae0-44c7-8d41-febc6cfec4ea"],
Cell[151547, 4161, 305, 7, 24, "Print", "ExpressionUUID" -> \
"aaf67e3f-575e-4395-ae27-8922db5f8c2b"],
Cell[151855, 4170, 307, 7, 24, "Print", "ExpressionUUID" -> \
"136728aa-1bec-425c-9840-c7e5edc5d868"],
Cell[152165, 4179, 414, 8, 24, "Print", "ExpressionUUID" -> \
"b1feefdf-ba85-4542-ac66-7c82883735a5"]
}, Open  ]]
}, Open  ]],
Cell[152606, 4191, 539, 11, 32, "Input", "ExpressionUUID" -> \
"e6435cab-c64c-49ef-a262-ba46b893468c"],
Cell[153148, 4204, 154, 3, 32, "Input", "ExpressionUUID" -> \
"21febd75-e3a6-4461-9e92-751563216d34"],
Cell[153305, 4209, 748, 20, 344, "Subsection", "ExpressionUUID" -> \
"71ea04a1-acbe-42fa-bf67-0e07d75afc9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154090, 4234, 229, 4, 64, "Section", "ExpressionUUID" -> \
"5f5d5191-740e-4ef5-a728-e63e23da6a8d"],
Cell[154322, 4240, 1013, 22, 180, "Input", "ExpressionUUID" -> \
"919aabc6-9a20-43dc-9e28-2155a7191e51"],
Cell[155338, 4264, 200, 4, 32, "Input", "ExpressionUUID" -> \
"b76e1163-1bcf-49ec-b1e7-0aa4c6f06236"],
Cell[155541, 4270, 260, 7, 32, "Input", "ExpressionUUID" -> \
"6d69b8f0-5697-4733-b4ea-f238a7ca058f"],
Cell[CellGroupData[{
Cell[155826, 4281, 182, 4, 32, "Input", "ExpressionUUID" -> \
"f996a31b-2d60-48d6-bc94-69be1bf7a408"],
Cell[156011, 4287, 205, 4, 32, "Output", "ExpressionUUID" -> \
"39f8a2b7-25c9-4f99-bcab-4f5fa80b258a"]
}, Open  ]],
Cell[156231, 4294, 908, 16, 75, "Input", "ExpressionUUID" -> \
"80157199-0863-4ed0-8c80-f4a79dba0289"],
Cell[157142, 4312, 233, 7, 32, "Input", "ExpressionUUID" -> \
"868bbeae-1ead-47b4-851f-68f401e6ef43"],
Cell[CellGroupData[{
Cell[157400, 4323, 180, 4, 32, "Input", "ExpressionUUID" -> \
"34d9330e-cc21-49f0-a4e2-f69c1cd65775"],
Cell[157583, 4329, 207, 4, 32, "Output", "ExpressionUUID" -> \
"f9a28077-c7d6-4d33-8e2d-007b71260acb"]
}, Open  ]],
Cell[157805, 4336, 613, 12, 32, "Input", "ExpressionUUID" -> \
"2fdb8205-2dd2-45ee-9b7d-08b9e3298a90"],
Cell[158421, 4350, 518, 12, 32, "Input", "ExpressionUUID" -> \
"74dfcb32-d0fe-434c-a348-f6564120a762"],
Cell[158942, 4364, 453, 12, 32, "Input", "ExpressionUUID" -> \
"86e2ad3a-3498-4e54-b5d5-3b8765cbf1a7"],
Cell[159398, 4378, 288, 8, 32, "Input", "ExpressionUUID" -> \
"35a3f7a0-2cfd-4955-b6ee-7edec9e319e2"],
Cell[159689, 4388, 401, 8, 32, "Input", "ExpressionUUID" -> \
"0cdd7df2-100f-4c8d-8412-bb6a8672bc7e"],
Cell[CellGroupData[{
Cell[160115, 4400, 442, 13, 32, "Input", "ExpressionUUID" -> \
"2d2162f6-eb88-4624-8866-e8441af4bbc6"],
Cell[160560, 4415, 126403, 2054, 245, "Output", "ExpressionUUID" -> \
"f64e3eba-7b36-4dbd-a3ea-90051463afc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287000, 6474, 374, 10, 32, "Input", "ExpressionUUID" -> \
"b4d5a919-82bf-4d89-8332-e7e6d923f2d0"],
Cell[287377, 6486, 7165, 136, 243, "Output", "ExpressionUUID" -> \
"41a9be97-4ac4-419c-9ef8-ff6fcec87d3d"]
}, Open  ]],
Cell[294557, 6625, 477, 12, 32, "Input", "ExpressionUUID" -> \
"c736fd3b-059a-4285-9579-6595caf75eaa"],
Cell[295037, 6639, 224, 6, 32, "Input", "ExpressionUUID" -> \
"a36fb7e9-9143-42a5-ad5c-48cc7f764081"],
Cell[295264, 6647, 490, 13, 75, "Input", "ExpressionUUID" -> \
"7465bf30-5f9a-4fa6-9d62-619d33f8bc40"],
Cell[CellGroupData[{
Cell[295779, 6664, 125, 2, 32, "Input", "ExpressionUUID" -> \
"921a5518-cfc0-4f95-ad3b-a1eeb3bb9a2e"],
Cell[295907, 6668, 462, 13, 32, "Output", "ExpressionUUID" -> \
"36a09101-d265-4b72-a01c-7b0395c01790"]
}, Open  ]],
Cell[296384, 6684, 314, 8, 32, "Input", "ExpressionUUID" -> \
"f13a4f59-539b-4270-a974-94821e7629c6"],
Cell[CellGroupData[{
Cell[296723, 6696, 182, 4, 32, "Input", "ExpressionUUID" -> \
"653aaeb2-cfbb-4fb1-8db4-5e7d327c1fe4"],
Cell[296908, 6702, 346, 8, 32, "Output", "ExpressionUUID" -> \
"16081d0d-1675-4721-8c0a-0a2f3ef8598a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297291, 6715, 217, 5, 32, "Input", "ExpressionUUID" -> \
"276cea12-6d54-49b0-a040-c3a52343d233"],
Cell[297511, 6722, 1423, 39, 245, "Output", "ExpressionUUID" -> \
"cf444e2d-ca13-4e30-9211-e457a1ae4d64"]
}, Open  ]],
Cell[298949, 6764, 1827, 46, 222, "Input", "ExpressionUUID" -> \
"465376b0-f201-44dd-a042-d7fd03a3b1e4"],
Cell[CellGroupData[{
Cell[300801, 6814, 190, 4, 32, "Input", "ExpressionUUID" -> \
"c2fb66a5-e46e-4b8c-a8f3-6265a468e13c"],
Cell[300994, 6820, 17119, 309, 235, "Output", "ExpressionUUID" -> \
"e7c33d4f-186d-4332-aec6-f47f57e8cc0f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[318162, 7135, 258, 4, 64, "Section", "ExpressionUUID" -> \
"3e23f283-87e1-4cbb-a735-ff1e058a93ff"],
Cell[318423, 7141, 3210, 57, 222, "Input", "ExpressionUUID" -> \
"b2d05d51-8cea-4870-bff7-2d6bfe4ed43d"],
Cell[321636, 7200, 776, 19, 54, "Input", "ExpressionUUID" -> \
"3b5b3ae5-74e2-47c7-94a9-04f68fff3ef9"],
Cell[322415, 7221, 154, 3, 32, "Input", "ExpressionUUID" -> \
"934a515f-407f-485a-8693-79ce1d0e546d"],
Cell[322572, 7226, 446, 11, 96, "Input", "ExpressionUUID" -> \
"c50f5635-9a9e-4d27-8227-1af55650d18a"],
Cell[323021, 7239, 354, 10, 32, "Input", "ExpressionUUID" -> \
"091d27bb-2ff8-4519-a6dc-9314f0614434"],
Cell[CellGroupData[{
Cell[323400, 7253, 189, 4, 32, "Input", "ExpressionUUID" -> \
"a41e0d56-60d7-4509-b88d-9b452ccb9f88"],
Cell[323592, 7259, 237, 4, 24, "Print", "ExpressionUUID" -> \
"28d1f2d0-c78d-417b-8a67-e42a24867c8d"]
}, Open  ]],
Cell[323844, 7266, 356, 8, 32, "Input", "ExpressionUUID" -> \
"501cf91f-e31f-41b2-8ae3-5d505a42a60d"],
Cell[324203, 7276, 287, 7, 32, "Input", "ExpressionUUID" -> \
"92f5aba6-b50a-40dc-9a45-98d3b19c3603"],
Cell[324493, 7285, 262, 7, 32, "Input", "ExpressionUUID" -> \
"edb482da-b30b-485d-ba5a-7147b95a983c"],
Cell[324758, 7294, 417, 10, 32, "Input", "ExpressionUUID" -> \
"fd2f9dc3-934e-443f-a129-8bc688b015e8"],
Cell[CellGroupData[{
Cell[325200, 7308, 231, 5, 32, "Input", "ExpressionUUID" -> \
"edfdaa5b-4bc8-4a15-b87f-97af936fba65"],
Cell[325434, 7315, 347, 6, 32, "Output", "ExpressionUUID" -> \
"2e6ca4fe-f2cd-4959-9400-34628a8dfc51"]
}, Open  ]],
Cell[325796, 7324, 382, 8, 32, "Input", "ExpressionUUID" -> \
"603d8f90-68e6-4160-bdf1-29e9a6d2382d"],
Cell[326181, 7334, 597, 14, 54, "Input", "ExpressionUUID" -> \
"1e1254e6-68ac-46d3-a440-228af35a920e"],
Cell[CellGroupData[{
Cell[326803, 7352, 344, 7, 32, "Input", "ExpressionUUID" -> \
"187132e1-6336-4561-abe1-33439d1547ef"],
Cell[327150, 7361, 289, 5, 32, "Output", "ExpressionUUID" -> \
"6579ab09-acc7-4137-b588-253464806111"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327476, 7371, 226, 5, 32, "Input", "ExpressionUUID" -> \
"982107af-803a-4d0f-9da3-5636b7dc5695"],
Cell[327705, 7378, 226, 4, 32, "Output", "ExpressionUUID" -> \
"0746a1e7-97cd-40bc-8ce4-11226c1dd501"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327968, 7387, 249, 6, 32, "Input", "ExpressionUUID" -> \
"d5b7889e-3976-4f61-84bc-c678cd331318"],
Cell[328220, 7395, 211, 4, 32, "Output", "ExpressionUUID" -> \
"cde8348b-8b20-4e98-9ba0-9fc55070ec78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328468, 7404, 242, 5, 32, "Input", "ExpressionUUID" -> \
"63c67b16-9150-47fa-bfc9-2020a87867e4"],
Cell[328713, 7411, 196, 3, 32, "Output", "ExpressionUUID" -> \
"330049ee-e0d8-4ba8-af57-e22547c8004b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328946, 7419, 889, 17, 179, "Subsubsection", "ExpressionUUID" -> \
"9264fa6e-7995-45f4-a262-e865fe92602f"],
Cell[329838, 7438, 50034, 828, 258, "Input", "ExpressionUUID" -> \
"dcc42f45-9f54-4cef-891a-dc1ca9215c66"]
}, Open  ]],
Cell[379887, 8269, 1423, 42, 683, "Subsubsection", "ExpressionUUID" -> \
"f07d94f7-c0b1-4866-b340-927bb9b180f0"]
}, Open  ]]
}, Open  ]]
}
]
*)

